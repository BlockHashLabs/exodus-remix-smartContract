{
	"id": "09e8b95bfe6863a4b090a45644015d18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"ExodusERC20Token/OlympusERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nimport \"./SafeMath.sol\";\n\nimport \"./IERC20.sol\";\nimport \"./IOHM.sol\";\nimport \"./IERC20Permit.sol\";\n\nimport \"./ERC20Permit.sol\";\nimport \"./OlympusAccessControlled.sol\";\n\ncontract ExodusERC20Token is ERC20Permit, IEXO, ExodusAccessControlled {\n    using SafeMath for uint256;\n\n    constructor(address _authority)\n        ERC20(\"Exodus\", \"EXO\", 9)\n        ERC20Permit(\"Exodus\")\n        ExodusAccessControlled(IExodusAuthority(_authority))\n    {}\n\n    function mint(address account_, uint256 amount_) external override onlyVault {\n        _mint(account_, amount_);\n    }\n\n    function burn(uint256 amount) external override {\n        _burn(msg.sender, amount);\n    }\n\n    function burnFrom(address account_, uint256 amount_) external override {\n        _burnFrom(account_, amount_);\n    }\n\n    function _burnFrom(address account_, uint256 amount_) internal {\n        uint256 decreasedAllowance_ = allowance(account_, msg.sender).sub(\n            amount_,\n            \"ERC20: burn amount exceeds allowance\"\n        );\n\n        _approve(account_, msg.sender, decreasedAllowance_);\n        _burn(account_, amount_);\n    }\n}\n"
			},
			"ExodusERC20Token/OlympusAccessControlled.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.7.5;\n\nimport \"./IOlympusAuthority.sol\";\n\nabstract contract ExodusAccessControlled {\n    /* ========== EVENTS ========== */\n\n    event AuthorityUpdated(IExodusAuthority indexed authority);\n\n    string UNAUTHORIZED = \"UNAUTHORIZED\"; // save gas\n\n    /* ========== STATE VARIABLES ========== */\n\n    IExodusAuthority public authority;\n\n    /* ========== Constructor ========== */\n\n    constructor(IExodusAuthority _authority) {\n        authority = _authority;\n        emit AuthorityUpdated(_authority);\n    }\n\n    /* ========== MODIFIERS ========== */\n\n    modifier onlyGovernor() {\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\n        _;\n    }\n\n    modifier onlyGuardian() {\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\n        _;\n    }\n\n    modifier onlyPolicy() {\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\n        _;\n    }\n\n    modifier onlyVault() {\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\n        _;\n    }\n\n    /* ========== GOV ONLY ========== */\n\n    function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {\n        authority = _newAuthority;\n        emit AuthorityUpdated(_newAuthority);\n    }\n}\n"
			},
			"ExodusERC20Token/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.5;\n\nimport \"./IERC20Permit.sol\";\nimport \"./ERC20.sol\";\nimport \"./EIP712.sol\";\nimport \"./ECDSA.sol\";\nimport \"./Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private immutable _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"
			},
			"ExodusERC20Token/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.5;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as th xe allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"ExodusERC20Token/IOHM.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./IERC20.sol\";\n\ninterface IEXO is IERC20 {\n    function mint(address account_, uint256 amount_) external;\n\n    function burn(uint256 amount) external;\n\n    function burnFrom(address account_, uint256 amount_) external;\n}\n"
			},
			"ExodusERC20Token/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"ExodusERC20Token/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\n        if (a > 3) {\n            c = a;\n            uint256 b = add(div(a, 2), 1);\n            while (b < c) {\n                c = b;\n                b = div(add(div(a, b), b), 2);\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }\n}\n"
			},
			"ExodusERC20Token/IOlympusAuthority.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IExodusAuthority {\n    /* ========== EVENTS ========== */\n\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n\n    event GovernorPulled(address indexed from, address indexed to);\n    event GuardianPulled(address indexed from, address indexed to);\n    event PolicyPulled(address indexed from, address indexed to);\n    event VaultPulled(address indexed from, address indexed to);\n\n    /* ========== VIEW ========== */\n\n    function governor() external view returns (address);\n\n    function guardian() external view returns (address);\n\n    function policy() external view returns (address);\n\n    function vault() external view returns (address);\n}\n"
			},
			"ExodusERC20Token/Counters.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nimport \"./SafeMath.sol\";\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n"
			},
			"ExodusERC20Token/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.5;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        // Check the signature length\n        // - case 65: r,s,v signature (standard)\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else if (signature.length == 64) {\n            bytes32 r;\n            bytes32 vs;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly {\n                r := mload(add(signature, 0x20))\n                vs := mload(add(signature, 0x40))\n            }\n            return tryRecover(hash, r, vs);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s;\n        uint8 v;\n        assembly {\n            s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n            v := add(shr(255, vs), 27)\n        }\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"
			},
			"ExodusERC20Token/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.5;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = chainID;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        if (chainID == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"
			},
			"ExodusERC20Token/ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity >=0.7.5;\n\nimport \"./SafeMath.sol\";\n\nimport \"./IERC20.sol\";\n\nabstract contract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    // TODO comment actual hash value.\n    bytes32 private constant ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256(\"ERC20Token\");\n\n    mapping(address => uint256) internal _balances;\n\n    mapping(address => mapping(address => uint256)) internal _allowances;\n\n    uint256 internal _totalSupply;\n\n    string internal _name;\n\n    string internal _symbol;\n\n    uint8 internal immutable _decimals;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            msg.sender,\n            _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\")\n        );\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")\n        );\n        return true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address(0), account, amount);\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _beforeTokenTransfer(\n        address from_,\n        address to_,\n        uint256 amount_\n    ) internal virtual {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ExodusERC20Token/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusERC20Token/Counters.sol\":88:936  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusERC20Token/Counters.sol\":88:936  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ad06e8c4994fc55d559eb7452920ca55849139070bdada372524bfe6e53b41564736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad06e8c4994fc55d559eb7452920ca55849139070bdada372524bfe6e53b41564736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD0 PUSH15 0x8C4994FC55D559EB7452920CA55849 SGT SWAP1 PUSH17 0xBDADA372524BFE6E53B41564736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "88:848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad06e8c4994fc55d559eb7452920ca55849139070bdada372524bfe6e53b41564736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD0 PUSH15 0x8C4994FC55D559EB7452920CA55849 SGT SWAP1 PUSH17 0xBDADA372524BFE6E53B41564736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "88:848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 88,
									"end": 936,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ad06e8c4994fc55d559eb7452920ca55849139070bdada372524bfe6e53b41564736f6c63430007050033",
									".code": [
										{
											"begin": 88,
											"end": 936,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 88,
											"end": 936,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 88,
											"end": 936,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 936,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/Counters.sol\":{\"keccak256\":\"0x2723e1522fb9088bb9ee8d3f20e9f3b04bc38daf127ef1dc624e61a88cbf48de\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b52e187f74d2be83d893b2b47f866878504b14ba04834cb5e3d06219c5ab5673\",\"dweb:/ipfs/QmcYVMhAunHXNU55TGZGkSKATbDCNTgs42u4q5At8NN4Ce\"]},\"ExodusERC20Token/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusERC20Token/ECDSA.sol\":264:8750  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusERC20Token/ECDSA.sol\":264:8750  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220925e3239894aef24b05060be61ede3d230149bc19b7912b60d82627f9d58716664736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220925e3239894aef24b05060be61ede3d230149bc19b7912b60d82627f9d58716664736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0x5E ORIGIN CODECOPY DUP10 0x4A 0xEF 0x24 0xB0 POP PUSH1 0xBE PUSH2 0xEDE3 0xD2 ADDRESS EQ SWAP12 0xC1 SWAP12 PUSH26 0x12B60D82627F9D58716664736F6C634300070500330000000000 ",
							"sourceMap": "264:8486:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220925e3239894aef24b05060be61ede3d230149bc19b7912b60d82627f9d58716664736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0x5E ORIGIN CODECOPY DUP10 0x4A 0xEF 0x24 0xB0 POP PUSH1 0xBE PUSH2 0xEDE3 0xD2 ADDRESS EQ SWAP12 0xC1 SWAP12 PUSH26 0x12B60D82627F9D58716664736F6C634300070500330000000000 ",
							"sourceMap": "264:8486:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220925e3239894aef24b05060be61ede3d230149bc19b7912b60d82627f9d58716664736f6c63430007050033",
									".code": [
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/EIP712.sol": {
				"EIP712": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]},\"ExodusERC20Token/EIP712.sol\":{\"keccak256\":\"0x76bfc700bb36030b1e9c73abc9b024eea9632c4538f0eedca7f15ae062b4581c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5a92ca1f712919f5da7f70fabfa55626f772f6e455510a49b2b55ec0632315\",\"dweb:/ipfs/Qme3YZHzQgeAZ7m8tB9zWdRLopRqNsBppKVj9cpKuAaLBE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"ExodusERC20Token/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExodusERC20Token/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 573,
								"contract": "ExodusERC20Token/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 579,
								"contract": "ExodusERC20Token/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 581,
								"contract": "ExodusERC20Token/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 583,
								"contract": "ExodusERC20Token/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 585,
								"contract": "ExodusERC20Token/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/Counters.sol\":{\"keccak256\":\"0x2723e1522fb9088bb9ee8d3f20e9f3b04bc38daf127ef1dc624e61a88cbf48de\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b52e187f74d2be83d893b2b47f866878504b14ba04834cb5e3d06219c5ab5673\",\"dweb:/ipfs/QmcYVMhAunHXNU55TGZGkSKATbDCNTgs42u4q5At8NN4Ce\"]},\"ExodusERC20Token/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]},\"ExodusERC20Token/EIP712.sol\":{\"keccak256\":\"0x76bfc700bb36030b1e9c73abc9b024eea9632c4538f0eedca7f15ae062b4581c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5a92ca1f712919f5da7f70fabfa55626f772f6e455510a49b2b55ec0632315\",\"dweb:/ipfs/Qme3YZHzQgeAZ7m8tB9zWdRLopRqNsBppKVj9cpKuAaLBE\"]},\"ExodusERC20Token/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"ExodusERC20Token/ERC20Permit.sol\":{\"keccak256\":\"0x652e9ebde967277c422d494f1696e735864ea171b04f210f1a9356553b800d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c501477f99535423eeb0617e706d78fa9fd5b50d4cdec4f069a922f1bc4e26\",\"dweb:/ipfs/QmTKQShGC5NYbYfENQ1pKqedGmMdiBXm86SVdykrKwTXF1\"]},\"ExodusERC20Token/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExodusERC20Token/IERC20Permit.sol\":{\"keccak256\":\"0x681e969fed243296a88805a5c99bc934b6149f0310ce7761a9cbd988f2cc139a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c274384e15d6fe8eeb1eb4a8468162ca96d7135e0714f9ac050883e9dfebb58d\",\"dweb:/ipfs/QmXmafvMmYq6xvWwvKwXSHdmpjYDwYd1CqBjLhRi1qSPxj\"]},\"ExodusERC20Token/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 573,
								"contract": "ExodusERC20Token/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 579,
								"contract": "ExodusERC20Token/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 581,
								"contract": "ExodusERC20Token/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 583,
								"contract": "ExodusERC20Token/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 585,
								"contract": "ExodusERC20Token/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1054,
								"contract": "ExodusERC20Token/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Counter)8_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)8_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)8_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 7,
										"contract": "ExodusERC20Token/ERC20Permit.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as th xe allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as th xe allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/IERC20Permit.sol\":{\"keccak256\":\"0x681e969fed243296a88805a5c99bc934b6149f0310ce7761a9cbd988f2cc139a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c274384e15d6fe8eeb1eb4a8468162ca96d7135e0714f9ac050883e9dfebb58d\",\"dweb:/ipfs/QmXmafvMmYq6xvWwvKwXSHdmpjYDwYd1CqBjLhRi1qSPxj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/IOHM.sol": {
				"IEXO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/IOHM.sol\":\"IEXO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExodusERC20Token/IOHM.sol\":{\"keccak256\":\"0x72e5b4ed781e0eed921534e2a4e3f3460ac25367d68e09c00d59117ecbe1e5af\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7b416f043fd9a0a8a2b52e3f44730726270e6469a82d68203bb4fad1475a7205\",\"dweb:/ipfs/QmcH7F68HfLqK6PT6b3JHYRizJ3V4YbuV8MuXTLTPrSid2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/IOlympusAuthority.sol": {
				"IExodusAuthority": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "GovernorPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "GovernorPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "GuardianPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "GuardianPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "PolicyPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "PolicyPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "VaultPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "VaultPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "guardian",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "policy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"governor()": "0c340a24",
							"guardian()": "452a9320",
							"policy()": "0505c8c9",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"GovernorPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"GovernorPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"GuardianPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"GuardianPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"PolicyPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"PolicyPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"VaultPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"VaultPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/IOlympusAuthority.sol\":\"IExodusAuthority\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/IOlympusAuthority.sol\":{\"keccak256\":\"0x81a1f77da7ddb3bf1defad03673098cc8d01fbb1ea29d9ef4968b205746f041c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://2ae99a51e64ed363058e8b18c33b1f498f84d3588f71c442e427fc0021a79a04\",\"dweb:/ipfs/QmTkMMtvLKnhqEtRWCimY2r3oY5B8FpHqmG5fuhbLQKRJg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/OlympusAccessControlled.sol": {
				"ExodusAccessControlled": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IExodusAuthority",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "AuthorityUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "_newAuthority",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"setAuthority(address)": "7a9e5e4b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IExodusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/OlympusAccessControlled.sol\":\"ExodusAccessControlled\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/IOlympusAuthority.sol\":{\"keccak256\":\"0x81a1f77da7ddb3bf1defad03673098cc8d01fbb1ea29d9ef4968b205746f041c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://2ae99a51e64ed363058e8b18c33b1f498f84d3588f71c442e427fc0021a79a04\",\"dweb:/ipfs/QmTkMMtvLKnhqEtRWCimY2r3oY5B8FpHqmG5fuhbLQKRJg\"]},\"ExodusERC20Token/OlympusAccessControlled.sol\":{\"keccak256\":\"0xe08e1633d46748f33f8e4bab7cc743f5f427174aa54ad4b9066e8106aad66b69\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://01010d4ba59a88af6b3dd2fe46d06ce141effdf0421dfaa8dc91b8d3cc895654\",\"dweb:/ipfs/QmaPzow7X4CNeCNUd2vgwDpbnqvHxCnQV3L2kfAFu56qAX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1418,
								"contract": "ExodusERC20Token/OlympusAccessControlled.sol:ExodusAccessControlled",
								"label": "UNAUTHORIZED",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1420,
								"contract": "ExodusERC20Token/OlympusAccessControlled.sol:ExodusAccessControlled",
								"label": "authority",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IExodusAuthority)1408"
							}
						],
						"types": {
							"t_contract(IExodusAuthority)1408": {
								"encoding": "inplace",
								"label": "contract IExodusAuthority",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/OlympusERC20.sol": {
				"ExodusERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_authority",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IExodusAuthority",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "AuthorityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "_newAuthority",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusERC20Token/ERC20Permit.sol\":971:1066  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n    /* \"ExodusERC20Token/ERC20Permit.sol\":918:1066  bytes32 private immutable _PERMIT_TYPEHASH =... */\n  0x0140\n  mstore\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":255:291  string UNAUTHORIZED = \"UNAUTHORIZED\" */\n  0x01a0\n    /* \"ExodusERC20Token/OlympusERC20.sol\":231:1178  contract ExodusERC20Token is ERC20Permit, IEXO, ExodusAccessControlled {... */\n  0x40\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":255:291  string UNAUTHORIZED = \"UNAUTHORIZED\" */\n  mstore\n  0x0c\n    /* \"ExodusERC20Token/OlympusERC20.sol\":231:1178  contract ExodusERC20Token is ERC20Permit, IEXO, ExodusAccessControlled {... */\n  0x0160\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":255:291  string UNAUTHORIZED = \"UNAUTHORIZED\" */\n  dup2\n  swap1\n  mstore\n  shl(0xa2, 0x15539055551213d492569151)\n  0x0180\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x06\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"ExodusERC20Token/OlympusERC20.sol\":341:504  constructor(address _authority)... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload\n    /* \"ExodusERC20Token/ERC20Permit.sol\":1298:1350  constructor(string memory name) EIP712(name, \"1\") {} */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x06\n  dup1\n  dup3\n  mstore\n  shl(0xd0, 0x45786f647573)\n    /* \"ExodusERC20Token/OlympusERC20.sol\":341:504  constructor(address _authority)... */\n  0x20\n    /* \"ExodusERC20Token/ERC20Permit.sol\":1298:1350  constructor(string memory name) EIP712(name, \"1\") {} */\n  dup4\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":2340:2986  constructor(string memory name, string memory version) {... */\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  dup7\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  dup2\n  dup4\n  add\n  mstore\n    /* \"ExodusERC20Token/ERC20.sol\":586:777  constructor(... */\n  dup6\n  mload\n  dup1\n  dup8\n  add\n  dup8\n  mstore\n  swap4\n  dup5\n  mstore\n  dup4\n  dup3\n  add\n  swap3\n  dup4\n  mstore\n  dup6\n  mload\n  dup1\n  dup8\n  add\n  swap1\n  swap7\n  mstore\n  0x03\n  dup1\n  dup8\n  mstore\n  shl(0xe8, 0x45584f)\n  swap3\n  dup8\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"ExodusERC20Token/ERC20.sol\":699:712  _name = name_ */\n  dup4\n  mload\n    /* \"ExodusERC20Token/OlympusERC20.sol\":341:504  constructor(address _authority)... */\n  dup8\n  swap7\n    /* \"ExodusERC20Token/ERC20Permit.sol\":1298:1350  constructor(string memory name) EIP712(name, \"1\") {} */\n  dup7\n  swap6\n    /* \"ExodusERC20Token/EIP712.sol\":2340:2986  constructor(string memory name, string memory version) {... */\n  swap3\n  swap5\n    /* \"ExodusERC20Token/ERC20.sol\":586:777  constructor(... */\n  swap3\n  swap4\n  swap1\n  swap3\n    /* \"ExodusERC20Token/OlympusERC20.sol\":404:405  9 */\n  0x09\n  swap3\n    /* \"ExodusERC20Token/ERC20.sol\":699:712  _name = name_ */\n  tag_11\n  swap3\n    /* \"ExodusERC20Token/ERC20.sol\":586:777  constructor(... */\n  swap2\n  swap1\n    /* \"ExodusERC20Token/ERC20.sol\":699:712  _name = name_ */\n  tag_2\n  jump\t// in\ntag_11:\n  pop\n    /* \"ExodusERC20Token/ERC20.sol\":722:739  _symbol = symbol_ */\n  dup2\n  mload\n  tag_12\n  swap1\n    /* \"ExodusERC20Token/ERC20.sol\":722:729  _symbol */\n  0x04\n  swap1\n    /* \"ExodusERC20Token/ERC20.sol\":722:739  _symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_12:\n  pop\n    /* \"ExodusERC20Token/ERC20.sol\":749:770  _decimals = decimals_ */\n  0xf8\n  shl\n  0xff00000000000000000000000000000000000000000000000000000000000000\n  and\n  0x80\n  mstore\n  pop\n  pop\n    /* \"ExodusERC20Token/EIP712.sol\":2514:2536  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"ExodusERC20Token/EIP712.sol\":2570:2595  keccak256(bytes(version)) */\n  dup3\n  mload\n  swap2\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"ExodusERC20Token/EIP712.sol\":2751:2776  _HASHED_NAME = hashedName */\n  0xe0\n  dup3\n  swap1\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":2786:2817  _HASHED_VERSION = hashedVersion */\n  0x0100\n  dup2\n  swap1\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":2464:2473  chainid() */\n  chainid\n    /* \"ExodusERC20Token/EIP712.sol\":2827:2853  _CACHED_CHAIN_ID = chainID */\n  0xc0\n  dup2\n  swap1\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":2464:2473  chainid() */\n  swap2\n    /* \"ExodusERC20Token/EIP712.sol\":2514:2536  keccak256(bytes(name)) */\n  swap1\n    /* \"ExodusERC20Token/EIP712.sol\":2624:2741  keccak256(... */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"ExodusERC20Token/EIP712.sol\":2890:2948  _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  tag_14\n    /* \"ExodusERC20Token/EIP712.sol\":2624:2741  keccak256(... */\n  dup2\n    /* \"ExodusERC20Token/EIP712.sol\":2514:2536  keccak256(bytes(name)) */\n  dup5\n    /* \"ExodusERC20Token/EIP712.sol\":2570:2595  keccak256(bytes(version)) */\n  dup5\n    /* \"ExodusERC20Token/EIP712.sol\":2890:2911  _buildDomainSeparator */\n  tag_15\n    /* \"ExodusERC20Token/EIP712.sol\":2890:2948  _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  jump\t// in\ntag_14:\n    /* \"ExodusERC20Token/EIP712.sol\":2863:2948  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  0xa0\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":2958:2979  _TYPE_HASH = typeHash */\n  0x0120\n  mstore\n  pop\n  pop\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":495:504  authority */\n  0x07\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":495:517  authority = _authority */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup8\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":532:560  AuthorityUpdated(_authority) */\n  mload(0x40)\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":495:517  authority = _authority */\n  swap1\n  swap5\n  pop\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":532:560  AuthorityUpdated(_authority) */\n  0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad\n  swap4\n  pop\n  0x00\n  swap3\n  pop\n  swap1\n  pop\n  log2\n    /* \"ExodusERC20Token/OlympusAccessControlled.sol\":444:567  constructor(IExodusAuthority _authority) {... */\n  pop\n    /* \"ExodusERC20Token/OlympusERC20.sol\":341:504  constructor(address _authority)... */\n  pop\n    /* \"ExodusERC20Token/OlympusERC20.sol\":231:1178  contract ExodusERC20Token is ERC20Permit, IEXO, ExodusAccessControlled {... */\n  jump(tag_19)\n    /* \"ExodusERC20Token/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\ntag_15:\n    /* \"ExodusERC20Token/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n  0x40\n  dup1\n  mload\n  0x20\n  dup1\n  dup3\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n  dup1\n  dup3\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x60\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":3653:3662  chainid() */\n  chainid\n    /* \"ExodusERC20Token/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n  0x80\n  dup4\n  add\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":3760:3764  this */\n  address\n    /* \"ExodusERC20Token/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n  0xa0\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n  dup1\n  dup5\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0xc0\n  swap1\n  swap3\n  add\n  swap1\n  mstore\n    /* \"ExodusERC20Token/EIP712.sol\":3689:3767  keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n  swap1\n    /* \"ExodusERC20Token/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\n  jump\t// out\n    /* \"ExodusERC20Token/OlympusERC20.sol\":231:1178  contract ExodusERC20Token is ERC20Permit, IEXO, ExodusAccessControlled {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_22\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_25)\ntag_22:\n  dup3\n  0x1f\n  lt\n  tag_23\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_25)\ntag_23:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_25\n  jumpi\n  swap2\n  dup3\n  add\ntag_24:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_24)\ntag_25:\n  pop\n  tag_26\n  swap3\n  swap2\n  pop\n  tag_27\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_27:\ntag_28:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_26\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_28)\ntag_19:\n  shr(0xf8, mload(0x80))\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xb8c8d0d478c56b61296da8683cc5119d1520a308cf11accdcc3ff14cb1d77999\")\n  assignImmutable(\"0x5ade3da6b1e878dacd678731417229d3052ad3d883d603995a413e3104e44893\")\n  assignImmutable(\"0xd1731c384d2c8ba1eafa1dee7436362fec5c2705b14e910ce09d6ba0a10fd695\")\n  assignImmutable(\"0xa15d3280aa3e4a045ba4928ae092d0b698801fe0fe2e296d74f795d639cb63ba\")\n  assignImmutable(\"0x7ee9b50c980554e091f5df8085692358417b660affc08e545e624793708cbe01\")\n  assignImmutable(\"0x28bbb0207f31d945816623d3302c5bf67e35f3d933c3b03a2cbc30cfa7ce31d8\")\n  assignImmutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ExodusERC20Token/OlympusERC20.sol\":231:1178  contract ExodusERC20Token is ERC20Permit, IEXO, ExodusAccessControlled {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xbf7e214f\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x7a9e5e4b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x39509351\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ExodusERC20Token/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_30:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_30)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ExodusERC20Token/ERC20.sol\":1622:1786  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_36\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ExodusERC20Token/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ExodusERC20Token/ERC20.sol\":1792:2181  function transferFrom(... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_41\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2348:2461  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_8:\n      tag_37\n      tag_45\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":2187:2398  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"ExodusERC20Token/OlympusERC20.sol\":510:628  function mint(address account_, uint256 amount_) external override onlyVault {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"ExodusERC20Token/OlympusERC20.sol\":634:724  function burn(uint256 amount) external override {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      calldataload\n      tag_54\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_57\n      jump\t// in\n        /* \"ExodusERC20Token/OlympusERC20.sol\":730:846  function burnFrom(address account_, uint256 amount_) external override {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_60\n      jump\t// in\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1108:1272  function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {... */\n    tag_14:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_63\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2098:2224  function nonces(address owner) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_66\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":870:955  function symbol() public view returns (string memory) {... */\n    tag_16:\n      tag_28\n      tag_68\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":2404:2712  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_17:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_75\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":1291:1461  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_18:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_78\n      jump\t// in\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":359:392  IExodusAuthority public authority */\n    tag_19:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1411:2037  function permit(... */\n    tag_20:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_83\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":1467:1616  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_86\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_29:\n        /* \"ExodusERC20Token/ERC20.sol\":852:857  _name */\n      0x03\n        /* \"ExodusERC20Token/ERC20.sol\":845:857  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20.sol\":820:833  string memory */\n      0x60\n      swap4\n        /* \"ExodusERC20Token/ERC20.sol\":845:857  return _name */\n      swap1\n      swap3\n        /* \"ExodusERC20Token/ERC20.sol\":852:857  _name */\n      swap1\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":845:857  return _name */\n      dup4\n      add\n        /* \"ExodusERC20Token/ERC20.sol\":852:857  _name */\n      dup3\n        /* \"ExodusERC20Token/ERC20.sol\":845:857  return _name */\n      dup3\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ExodusERC20Token/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_87:\n      swap1\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":1622:1786  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_36:\n        /* \"ExodusERC20Token/ERC20.sol\":1705:1709  bool */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":1721:1758  _approve(msg.sender, spender, amount) */\n      tag_92\n        /* \"ExodusERC20Token/ERC20.sol\":1730:1740  msg.sender */\n      caller\n        /* \"ExodusERC20Token/ERC20.sol\":1742:1749  spender */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":1751:1757  amount */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":1721:1729  _approve */\n      tag_93\n        /* \"ExodusERC20Token/ERC20.sol\":1721:1758  _approve(msg.sender, spender, amount) */\n      jump\t// in\n    tag_92:\n      pop\n        /* \"ExodusERC20Token/ERC20.sol\":1775:1779  true */\n      0x01\n        /* \"ExodusERC20Token/ERC20.sol\":1622:1786  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n    tag_38:\n        /* \"ExodusERC20Token/ERC20.sol\":1135:1147  _totalSupply */\n      sload(0x02)\n        /* \"ExodusERC20Token/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":1792:2181  function transferFrom(... */\n    tag_41:\n        /* \"ExodusERC20Token/ERC20.sol\":1928:1932  bool */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":1944:1980  _transfer(sender, recipient, amount) */\n      tag_96\n        /* \"ExodusERC20Token/ERC20.sol\":1954:1960  sender */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":1962:1971  recipient */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":1973:1979  amount */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":1944:1953  _transfer */\n      tag_97\n        /* \"ExodusERC20Token/ERC20.sol\":1944:1980  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_96:\n        /* \"ExodusERC20Token/ERC20.sol\":1990:2153  _approve(... */\n      tag_98\n        /* \"ExodusERC20Token/ERC20.sol\":2012:2018  sender */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":2032:2042  msg.sender */\n      caller\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_99\n        /* \"ExodusERC20Token/ERC20.sol\":2092:2098  amount */\n      dup6\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2075  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2067  _allowances */\n      0x01\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2075  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":2076:2086  msg.sender */\n      caller\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2087  _allowances[sender][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2091  _allowances[sender][msg.sender].sub */\n      tag_100\n        /* \"ExodusERC20Token/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_99:\n        /* \"ExodusERC20Token/ERC20.sol\":1990:1998  _approve */\n      tag_93\n        /* \"ExodusERC20Token/ERC20.sol\":1990:2153  _approve(... */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"ExodusERC20Token/ERC20.sol\":2170:2174  true */\n      0x01\n        /* \"ExodusERC20Token/ERC20.sol\":1792:2181  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"ExodusERC20Token/ERC20.sol\":1034:1043  _decimals */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"ExodusERC20Token/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2348:2461  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_45:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2408:2415  bytes32 */\n      0x00\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2434:2454  _domainSeparatorV4() */\n      tag_103\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2434:2452  _domainSeparatorV4 */\n      tag_104\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2434:2454  _domainSeparatorV4() */\n      jump\t// in\n    tag_103:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2427:2454  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2348:2461  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":2187:2398  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"ExodusERC20Token/ERC20.sol\":2300:2310  msg.sender */\n      caller\n        /* \"ExodusERC20Token/ERC20.sol\":2275:2279  bool */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":2321:2344  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20.sol\":2321:2332  _allowances */\n      0x01\n        /* \"ExodusERC20Token/ERC20.sol\":2321:2344  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":2321:2353  _allowances[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ExodusERC20Token/ERC20.sol\":2275:2279  bool */\n      swap1\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":2291:2370  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_92\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":2312:2319  spender */\n      dup6\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":2321:2369  _allowances[msg.sender][spender].add(addedValue) */\n      tag_99\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":2358:2368  addedValue */\n      dup7\n        /* \"ExodusERC20Token/ERC20.sol\":2321:2357  _allowances[msg.sender][spender].add */\n      tag_108\n        /* \"ExodusERC20Token/ERC20.sol\":2321:2369  _allowances[msg.sender][spender].add(addedValue) */\n      jump\t// in\n        /* \"ExodusERC20Token/OlympusERC20.sol\":510:628  function mint(address account_, uint256 amount_) external override onlyVault {... */\n    tag_51:\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1010:1019  authority */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1010:1025  authority.vault */\n      and\n      0xfbfa77cf\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1010:1027  authority.vault() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      mload\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1029:1041  UNAUTHORIZED */\n      0x06\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":996:1027  msg.sender == authority.vault() */\n      and\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":996:1006  msg.sender */\n      caller\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":996:1027  msg.sender == authority.vault() */\n      eq\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":988:1042  require(msg.sender == authority.vault(), UNAUTHORIZED) */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup3\n      sload\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup5\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap2\n      and\n      div\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap2\n      dup3\n      swap2\n      0x44\n      swap1\n      swap2\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n      pop\n        /* \"ExodusERC20Token/OlympusERC20.sol\":597:621  _mint(account_, amount_) */\n      tag_119\n        /* \"ExodusERC20Token/OlympusERC20.sol\":603:611  account_ */\n      dup3\n        /* \"ExodusERC20Token/OlympusERC20.sol\":613:620  amount_ */\n      dup3\n        /* \"ExodusERC20Token/OlympusERC20.sol\":597:602  _mint */\n      tag_120\n        /* \"ExodusERC20Token/OlympusERC20.sol\":597:621  _mint(account_, amount_) */\n      jump\t// in\n    tag_119:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":510:628  function mint(address account_, uint256 amount_) external override onlyVault {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/OlympusERC20.sol\":634:724  function burn(uint256 amount) external override {... */\n    tag_54:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":692:717  _burn(msg.sender, amount) */\n      tag_122\n        /* \"ExodusERC20Token/OlympusERC20.sol\":698:708  msg.sender */\n      caller\n        /* \"ExodusERC20Token/OlympusERC20.sol\":710:716  amount */\n      dup3\n        /* \"ExodusERC20Token/OlympusERC20.sol\":692:697  _burn */\n      tag_123\n        /* \"ExodusERC20Token/OlympusERC20.sol\":692:717  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_122:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":634:724  function burn(uint256 amount) external override {... */\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":1260:1278  _balances[account] */\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":1234:1241  uint256 */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":1260:1278  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"ExodusERC20Token/OlympusERC20.sol\":730:846  function burnFrom(address account_, uint256 amount_) external override {... */\n    tag_60:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":811:839  _burnFrom(account_, amount_) */\n      tag_119\n        /* \"ExodusERC20Token/OlympusERC20.sol\":821:829  account_ */\n      dup3\n        /* \"ExodusERC20Token/OlympusERC20.sol\":831:838  amount_ */\n      dup3\n        /* \"ExodusERC20Token/OlympusERC20.sol\":811:820  _burnFrom */\n      tag_127\n        /* \"ExodusERC20Token/OlympusERC20.sol\":811:839  _burnFrom(account_, amount_) */\n      jump\t// in\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1108:1272  function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {... */\n    tag_63:\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":672:681  authority */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":672:690  authority.governor */\n      and\n      0x0c340a24\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":672:692  authority.governor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      mload\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":694:706  UNAUTHORIZED */\n      0x06\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      and\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":658:668  msg.sender */\n      caller\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      eq\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":650:707  require(msg.sender == authority.governor(), UNAUTHORIZED) */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup3\n      sload\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup5\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap2\n      and\n      div\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap2\n      dup3\n      swap2\n      0x44\n      swap1\n      swap2\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_133:\n      pop\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1194:1203  authority */\n      0x07\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1194:1219  authority = _newAuthority */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1234:1265  AuthorityUpdated(_newAuthority) */\n      mload(0x40)\n      0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":1108:1272  function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {... */\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2098:2224  function nonces(address owner) public view virtual override returns (uint256) {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2193:2207  _nonces[owner] */\n      dup2\n      and\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2167:2174  uint256 */\n      0x00\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2193:2207  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2193:2200  _nonces */\n      0x05\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2193:2207  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2193:2217  _nonces[owner].current() */\n      tag_139\n      swap1\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2193:2215  _nonces[owner].current */\n      tag_140\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2193:2217  _nonces[owner].current() */\n      jump\t// in\n    tag_139:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2186:2217  return _nonces[owner].current() */\n      swap3\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2098:2224  function nonces(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":870:955  function symbol() public view returns (string memory) {... */\n    tag_68:\n        /* \"ExodusERC20Token/ERC20.sol\":941:948  _symbol */\n      0x04\n        /* \"ExodusERC20Token/ERC20.sol\":934:948  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20.sol\":909:922  string memory */\n      0x60\n      swap4\n        /* \"ExodusERC20Token/ERC20.sol\":934:948  return _symbol */\n      swap1\n      swap3\n        /* \"ExodusERC20Token/ERC20.sol\":941:948  _symbol */\n      swap1\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":934:948  return _symbol */\n      dup4\n      add\n        /* \"ExodusERC20Token/ERC20.sol\":941:948  _symbol */\n      dup3\n        /* \"ExodusERC20Token/ERC20.sol\":934:948  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n        /* \"ExodusERC20Token/ERC20.sol\":2404:2712  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_75:\n        /* \"ExodusERC20Token/ERC20.sol\":2497:2501  bool */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":2513:2684  _approve(... */\n      tag_92\n        /* \"ExodusERC20Token/ERC20.sol\":2535:2545  msg.sender */\n      caller\n        /* \"ExodusERC20Token/ERC20.sol\":2559:2566  spender */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n        /* \"ExodusERC20Token/ERC20.sol\":2617:2632  subtractedValue */\n      dup6\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ExodusERC20Token/ERC20.sol\":2592:2602  msg.sender */\n      caller\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2603  _allowances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2591  _allowances */\n      0x01\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2603  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2612  _allowances[msg.sender][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2616  _allowances[msg.sender][spender].sub */\n      tag_100\n        /* \"ExodusERC20Token/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"ExodusERC20Token/ERC20.sol\":1291:1461  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_78:\n        /* \"ExodusERC20Token/ERC20.sol\":1377:1381  bool */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":1393:1433  _transfer(msg.sender, recipient, amount) */\n      tag_92\n        /* \"ExodusERC20Token/ERC20.sol\":1403:1413  msg.sender */\n      caller\n        /* \"ExodusERC20Token/ERC20.sol\":1415:1424  recipient */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":1426:1432  amount */\n      dup5\n        /* \"ExodusERC20Token/ERC20.sol\":1393:1402  _transfer */\n      tag_97\n        /* \"ExodusERC20Token/ERC20.sol\":1393:1433  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n        /* \"ExodusERC20Token/OlympusAccessControlled.sol\":359:392  IExodusAuthority public authority */\n    tag_80:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1411:2037  function permit(... */\n    tag_83:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1646:1654  deadline */\n      dup4\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1627:1642  block.timestamp */\n      timestamp\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1627:1654  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1619:1688  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n      tag_151\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332305065726d69743a206578706972656420646561646c696e65000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_151:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1699:1717  bytes32 structHash */\n      0x00\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1741:1757  _PERMIT_TYPEHASH */\n      immutable(\"0xb8c8d0d478c56b61296da8683cc5119d1520a308cf11accdcc3ff14cb1d77999\")\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1759:1764  owner */\n      dup9\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1766:1773  spender */\n      dup9\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1775:1780  value */\n      dup9\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1782:1798  _useNonce(owner) */\n      tag_152\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1792:1797  owner */\n      dup13\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1782:1791  _useNonce */\n      tag_153\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1782:1798  _useNonce(owner) */\n      jump\t// in\n    tag_152:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1800:1808  deadline */\n      dup10\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1730:1809  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1720:1810  keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1699:1810  bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1821:1833  bytes32 hash */\n      0x00\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1836:1864  _hashTypedDataV4(structHash) */\n      tag_154\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1853:1863  structHash */\n      dup3\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1836:1852  _hashTypedDataV4 */\n      tag_155\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1836:1864  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_154:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1821:1864  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1875:1889  address signer */\n      0x00\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1892:1920  ECDSA.recover(hash, v, r, s) */\n      tag_156\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1906:1910  hash */\n      dup3\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1912:1913  v */\n      dup8\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1915:1916  r */\n      dup8\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1918:1919  s */\n      dup8\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1892:1905  ECDSA.recover */\n      tag_157\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1892:1920  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_156:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1875:1920  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1948:1953  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1938:1953  signer == owner */\n      and\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1938:1944  signer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1938:1953  signer == owner */\n      and\n      eq\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1930:1988  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332305065726d69743a20696e76616c6964207369676e61747572650000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_158:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1999:2030  _approve(owner, spender, value) */\n      tag_159\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2008:2013  owner */\n      dup11\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2015:2022  spender */\n      dup11\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2024:2029  value */\n      dup11\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1999:2007  _approve */\n      tag_93\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1999:2030  _approve(owner, spender, value) */\n      jump\t// in\n    tag_159:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":1411:2037  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":1467:1616  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":1582:1600  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":1556:1563  uint256 */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":1582:1600  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20.sol\":1582:1593  _allowances */\n      0x01\n        /* \"ExodusERC20Token/ERC20.sol\":1582:1600  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":1582:1609  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":1467:1616  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":4074:4444  function _approve(... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":4205:4224  owner != address(0) */\n      dup4\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":4197:4265  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":4283:4304  spender != address(0) */\n      dup3\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":4275:4343  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":4354:4372  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20.sol\":4354:4365  _allowances */\n      0x01\n        /* \"ExodusERC20Token/ERC20.sol\":4354:4372  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":4354:4381  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":4354:4390  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ExodusERC20Token/ERC20.sol\":4405:4437  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ExodusERC20Token/ERC20.sol\":4074:4444  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":2718:3278  function _transfer(... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":2853:2873  sender != address(0) */\n      dup4\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":2845:2915  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":2933:2956  recipient != address(0) */\n      dup3\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":2925:2996  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"ExodusERC20Token/ERC20.sol\":3007:3054  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_167\n        /* \"ExodusERC20Token/ERC20.sol\":3028:3034  sender */\n      dup4\n        /* \"ExodusERC20Token/ERC20.sol\":3036:3045  recipient */\n      dup4\n        /* \"ExodusERC20Token/ERC20.sol\":3047:3053  amount */\n      dup4\n        /* \"ExodusERC20Token/ERC20.sol\":3007:3027  _beforeTokenTransfer */\n      tag_199\n        /* \"ExodusERC20Token/ERC20.sol\":3007:3054  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_167:\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_169\n        /* \"ExodusERC20Token/ERC20.sol\":3107:3113  amount */\n      dup2\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3102  _balances[sender] */\n      dup7\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3094  _balances */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3102  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3106  _balances[sender].sub */\n      tag_100\n        /* \"ExodusERC20Token/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3065:3082  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3065:3074  _balances */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3065:3082  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":3065:3156  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ExodusERC20Token/ERC20.sol\":3189:3209  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ExodusERC20Token/ERC20.sol\":3189:3221  _balances[recipient].add(amount) */\n      tag_170\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":3214:3220  amount */\n      dup3\n        /* \"ExodusERC20Token/ERC20.sol\":3189:3213  _balances[recipient].add */\n      tag_108\n        /* \"ExodusERC20Token/ERC20.sol\":3189:3221  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3166:3186  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3166:3175  _balances */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3166:3186  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":3166:3221  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ExodusERC20Token/ERC20.sol\":3236:3271  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ExodusERC20Token/ERC20.sol\":3166:3186  _balances[recipient] */\n      swap2\n      swap4\n        /* \"ExodusERC20Token/ERC20.sol\":3236:3271  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ExodusERC20Token/ERC20.sol\":2718:3278  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/SafeMath.sol\":477:694  function sub(... */\n    tag_100:\n        /* \"ExodusERC20Token/SafeMath.sol\":593:600  uint256 */\n      0x00\n        /* \"ExodusERC20Token/SafeMath.sol\":628:640  errorMessage */\n      dup2\n        /* \"ExodusERC20Token/SafeMath.sol\":620:626  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"ExodusERC20Token/SafeMath.sol\":612:641  require(b <= a, errorMessage) */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_173:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_175\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_173)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_176\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_176:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n      pop\n      pop\n      pop\n        /* \"ExodusERC20Token/SafeMath.sol\":663:668  a - b */\n      swap1\n      sub\n      swap1\n        /* \"ExodusERC20Token/SafeMath.sol\":477:694  function sub(... */\n      jump\t// out\n        /* \"ExodusERC20Token/EIP712.sol\":3072:3429  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_104:\n        /* \"ExodusERC20Token/EIP712.sol\":3125:3132  bytes32 */\n      0x00\n        /* \"ExodusERC20Token/EIP712.sol\":3203:3212  chainid() */\n      chainid\n        /* \"ExodusERC20Token/EIP712.sol\":3247:3263  _CACHED_CHAIN_ID */\n      immutable(\"0x7ee9b50c980554e091f5df8085692358417b660affc08e545e624793708cbe01\")\n        /* \"ExodusERC20Token/EIP712.sol\":3236:3263  chainID == _CACHED_CHAIN_ID */\n      dup2\n      eq\n        /* \"ExodusERC20Token/EIP712.sol\":3232:3423  if (chainID == _CACHED_CHAIN_ID) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"ExodusERC20Token/EIP712.sol\":3286:3310  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0x28bbb0207f31d945816623d3302c5bf67e35f3d933c3b03a2cbc30cfa7ce31d8\")\n        /* \"ExodusERC20Token/EIP712.sol\":3279:3310  return _CACHED_DOMAIN_SEPARATOR */\n      swap2\n      pop\n      pop\n      jump(tag_87)\n        /* \"ExodusERC20Token/EIP712.sol\":3232:3423  if (chainID == _CACHED_CHAIN_ID) {... */\n    tag_178:\n        /* \"ExodusERC20Token/EIP712.sol\":3348:3412  _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      tag_180\n        /* \"ExodusERC20Token/EIP712.sol\":3370:3380  _TYPE_HASH */\n      immutable(\"0x5ade3da6b1e878dacd678731417229d3052ad3d883d603995a413e3104e44893\")\n        /* \"ExodusERC20Token/EIP712.sol\":3382:3394  _HASHED_NAME */\n      immutable(\"0xa15d3280aa3e4a045ba4928ae092d0b698801fe0fe2e296d74f795d639cb63ba\")\n        /* \"ExodusERC20Token/EIP712.sol\":3396:3411  _HASHED_VERSION */\n      immutable(\"0xd1731c384d2c8ba1eafa1dee7436362fec5c2705b14e910ce09d6ba0a10fd695\")\n        /* \"ExodusERC20Token/EIP712.sol\":3348:3369  _buildDomainSeparator */\n      tag_181\n        /* \"ExodusERC20Token/EIP712.sol\":3348:3412  _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      jump\t// in\n    tag_180:\n        /* \"ExodusERC20Token/EIP712.sol\":3341:3412  return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      swap2\n      pop\n      pop\n      jump(tag_87)\n        /* \"ExodusERC20Token/SafeMath.sol\":155:331  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_108:\n        /* \"ExodusERC20Token/SafeMath.sol\":213:220  uint256 */\n      0x00\n        /* \"ExodusERC20Token/SafeMath.sol\":244:249  a + b */\n      dup3\n      dup3\n      add\n        /* \"ExodusERC20Token/SafeMath.sol\":267:273  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ExodusERC20Token/SafeMath.sol\":259:305  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_183\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_183:\n        /* \"ExodusERC20Token/SafeMath.sol\":323:324  c */\n      swap4\n        /* \"ExodusERC20Token/SafeMath.sol\":155:331  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":3284:3652  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3367:3388  account != address(0) */\n      dup3\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3359:3424  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_185\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_185:\n        /* \"ExodusERC20Token/ERC20.sol\":3434:3483  _beforeTokenTransfer(address(0), account, amount) */\n      tag_186\n        /* \"ExodusERC20Token/ERC20.sol\":3463:3464  0 */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3467:3474  account */\n      dup4\n        /* \"ExodusERC20Token/ERC20.sol\":3476:3482  amount */\n      dup4\n        /* \"ExodusERC20Token/ERC20.sol\":3434:3454  _beforeTokenTransfer */\n      tag_199\n        /* \"ExodusERC20Token/ERC20.sol\":3434:3483  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_186:\n        /* \"ExodusERC20Token/ERC20.sol\":3508:3520  _totalSupply */\n      sload(0x02)\n        /* \"ExodusERC20Token/ERC20.sol\":3508:3532  _totalSupply.add(amount) */\n      tag_187\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":3525:3531  amount */\n      dup3\n        /* \"ExodusERC20Token/ERC20.sol\":3508:3524  _totalSupply.add */\n      tag_108\n        /* \"ExodusERC20Token/ERC20.sol\":3508:3532  _totalSupply.add(amount) */\n      jump\t// in\n    tag_187:\n        /* \"ExodusERC20Token/ERC20.sol\":3493:3505  _totalSupply */\n      0x02\n        /* \"ExodusERC20Token/ERC20.sol\":3493:3532  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3563:3581  _balances[account] */\n      dup3\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3563:3572  _balances */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3563:3581  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ExodusERC20Token/ERC20.sol\":3563:3593  _balances[account].add(amount) */\n      tag_188\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":3586:3592  amount */\n      dup3\n        /* \"ExodusERC20Token/ERC20.sol\":3563:3585  _balances[account].add */\n      tag_108\n        /* \"ExodusERC20Token/ERC20.sol\":3563:3593  _balances[account].add(amount) */\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3542:3560  _balances[account] */\n      dup4\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3542:3551  _balances */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3542:3560  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":3542:3593  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ExodusERC20Token/ERC20.sol\":3608:3645  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ExodusERC20Token/ERC20.sol\":3542:3560  _balances[account] */\n      swap3\n      swap4\n        /* \"ExodusERC20Token/ERC20.sol\":3542:3551  _balances */\n      swap2\n      swap3\n        /* \"ExodusERC20Token/ERC20.sol\":3608:3645  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ExodusERC20Token/ERC20.sol\":3284:3652  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20.sol\":3658:4068  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3741:3762  account != address(0) */\n      dup3\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3733:3800  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"ExodusERC20Token/ERC20.sol\":3811:3860  _beforeTokenTransfer(account, address(0), amount) */\n      tag_191\n        /* \"ExodusERC20Token/ERC20.sol\":3832:3839  account */\n      dup3\n        /* \"ExodusERC20Token/ERC20.sol\":3849:3850  0 */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3853:3859  amount */\n      dup4\n        /* \"ExodusERC20Token/ERC20.sol\":3811:3831  _beforeTokenTransfer */\n      tag_199\n        /* \"ExodusERC20Token/ERC20.sol\":3811:3860  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_191:\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_192\n        /* \"ExodusERC20Token/ERC20.sol\":3915:3921  amount */\n      dup2\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3910  _balances[account] */\n      dup6\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3901  _balances */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3910  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3914  _balances[account].sub */\n      tag_100\n        /* \"ExodusERC20Token/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":3871:3889  _balances[account] */\n      dup4\n      and\n        /* \"ExodusERC20Token/ERC20.sol\":3871:3880  _balances */\n      0x00\n        /* \"ExodusERC20Token/ERC20.sol\":3871:3889  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ExodusERC20Token/ERC20.sol\":3871:3960  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      sstore\n        /* \"ExodusERC20Token/ERC20.sol\":3985:3997  _totalSupply */\n      sload(0x02)\n        /* \"ExodusERC20Token/ERC20.sol\":3985:4009  _totalSupply.sub(amount) */\n      tag_193\n      swap1\n        /* \"ExodusERC20Token/ERC20.sol\":4002:4008  amount */\n      dup3\n        /* \"ExodusERC20Token/ERC20.sol\":3985:4001  _totalSupply.sub */\n      tag_194\n        /* \"ExodusERC20Token/ERC20.sol\":3985:4009  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_193:\n        /* \"ExodusERC20Token/ERC20.sol\":3970:3982  _totalSupply */\n      0x02\n        /* \"ExodusERC20Token/ERC20.sol\":3970:4009  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"ExodusERC20Token/ERC20.sol\":4024:4061  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ExodusERC20Token/ERC20.sol\":4050:4051  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20.sol\":4024:4061  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"ExodusERC20Token/ERC20.sol\":3658:4068  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/OlympusERC20.sol\":852:1176  function _burnFrom(address account_, uint256 amount_) internal {... */\n    tag_127:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":925:952  uint256 decreasedAllowance_ */\n      0x00\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:1073  allowance(account_, msg.sender).sub(... */\n      tag_196\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1004:1011  amount_ */\n      dup3\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:1073  allowance(account_, msg.sender).sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db\n      0x24\n      swap2\n      codecopy\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:986  allowance(account_, msg.sender) */\n      tag_197\n        /* \"ExodusERC20Token/OlympusERC20.sol\":965:973  account_ */\n      dup7\n        /* \"ExodusERC20Token/OlympusERC20.sol\":975:985  msg.sender */\n      caller\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:964  allowance */\n      tag_86\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:986  allowance(account_, msg.sender) */\n      jump\t// in\n    tag_197:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:990  allowance(account_, msg.sender).sub */\n      swap2\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:1073  allowance(account_, msg.sender).sub(... */\n      swap1\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:990  allowance(account_, msg.sender).sub */\n      tag_100\n        /* \"ExodusERC20Token/OlympusERC20.sol\":955:1073  allowance(account_, msg.sender).sub(... */\n      jump\t// in\n    tag_196:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":925:1073  uint256 decreasedAllowance_ = allowance(account_, msg.sender).sub(... */\n      swap1\n      pop\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1084:1135  _approve(account_, msg.sender, decreasedAllowance_) */\n      tag_198\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1093:1101  account_ */\n      dup4\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1103:1113  msg.sender */\n      caller\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1115:1134  decreasedAllowance_ */\n      dup4\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1084:1092  _approve */\n      tag_93\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1084:1135  _approve(account_, msg.sender, decreasedAllowance_) */\n      jump\t// in\n    tag_198:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1145:1169  _burn(account_, amount_) */\n      tag_199\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1151:1159  account_ */\n      dup4\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1161:1168  amount_ */\n      dup4\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1145:1150  _burn */\n      tag_123\n        /* \"ExodusERC20Token/OlympusERC20.sol\":1145:1169  _burn(account_, amount_) */\n      jump\t// in\n    tag_199:\n        /* \"ExodusERC20Token/OlympusERC20.sol\":852:1176  function _burnFrom(address account_, uint256 amount_) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/Counters.sol\":524:636  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_140:\n        /* \"ExodusERC20Token/Counters.sol\":615:629  counter._value */\n      sload\n      swap1\n        /* \"ExodusERC20Token/Counters.sol\":524:636  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\t// out\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2592:2795  function _useNonce(address owner) internal virtual returns (uint256 current) {... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      dup2\n      and\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2652:2667  uint256 current */\n      0x00\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2712:2719  _nonces */\n      0x05\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2746:2761  nonce.current() */\n      tag_202\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      dup2\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2746:2759  nonce.current */\n      tag_140\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2746:2761  nonce.current() */\n      jump\t// in\n    tag_202:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2736:2761  current = nonce.current() */\n      swap2\n      pop\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2771:2788  nonce.increment() */\n      tag_203\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2771:2776  nonce */\n      dup2\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2771:2786  nonce.increment */\n      tag_204\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2771:2788  nonce.increment() */\n      jump\t// in\n    tag_203:\n        /* \"ExodusERC20Token/ERC20Permit.sol\":2592:2795  function _useNonce(address owner) internal virtual returns (uint256 current) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/EIP712.sol\":4399:4564  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_155:\n        /* \"ExodusERC20Token/EIP712.sol\":4476:4483  bytes32 */\n      0x00\n        /* \"ExodusERC20Token/EIP712.sol\":4502:4557  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_139\n        /* \"ExodusERC20Token/EIP712.sol\":4524:4544  _domainSeparatorV4() */\n      tag_207\n        /* \"ExodusERC20Token/EIP712.sol\":4524:4542  _domainSeparatorV4 */\n      tag_104\n        /* \"ExodusERC20Token/EIP712.sol\":4524:4544  _domainSeparatorV4() */\n      jump\t// in\n    tag_207:\n        /* \"ExodusERC20Token/EIP712.sol\":4546:4556  structHash */\n      dup4\n        /* \"ExodusERC20Token/EIP712.sol\":4502:4523  ECDSA.toTypedDataHash */\n      tag_208\n        /* \"ExodusERC20Token/EIP712.sol\":4502:4557  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n        /* \"ExodusERC20Token/ECDSA.sol\":7390:7660  function recover(... */\n    tag_157:\n        /* \"ExodusERC20Token/ECDSA.sol\":7513:7520  address */\n      0x00\n        /* \"ExodusERC20Token/ECDSA.sol\":7533:7550  address recovered */\n      dup1\n        /* \"ExodusERC20Token/ECDSA.sol\":7552:7570  RecoverError error */\n      0x00\n        /* \"ExodusERC20Token/ECDSA.sol\":7574:7599  tryRecover(hash, v, r, s) */\n      tag_210\n        /* \"ExodusERC20Token/ECDSA.sol\":7585:7589  hash */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7591:7592  v */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7594:7595  r */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7597:7598  s */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7574:7584  tryRecover */\n      tag_211\n        /* \"ExodusERC20Token/ECDSA.sol\":7574:7599  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_210:\n        /* \"ExodusERC20Token/ECDSA.sol\":7532:7599  (address recovered, RecoverError error) = tryRecover(hash, v, r, s) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":7609:7627  _throwError(error) */\n      tag_212\n        /* \"ExodusERC20Token/ECDSA.sol\":7621:7626  error */\n      dup2\n        /* \"ExodusERC20Token/ECDSA.sol\":7609:7620  _throwError */\n      tag_213\n        /* \"ExodusERC20Token/ECDSA.sol\":7609:7627  _throwError(error) */\n      jump\t// in\n    tag_212:\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":7644:7653  recovered */\n      swap6\n        /* \"ExodusERC20Token/ECDSA.sol\":7390:7660  function recover(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\n    tag_181:\n        /* \"ExodusERC20Token/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      dup1\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x60\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"ExodusERC20Token/EIP712.sol\":3653:3662  chainid() */\n      chainid\n        /* \"ExodusERC20Token/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n      0x80\n      dup4\n      add\n      mstore\n        /* \"ExodusERC20Token/EIP712.sol\":3760:3764  this */\n      address\n        /* \"ExodusERC20Token/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n      0xa0\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0xc0\n      swap1\n      swap3\n      add\n      swap1\n      mstore\n        /* \"ExodusERC20Token/EIP712.sol\":3689:3767  keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"ExodusERC20Token/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\n      jump\t// out\n        /* \"ExodusERC20Token/SafeMath.sol\":337:471  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_194:\n        /* \"ExodusERC20Token/SafeMath.sol\":395:402  uint256 */\n      0x00\n        /* \"ExodusERC20Token/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_183\n        /* \"ExodusERC20Token/SafeMath.sol\":425:426  a */\n      dup4\n        /* \"ExodusERC20Token/SafeMath.sol\":428:429  b */\n      dup4\n        /* \"ExodusERC20Token/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"ExodusERC20Token/SafeMath.sol\":421:424  sub */\n      tag_100\n        /* \"ExodusERC20Token/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"ExodusERC20Token/Counters.sol\":642:820  function increment(Counter storage counter) internal {... */\n    tag_204:\n        /* \"ExodusERC20Token/Counters.sol\":794:813  counter._value += 1 */\n      dup1\n      sload\n        /* \"ExodusERC20Token/Counters.sol\":812:813  1 */\n      0x01\n        /* \"ExodusERC20Token/Counters.sol\":794:813  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"ExodusERC20Token/Counters.sol\":642:820  function increment(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"ExodusERC20Token/ECDSA.sol\":8554:8748  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {... */\n    tag_208:\n        /* \"ExodusERC20Token/ECDSA.sol\":8683:8740  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x40\n      dup1\n      mload\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x22\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x42\n      dup1\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      dup2\n      mload\n      dup1\n      dup3\n      sub\n      swap1\n      swap4\n      add\n      dup4\n      mstore\n      0x62\n      add\n      swap1\n      mstore\n        /* \"ExodusERC20Token/ECDSA.sol\":8673:8741  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"ExodusERC20Token/ECDSA.sol\":8554:8748  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {... */\n      jump\t// out\n        /* \"ExodusERC20Token/ECDSA.sol\":5654:7257  function tryRecover(... */\n    tag_211:\n        /* \"ExodusERC20Token/ECDSA.sol\":5780:5787  address */\n      0x00\n      dup1\n        /* \"ExodusERC20Token/ECDSA.sol\":6704:6770  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"ExodusERC20Token/ECDSA.sol\":6691:6770  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup4\n      gt\n        /* \"ExodusERC20Token/ECDSA.sol\":6687:6848  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_221\n      jumpi\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":6802:6803  0 */\n      0x00\n      swap1\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":6806:6836  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"ExodusERC20Token/ECDSA.sol\":6786:6837  return (address(0), RecoverError.InvalidSignatureS) */\n      jump(tag_220)\n        /* \"ExodusERC20Token/ECDSA.sol\":6687:6848  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_221:\n        /* \"ExodusERC20Token/ECDSA.sol\":6861:6862  v */\n      dup5\n        /* \"ExodusERC20Token/ECDSA.sol\":6861:6868  v != 27 */\n      0xff\n      and\n        /* \"ExodusERC20Token/ECDSA.sol\":6866:6868  27 */\n      0x1b\n        /* \"ExodusERC20Token/ECDSA.sol\":6861:6868  v != 27 */\n      eq\n      iszero\n        /* \"ExodusERC20Token/ECDSA.sol\":6861:6879  v != 27 && v != 28 */\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":6872:6873  v */\n      dup5\n        /* \"ExodusERC20Token/ECDSA.sol\":6872:6879  v != 28 */\n      0xff\n      and\n        /* \"ExodusERC20Token/ECDSA.sol\":6877:6879  28 */\n      0x1c\n        /* \"ExodusERC20Token/ECDSA.sol\":6872:6879  v != 28 */\n      eq\n      iszero\n        /* \"ExodusERC20Token/ECDSA.sol\":6861:6879  v != 27 && v != 28 */\n    tag_222:\n        /* \"ExodusERC20Token/ECDSA.sol\":6857:6957  if (v != 27 && v != 28) {... */\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":6911:6912  0 */\n      0x00\n      swap1\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":6915:6945  RecoverError.InvalidSignatureV */\n      0x04\n        /* \"ExodusERC20Token/ECDSA.sol\":6895:6946  return (address(0), RecoverError.InvalidSignatureV) */\n      jump(tag_220)\n        /* \"ExodusERC20Token/ECDSA.sol\":6857:6957  if (v != 27 && v != 28) {... */\n    tag_223:\n        /* \"ExodusERC20Token/ECDSA.sol\":7051:7065  address signer */\n      0x00\n        /* \"ExodusERC20Token/ECDSA.sol\":7068:7092  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"ExodusERC20Token/ECDSA.sol\":7078:7082  hash */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7084:7085  v */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7087:7088  r */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7090:7091  s */\n      dup8\n        /* \"ExodusERC20Token/ECDSA.sol\":7068:7092  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusERC20Token/ECDSA.sol\":7106:7126  signer == address(0) */\n      dup2\n      and\n        /* \"ExodusERC20Token/ECDSA.sol\":7102:7203  if (signer == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"ExodusERC20Token/ECDSA.sol\":7158:7159  0 */\n      0x00\n        /* \"ExodusERC20Token/ECDSA.sol\":7162:7191  RecoverError.InvalidSignature */\n      0x01\n        /* \"ExodusERC20Token/ECDSA.sol\":7142:7192  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_220)\n        /* \"ExodusERC20Token/ECDSA.sol\":7102:7203  if (signer == address(0)) {... */\n    tag_226:\n        /* \"ExodusERC20Token/ECDSA.sol\":7221:7227  signer */\n      swap2\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":7229:7249  RecoverError.NoError */\n      0x00\n      swap1\n      pop\n        /* \"ExodusERC20Token/ECDSA.sol\":5654:7257  function tryRecover(... */\n    tag_220:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusERC20Token/ECDSA.sol\":443:1074  function _throwError(RecoverError error) private pure {... */\n    tag_213:\n        /* \"ExodusERC20Token/ECDSA.sol\":520:540  RecoverError.NoError */\n      0x00\n        /* \"ExodusERC20Token/ECDSA.sol\":511:516  error */\n      dup2\n        /* \"ExodusERC20Token/ECDSA.sol\":511:540  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n      eq\n        /* \"ExodusERC20Token/ECDSA.sol\":507:1068  if (error == RecoverError.NoError) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"ExodusERC20Token/ECDSA.sol\":556:563  return; */\n      jump(tag_122)\n        /* \"ExodusERC20Token/ECDSA.sol\":507:1068  if (error == RecoverError.NoError) {... */\n    tag_230:\n        /* \"ExodusERC20Token/ECDSA.sol\":616:645  RecoverError.InvalidSignature */\n      0x01\n        /* \"ExodusERC20Token/ECDSA.sol\":607:612  error */\n      dup2\n        /* \"ExodusERC20Token/ECDSA.sol\":607:645  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n      eq\n        /* \"ExodusERC20Token/ECDSA.sol\":603:1068  if (error == RecoverError.InvalidSignature) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"ExodusERC20Token/ECDSA.sol\":661:695  revert(\"ECDSA: invalid signature\") */\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"ExodusERC20Token/ECDSA.sol\":603:1068  if (error == RecoverError.InvalidSignature) {... */\n    tag_234:\n        /* \"ExodusERC20Token/ECDSA.sol\":725:760  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"ExodusERC20Token/ECDSA.sol\":716:721  error */\n      dup2\n        /* \"ExodusERC20Token/ECDSA.sol\":716:760  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      invalid\n    tag_237:\n      eq\n        /* \"ExodusERC20Token/ECDSA.sol\":712:1068  if (error == RecoverError.InvalidSignatureLength) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"ExodusERC20Token/ECDSA.sol\":776:817  revert(\"ECDSA: invalid signature length\") */\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"ExodusERC20Token/ECDSA.sol\":712:1068  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_238:\n        /* \"ExodusERC20Token/ECDSA.sol\":847:877  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"ExodusERC20Token/ECDSA.sol\":838:843  error */\n      dup2\n        /* \"ExodusERC20Token/ECDSA.sol\":838:877  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n      eq\n        /* \"ExodusERC20Token/ECDSA.sol\":834:1068  if (error == RecoverError.InvalidSignatureS) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"ExodusERC20Token/ECDSA.sol\":893:937  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ExodusERC20Token/ECDSA.sol\":834:1068  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_242:\n        /* \"ExodusERC20Token/ECDSA.sol\":967:997  RecoverError.InvalidSignatureV */\n      0x04\n        /* \"ExodusERC20Token/ECDSA.sol\":958:963  error */\n      dup2\n        /* \"ExodusERC20Token/ECDSA.sol\":958:997  error == RecoverError.InvalidSignatureV */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_245\n      jumpi\n      invalid\n    tag_245:\n      eq\n        /* \"ExodusERC20Token/ECDSA.sol\":954:1068  if (error == RecoverError.InvalidSignatureV) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"ExodusERC20Token/ECDSA.sol\":1013:1057  revert(\"ECDSA: invalid signature 'v' value\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd 45434453413a20696e76616c6964207369676e6174757265202773272076616c7565\n    data_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4 45434453413a20696e76616c6964207369676e6174757265202776272076616c7565\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db 45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220a9925a2003707a9b92a6cd44b17125a2eee1d938be679d9b58ce987133c74aa864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140526101a0604052600c6101608190526b15539055551213d49256915160a21b61018090815262000057916006919062000242565b503480156200006557600080fd5b5060405162001a9638038062001a96833981810160405260208110156200008b57600080fd5b505160408051808201825260068082526545786f64757360d01b60208381018290528451808601865260018152603160f81b8183015285518087018752938452838201928352855180870190965260038087526245584f60e81b928701929092528351879686959294929390926009926200010892919062000242565b5081516200011e90600490602085019062000242565b5060f81b7fff00000000000000000000000000000000000000000000000000000000000000166080525050815160208084019190912082519183019190912060e08290526101008190524660c081905291907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200019e818484620001fd565b60a052610120525050600780546001600160a01b0319166001600160a01b0387169081179091556040519094507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9350600092509050a25050620002ee565b604080516020808201959095528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200027a5760008555620002c5565b82601f106200029557805160ff1916838001178555620002c5565b82800160010185558215620002c5579182015b82811115620002c5578251825591602001919060010190620002a8565b50620002d3929150620002d7565b5090565b5b80821115620002d35760008155600101620002d8565b60805160f81c60a05160c05160e0516101005161012051610140516117516200034560003980610a26525080610eab525080610eed525080610ecc525080610e57525080610e7f5250806105bf52506117516000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063a457c2d711610081578063bf7e214f11610066578063bf7e214f146103fe578063d505accf14610422578063dd62ed3e1461047357610151565b8063a457c2d7146103a6578063a9059cbb146103d257610151565b80637a9e5e4b116100b25780637a9e5e4b146103525780637ecebe001461037857806395d89b411461039e57610151565b806370a082311461030057806379cc67901461032657610151565b8063313ce567116101245780633950935111610109578063395093511461028957806340c10f19146102b557806342966c68146102e357610151565b8063313ce567146102635780633644e5151461028157610151565b806306fdde0314610156578063095ea7b3146101d357806318160ddd1461021357806323b872dd1461022d575b600080fd5b61015e6104a1565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610198578181015183820152602001610180565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ff600480360360408110156101e957600080fd5b506001600160a01b038135169060200135610538565b604080519115158252519081900360200190f35b61021b61054e565b60408051918252519081900360200190f35b6101ff6004803603606081101561024357600080fd5b506001600160a01b03813581169160208101359091169060400135610554565b61026b6105bd565b6040805160ff9092168252519081900360200190f35b61021b6105e1565b6101ff6004803603604081101561029f57600080fd5b506001600160a01b0381351690602001356105f0565b6102e1600480360360408110156102cb57600080fd5b506001600160a01b038135169060200135610626565b005b6102e1600480360360208110156102f957600080fd5b503561075a565b61021b6004803603602081101561031657600080fd5b50356001600160a01b0316610767565b6102e16004803603604081101561033c57600080fd5b506001600160a01b038135169060200135610782565b6102e16004803603602081101561036857600080fd5b50356001600160a01b031661078c565b61021b6004803603602081101561038e57600080fd5b50356001600160a01b03166108da565b61015e610901565b6101ff600480360360408110156103bc57600080fd5b506001600160a01b038135169060200135610962565b6101ff600480360360408110156103e857600080fd5b506001600160a01b0381351690602001356109b1565b6104066109be565b604080516001600160a01b039092168252519081900360200190f35b6102e1600480360360e081101561043857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356109cd565b61021b6004803603604081101561048957600080fd5b506001600160a01b0381358116916020013516610b49565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b505050505090505b90565b6000610545338484610b74565b50600192915050565b60025490565b6000610561848484610c60565b6105b384336105ae85604051806060016040528060288152602001611641602891396001600160a01b038a1660009081526001602090815260408083203384529091529020549190610dbb565b610b74565b5060019392505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006105eb610e52565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105459185906105ae9086610f19565b600760009054906101000a90046001600160a01b03166001600160a01b031663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561067457600080fd5b505afa158015610688573d6000803e3d6000fd5b505050506040513d602081101561069e57600080fd5b50516006906001600160a01b0316331461074b5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561073c5780601f106107115761010080835404028352916020019161073c565b820191906000526020600020905b81548152906001019060200180831161071f57829003601f168201915b50509250505060405180910390fd5b506107568282610f7a565b5050565b610764338261106a565b50565b6001600160a01b031660009081526020819052604090205490565b6107568282611166565b600760009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156107da57600080fd5b505afa1580156107ee573d6000803e3d6000fd5b505050506040513d602081101561080457600080fd5b50516006906001600160a01b031633146108775760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561073c5780601f106107115761010080835404028352916020019161073c565b50600780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b6001600160a01b03811660009081526005602052604081206108fb906111b2565b92915050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052d5780601f106105025761010080835404028352916020019161052d565b600061054533846105ae856040518060600160405280602581526020016116f7602591393360009081526001602090815260408083206001600160a01b038d1684529091529020549190610dbb565b6000610545338484610c60565b6007546001600160a01b031681565b83421115610a22576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888610a518c6111b6565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506000610aba826111e8565b90506000610aca828787876111fb565b9050896001600160a01b0316816001600160a01b031614610b32576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b610b3d8a8a8a610b74565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038316610bb95760405162461bcd60e51b81526004018080602001828103825260248152602001806116d36024913960400191505060405180910390fd5b6001600160a01b038216610bfe5760405162461bcd60e51b81526004018080602001828103825260228152602001806115b56022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610ca55760405162461bcd60e51b81526004018080602001828103825260258152602001806116ae6025913960400191505060405180910390fd5b6001600160a01b038216610cea5760405162461bcd60e51b81526004018080602001828103825260238152602001806115706023913960400191505060405180910390fd5b610cf58383836111ad565b610d32816040518060600160405280602681526020016115d7602691396001600160a01b0386166000908152602081905260409020549190610dbb565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610d619082610f19565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610e4a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e0f578181015183820152602001610df7565b50505050905090810190601f168015610e3c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000467f0000000000000000000000000000000000000000000000000000000000000000811415610ea6577f0000000000000000000000000000000000000000000000000000000000000000915050610535565b610f117f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611223565b915050610535565b600082820183811015610f73576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610fd5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610fe1600083836111ad565b600254610fee9082610f19565b6002556001600160a01b0382166000908152602081905260409020546110149082610f19565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166110af5760405162461bcd60e51b815260040180806020018281038252602181526020018061168d6021913960400191505060405180910390fd5b6110bb826000836111ad565b6110f881604051806060016040528060228152602001611593602291396001600160a01b0385166000908152602081905260409020549190610dbb565b6001600160a01b03831660009081526020819052604090205560025461111e9082611268565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000611196826040518060600160405280602481526020016116696024913961118f8633610b49565b9190610dbb565b90506111a3833383610b74565b6111ad838361106a565b505050565b5490565b6001600160a01b03811660009081526005602052604081206111d7816111b2565b91506111e2816112aa565b50919050565b60006108fb6111f5610e52565b836112b3565b600080600061120c87878787611309565b91509150611219816113fe565b5095945050505050565b604080516020808201959095528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b6000610f7383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610dbb565b80546001019055565b604080517f19010000000000000000000000000000000000000000000000000000000000006020808301919091526022820194909452604280820193909352815180820390930183526062019052805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561134057506000905060036113f5565b8460ff16601b1415801561135857508460ff16601c14155b1561136957506000905060046113f5565b600060018787878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156113c5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166113ee576000600192509250506113f5565b9150600090505b94509492505050565b600081600481111561140c57fe5b141561141757610764565b600181600481111561142557fe5b1415611478576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b600281600481111561148657fe5b14156114d9576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60038160048111156114e757fe5b14156115245760405162461bcd60e51b81526004018080602001828103825260228152602001806115fd6022913960400191505060405180910390fd5b600481600481111561153257fe5b14156107645760405162461bcd60e51b815260040180806020018281038252602281526020018061161f6022913960400191505060405180910390fdfe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a9925a2003707a9b92a6cd44b17125a2eee1d938be679d9b58ce987133c74aa864736f6c63430007050033",
							"opcodes": "PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH2 0x140 MSTORE PUSH2 0x1A0 PUSH1 0x40 MSTORE PUSH1 0xC PUSH2 0x160 DUP2 SWAP1 MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH2 0x180 SWAP1 DUP2 MSTORE PUSH3 0x57 SWAP2 PUSH1 0x6 SWAP2 SWAP1 PUSH3 0x242 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A96 CODESIZE SUB DUP1 PUSH3 0x1A96 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP1 DUP3 MSTORE PUSH6 0x45786F647573 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 DUP2 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL DUP2 DUP4 ADD MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE SWAP4 DUP5 MSTORE DUP4 DUP3 ADD SWAP3 DUP4 MSTORE DUP6 MLOAD DUP1 DUP8 ADD SWAP1 SWAP7 MSTORE PUSH1 0x3 DUP1 DUP8 MSTORE PUSH3 0x45584F PUSH1 0xE8 SHL SWAP3 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 MLOAD DUP8 SWAP7 DUP7 SWAP6 SWAP3 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x9 SWAP3 PUSH3 0x108 SWAP3 SWAP2 SWAP1 PUSH3 0x242 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x11E SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x242 JUMP JUMPDEST POP PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0x80 MSTORE POP POP DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 SWAP1 MSTORE CHAINID PUSH1 0xC0 DUP2 SWAP1 MSTORE SWAP2 SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x19E DUP2 DUP5 DUP5 PUSH3 0x1FD JUMP JUMPDEST PUSH1 0xA0 MSTORE PUSH2 0x120 MSTORE POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP5 POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD SWAP4 POP PUSH1 0x0 SWAP3 POP SWAP1 POP LOG2 POP POP PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x27A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2C5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x295 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2A8 JUMP JUMPDEST POP PUSH3 0x2D3 SWAP3 SWAP2 POP PUSH3 0x2D7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2D8 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xF8 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1751 PUSH3 0x345 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xA26 MSTORE POP DUP1 PUSH2 0xEAB MSTORE POP DUP1 PUSH2 0xEED MSTORE POP DUP1 PUSH2 0xECC MSTORE POP DUP1 PUSH2 0xE57 MSTORE POP DUP1 PUSH2 0xE7F MSTORE POP DUP1 PUSH2 0x5BF MSTORE POP PUSH2 0x1751 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xBF7E214F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x473 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D2 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x7A9E5E4B GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39E JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x326 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E3 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x281 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x180 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x554 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x626 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x75A JUMP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x767 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x782 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78C JUMP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x15E PUSH2 0x901 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x962 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x406 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x52D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x502 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x510 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 CALLER DUP5 DUP5 PUSH2 0xB74 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x561 DUP5 DUP5 DUP5 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x5B3 DUP5 CALLER PUSH2 0x5AE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1641 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xB74 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x545 SWAP2 DUP6 SWAP1 PUSH2 0x5AE SWAP1 DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x73C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x711 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x756 DUP3 DUP3 PUSH2 0xF7A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x764 CALLER DUP3 PUSH2 0x106A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x756 DUP3 DUP3 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x73C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x711 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73C JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x8FB SWAP1 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x52D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x502 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 CALLER DUP5 PUSH2 0x5AE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F7 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 CALLER DUP5 DUP5 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xA22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH2 0xA51 DUP13 PUSH2 0x11B6 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xABA DUP3 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xACA DUP3 DUP8 DUP8 DUP8 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB32 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB3D DUP11 DUP11 DUP11 PUSH2 0xB74 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16D3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15B5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16AE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1570 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF5 DUP4 DUP4 DUP4 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0xD32 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15D7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xD61 SWAP1 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE3C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0xEA6 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x535 JUMP JUMPDEST PUSH2 0xF11 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xFE1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFEE SWAP1 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1014 SWAP1 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x168D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10BB DUP3 PUSH1 0x0 DUP4 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x10F8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1593 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x111E SWAP1 DUP3 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1196 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1669 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x118F DUP7 CALLER PUSH2 0xB49 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST SWAP1 POP PUSH2 0x11A3 DUP4 CALLER DUP4 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x11AD DUP4 DUP4 PUSH2 0x106A JUMP JUMPDEST POP POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x11D7 DUP2 PUSH2 0x11B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E2 DUP2 PUSH2 0x12AA JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB PUSH2 0x11F5 PUSH2 0xE52 JUMP JUMPDEST DUP4 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120C DUP8 DUP8 DUP8 DUP8 PUSH2 0x1309 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1219 DUP2 PUSH2 0x13FE JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF73 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xDBB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x22 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x42 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x62 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1340 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x13F5 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1358 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1369 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13EE JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x13F5 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x140C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1417 JUMPI PUSH2 0x764 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1425 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1478 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1486 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14E7 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15FD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1532 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545434453 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x20616D6F756E742065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E636545524332303A206275726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A992 GAS KECCAK256 SUB PUSH17 0x7A9B92A6CD44B17125A2EEE1D938BE679D SWAP12 PC 0xCE SWAP9 PUSH18 0x33C74AA864736F6C63430007050033000000 ",
							"sourceMap": "971:95:4:-:0;918:148;;255:36:9;231:947:10;255:36:9;;231:947:10;255:36:9;;;-1:-1:-1;;;255:36:9;;;;;;;;;;:::i;:::-;;341:163:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;341:163:10;1298:52:4;;;;;;;;;;;;-1:-1:-1;;;341:163:10;1298:52:4;;;;;;2340:646:2;;;;;;;;;;-1:-1:-1;;;2340:646:2;;;;586:191:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;586:191:3;;;;;;;699:13;;341:163:10;;1298:52:4;;2340:646:2;;586:191:3;;;;404:1:10;;699:13:3;;586:191;;699:13;:::i;:::-;-1:-1:-1;722:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;749:21:3;;;;;;-1:-1:-1;;2514:22:2;;;;;;;;;;2570:25;;;;;;;;;2751;;;;2786:31;;;;2464:9;2827:26;;;;2464:9;2514:22;2624:117;2890:58;2624:117;2514:22;2570:25;2890:21;:58::i;:::-;2863:85;;2958:21;;-1:-1:-1;;495:9:9;:22;;-1:-1:-1;;;;;;495:22:9;-1:-1:-1;;;;;495:22:9;;;;;;;;532:28;;495:22;;-1:-1:-1;532:28:9;;-1:-1:-1;;;;532:28:9;-1:-1:-1;532:28:9;444:123;341:163:10;231:947;;3435:339:2;3699:67;;;;;;;;;;;;;;;;;;;;;;;;;3653:9;3699:67;;;;3760:4;3699:67;;;;;;;;;;;;;;;;;;;;;;;;3689:78;;;;;;3435:339::o;231:947:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;231:947:10;;;-1:-1:-1;231:947:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"414": [
									{
										"length": 32,
										"start": 3711
									}
								],
								"416": [
									{
										"length": 32,
										"start": 3671
									}
								],
								"418": [
									{
										"length": 32,
										"start": 3788
									}
								],
								"420": [
									{
										"length": 32,
										"start": 3821
									}
								],
								"422": [
									{
										"length": 32,
										"start": 3755
									}
								],
								"587": [
									{
										"length": 32,
										"start": 1471
									}
								],
								"1059": [
									{
										"length": 32,
										"start": 2598
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xBF7E214F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x473 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D2 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x7A9E5E4B GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39E JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x326 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E3 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x281 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x180 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x554 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x626 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x75A JUMP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x767 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x782 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78C JUMP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x15E PUSH2 0x901 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x962 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x406 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x52D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x502 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x510 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 CALLER DUP5 DUP5 PUSH2 0xB74 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x561 DUP5 DUP5 DUP5 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x5B3 DUP5 CALLER PUSH2 0x5AE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1641 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xB74 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x545 SWAP2 DUP6 SWAP1 PUSH2 0x5AE SWAP1 DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x73C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x711 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x756 DUP3 DUP3 PUSH2 0xF7A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x764 CALLER DUP3 PUSH2 0x106A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x756 DUP3 DUP3 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x73C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x711 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73C JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x8FB SWAP1 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x52D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x502 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 CALLER DUP5 PUSH2 0x5AE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F7 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 CALLER DUP5 DUP5 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xA22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH2 0xA51 DUP13 PUSH2 0x11B6 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xABA DUP3 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xACA DUP3 DUP8 DUP8 DUP8 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB32 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB3D DUP11 DUP11 DUP11 PUSH2 0xB74 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16D3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15B5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16AE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1570 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF5 DUP4 DUP4 DUP4 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0xD32 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15D7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xD61 SWAP1 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE3C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0xEA6 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x535 JUMP JUMPDEST PUSH2 0xF11 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xFE1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFEE SWAP1 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1014 SWAP1 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x168D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10BB DUP3 PUSH1 0x0 DUP4 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x10F8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1593 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x111E SWAP1 DUP3 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1196 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1669 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x118F DUP7 CALLER PUSH2 0xB49 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST SWAP1 POP PUSH2 0x11A3 DUP4 CALLER DUP4 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x11AD DUP4 DUP4 PUSH2 0x106A JUMP JUMPDEST POP POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x11D7 DUP2 PUSH2 0x11B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E2 DUP2 PUSH2 0x12AA JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB PUSH2 0x11F5 PUSH2 0xE52 JUMP JUMPDEST DUP4 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120C DUP8 DUP8 DUP8 DUP8 PUSH2 0x1309 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1219 DUP2 PUSH2 0x13FE JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF73 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xDBB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x22 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x42 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x62 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1340 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x13F5 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1358 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1369 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13EE JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x13F5 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x140C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1417 JUMPI PUSH2 0x764 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1425 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1478 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1486 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14E7 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15FD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1532 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545434453 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x20616D6F756E742065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E636545524332303A206275726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A992 GAS KECCAK256 SUB PUSH17 0x7A9B92A6CD44B17125A2EEE1D938BE679D SWAP12 PC 0xCE SWAP9 PUSH18 0x33C74AA864736F6C63430007050033000000 ",
							"sourceMap": "231:947:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:164;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1622:164:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1056:98;;;:::i;:::-;;;;;;;;;;;;;;;;1792:389;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1792:389:3;;;;;;;;;;;;;;;;;:::i;961:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2348:113:4;;;:::i;2187:211:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2187:211:3;;;;;;;;:::i;510:118:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;510:118:10;;;;;;;;:::i;:::-;;634:90;;;;;;;;;;;;;;;;-1:-1:-1;634:90:10;;:::i;1160:125:3:-;;;;;;;;;;;;;;;;-1:-1:-1;1160:125:3;-1:-1:-1;;;;;1160:125:3;;:::i;730:116:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;730:116:10;;;;;;;;:::i;1108:164:9:-;;;;;;;;;;;;;;;;-1:-1:-1;1108:164:9;-1:-1:-1;;;;;1108:164:9;;:::i;2098:126:4:-;;;;;;;;;;;;;;;;-1:-1:-1;2098:126:4;-1:-1:-1;;;;;2098:126:4;;:::i;870:85:3:-;;;:::i;2404:308::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2404:308:3;;;;;;;;:::i;1291:170::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1291:170:3;;;;;;;;:::i;359:33:9:-;;;:::i;:::-;;;;-1:-1:-1;;;;;359:33:9;;;;;;;;;;;;;;1411:626:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1411:626:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1467:149:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1467:149:3;;;;;;;;;;:::i;783:81::-;852:5;845:12;;;;;;;;-1:-1:-1;;845:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:13;;845:12;;852:5;;845:12;;852:5;845:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:81;;:::o;1622:164::-;1705:4;1721:37;1730:10;1742:7;1751:6;1721:8;:37::i;:::-;-1:-1:-1;1775:4:3;1622:164;;;;:::o;1056:98::-;1135:12;;1056:98;:::o;1792:389::-;1928:4;1944:36;1954:6;1962:9;1973:6;1944:9;:36::i;:::-;1990:163;2012:6;2032:10;2056:87;2092:6;2056:87;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2056:19:3;;;;;;:11;:19;;;;;;;;2076:10;2056:31;;;;;;;;;:87;:35;:87::i;:::-;1990:8;:163::i;:::-;-1:-1:-1;2170:4:3;1792:389;;;;;:::o;961:89::-;1034:9;961:89;:::o;2348:113:4:-;2408:7;2434:20;:18;:20::i;:::-;2427:27;;2348:113;:::o;2187:211:3:-;2300:10;2275:4;2321:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2321:32:3;;;;;;;;;;2275:4;;2291:79;;2312:7;;2321:48;;2358:10;2321:36;:48::i;510:118:10:-;1010:9:9;;;;;;;;;-1:-1:-1;;;;;1010:9:9;-1:-1:-1;;;;;1010:15:9;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1010:17:9;1029:12;;-1:-1:-1;;;;;996:31:9;:10;:31;988:54;;;;-1:-1:-1;;;988:54:9;;;;;;;;;;;;-1:-1:-1;;988:54:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:24:10::1;603:8;613:7;597:5;:24::i;:::-;510:118:::0;;:::o;634:90::-;692:25;698:10;710:6;692:5;:25::i;:::-;634:90;:::o;1160:125:3:-;-1:-1:-1;;;;;1260:18:3;1234:7;1260:18;;;;;;;;;;;;1160:125::o;730:116:10:-;811:28;821:8;831:7;811:9;:28::i;1108:164:9:-;672:9;;;;;;;;;-1:-1:-1;;;;;672:9:9;-1:-1:-1;;;;;672:18:9;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;672:20:9;694:12;;-1:-1:-1;;;;;658:34:9;:10;:34;650:57;;;;-1:-1:-1;;;650:57:9;;;;;;;;;;;;-1:-1:-1;;650:57:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1194:9:9::1;:25:::0;;;::::1;-1:-1:-1::0;;;;;1194:25:9;::::1;::::0;;::::1;::::0;;;1234:31:::1;::::0;::::1;::::0;-1:-1:-1;;1234:31:9::1;1108:164:::0;:::o;2098:126:4:-;-1:-1:-1;;;;;2193:14:4;;2167:7;2193:14;;;:7;:14;;;;;:24;;:22;:24::i;:::-;2186:31;2098:126;-1:-1:-1;;2098:126:4:o;870:85:3:-;941:7;934:14;;;;;;;;-1:-1:-1;;934:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:13;;934:14;;941:7;;934:14;;941:7;934:14;;;;;;;;;;;;;;;;;;;;;;;;2404:308;2497:4;2513:171;2535:10;2559:7;2580:94;2617:15;2580:94;;;;;;;;;;;;;;;;;2592:10;2580:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2580:32:3;;;;;;;;;;;:94;:36;:94::i;1291:170::-;1377:4;1393:40;1403:10;1415:9;1426:6;1393:9;:40::i;359:33:9:-;;;-1:-1:-1;;;;;359:33:9;;:::o;1411:626:4:-;1646:8;1627:15;:27;;1619:69;;;;;-1:-1:-1;;;1619:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1699:18;1741:16;1759:5;1766:7;1775:5;1782:16;1792:5;1782:9;:16::i;:::-;1800:8;1730:79;;;;;;;;;;;-1:-1:-1;;;;;1730:79:4;;;;;;-1:-1:-1;;;;;1730:79:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1720:90;;;;;;1699:111;;1821:12;1836:28;1853:10;1836:16;:28::i;:::-;1821:43;;1875:14;1892:28;1906:4;1912:1;1915;1918;1892:13;:28::i;:::-;1875:45;;1948:5;-1:-1:-1;;;;;1938:15:4;:6;-1:-1:-1;;;;;1938:15:4;;1930:58;;;;;-1:-1:-1;;;1930:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:31;2008:5;2015:7;2024:5;1999:8;:31::i;:::-;1411:626;;;;;;;;;;:::o;1467:149:3:-;-1:-1:-1;;;;;1582:18:3;;;1556:7;1582:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;1467:149::o;4074:370::-;-1:-1:-1;;;;;4205:19:3;;4197:68;;;;-1:-1:-1;;;4197:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4283:21:3;;4275:68;;;;-1:-1:-1;;;4275:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4354:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;4405:32;;;;;;;;;;;;;;;;;4074:370;;;:::o;2718:560::-;-1:-1:-1;;;;;2853:20:3;;2845:70;;;;-1:-1:-1;;;2845:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2933:23:3;;2925:71;;;;-1:-1:-1;;;2925:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3007:47;3028:6;3036:9;3047:6;3007:20;:47::i;:::-;3085:71;3107:6;3085:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3085:17:3;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;3065:17:3;;;:9;:17;;;;;;;;;;;:91;;;;3189:20;;;;;;;:32;;3214:6;3189:24;:32::i;:::-;-1:-1:-1;;;;;3166:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;3236:35;;;;;;;3166:20;;3236:35;;;;;;;;;;;;;2718:560;;;:::o;477:217:11:-;593:7;628:12;620:6;;;;612:29;;;;-1:-1:-1;;;612:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;663:5:11;;;477:217::o;3072:357:2:-;3125:7;3203:9;3247:16;3236:27;;3232:191;;;3286:24;3279:31;;;;;3232:191;3348:64;3370:10;3382:12;3396:15;3348:21;:64::i;:::-;3341:71;;;;;155:176:11;213:7;244:5;;;267:6;;;;259:46;;;;;-1:-1:-1;;;259:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:1;155:176;-1:-1:-1;;;155:176:11:o;3284:368:3:-;-1:-1:-1;;;;;3367:21:3;;3359:65;;;;;-1:-1:-1;;;3359:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:49;3463:1;3467:7;3476:6;3434:20;:49::i;:::-;3508:12;;:24;;3525:6;3508:16;:24::i;:::-;3493:12;:39;-1:-1:-1;;;;;3563:18:3;;:9;:18;;;;;;;;;;;:30;;3586:6;3563:22;:30::i;:::-;-1:-1:-1;;;;;3542:18:3;;:9;:18;;;;;;;;;;;:51;;;;3608:37;;;;;;;3542:18;;:9;;3608:37;;;;;;;;;;3284:368;;:::o;3658:410::-;-1:-1:-1;;;;;3741:21:3;;3733:67;;;;-1:-1:-1;;;3733:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3811:49;3832:7;3849:1;3853:6;3811:20;:49::i;:::-;3892:68;3915:6;3892:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3892:18:3;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;3871:18:3;;:9;:18;;;;;;;;;;:89;3985:12;;:24;;4002:6;3985:16;:24::i;:::-;3970:12;:39;4024:37;;;;;;;;4050:1;;-1:-1:-1;;;;;4024:37:3;;;;;;;;;;;;3658:410;;:::o;852:324:10:-;925:27;955:118;1004:7;955:118;;;;;;;;;;;;;;;;;:31;965:8;975:10;955:9;:31::i;:::-;:35;:118;:35;:118::i;:::-;925:148;;1084:51;1093:8;1103:10;1115:19;1084:8;:51::i;:::-;1145:24;1151:8;1161:7;1145:5;:24::i;:::-;852:324;;;:::o;524:112:0:-;615:14;;524:112::o;2592:203:4:-;-1:-1:-1;;;;;2712:14:4;;2652:15;2712:14;;;:7;:14;;;;;2746:15;2712:14;2746:13;:15::i;:::-;2736:25;;2771:17;:5;:15;:17::i;:::-;2592:203;;;;:::o;4399:165:2:-;4476:7;4502:55;4524:20;:18;:20::i;:::-;4546:10;4502:21;:55::i;7390:270:1:-;7513:7;7533:17;7552:18;7574:25;7585:4;7591:1;7594;7597;7574:10;:25::i;:::-;7532:67;;;;7609:18;7621:5;7609:11;:18::i;:::-;-1:-1:-1;7644:9:1;7390:270;-1:-1:-1;;;;;7390:270:1:o;3435:339:2:-;3699:67;;;;;;;;;;;;;;;;;;;;;;;;;3653:9;3699:67;;;;3760:4;3699:67;;;;;;;;;;;;;;;;;;;;;;;;3689:78;;;;;;3435:339::o;337:134:11:-;395:7;421:43;425:1;428;421:43;;;;;;;;;;;;;;;;;:3;:43::i;642:178:0:-;794:19;;812:1;794:19;;;642:178::o;8554:194:1:-;8683:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8673:68;;;;;;8554:194::o;5654:1603::-;5780:7;;6704:66;6691:79;;6687:161;;;-1:-1:-1;6802:1:1;;-1:-1:-1;6806:30:1;6786:51;;6687:161;6861:1;:7;;6866:2;6861:7;;:18;;;;;6872:1;:7;;6877:2;6872:7;;6861:18;6857:100;;;-1:-1:-1;6911:1:1;;-1:-1:-1;6915:30:1;6895:51;;6857:100;7051:14;7068:24;7078:4;7084:1;7087;7090;7068:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7068:24:1;;-1:-1:-1;;7068:24:1;;;-1:-1:-1;;;;;;;7106:20:1;;7102:101;;7158:1;7162:29;7142:50;;;;;;;7102:101;7221:6;-1:-1:-1;7229:20:1;;-1:-1:-1;5654:1603:1;;;;;;;;:::o;443:631::-;520:20;511:5;:29;;;;;;;;;507:561;;;556:7;;507:561;616:29;607:5;:38;;;;;;;;;603:465;;;661:34;;;-1:-1:-1;;;661:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;603:465;725:35;716:5;:44;;;;;;;;;712:356;;;776:41;;;-1:-1:-1;;;776:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;712:356;847:30;838:5;:39;;;;;;;;;834:234;;;893:44;;-1:-1:-1;;;893:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:234;967:30;958:5;:39;;;;;;;;;954:114;;;1013:44;;-1:-1:-1;;;1013:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1193800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "1338",
								"approve(address,uint256)": "infinite",
								"authority()": "1081",
								"balanceOf(address)": "1191",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "infinite",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1249",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"setAuthority(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_burnFrom(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 971,
									"end": 1066,
									"name": "PUSH",
									"source": 4,
									"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
								},
								{
									"begin": 918,
									"end": 1066,
									"name": "PUSH",
									"source": 4,
									"value": "140"
								},
								{
									"begin": 918,
									"end": 1066,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH",
									"source": 9,
									"value": "1A0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "15539055551213D492569151"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 255,
									"end": 291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 341,
									"end": 504,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 341,
									"end": 504,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 341,
									"end": 504,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "45786F647573"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 341,
									"end": 504,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP7",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "45584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 699,
									"end": 712,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 699,
									"end": 712,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 341,
									"end": 504,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 341,
									"end": 504,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 404,
									"end": 405,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 699,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 699,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 722,
									"end": 739,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 722,
									"end": 729,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 722,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 722,
									"end": 739,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 722,
									"end": 739,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "F8"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "FF00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2464,
									"end": 2473,
									"name": "CHAINID",
									"source": 2
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2464,
									"end": 2473,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2624,
									"end": 2741,
									"name": "PUSH",
									"source": 2,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2624,
									"end": 2741,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2890,
									"end": 2911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2863,
									"end": 2948,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 2863,
									"end": 2948,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2958,
									"end": 2979,
									"name": "PUSH",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 2958,
									"end": 2979,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 495,
									"end": 517,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 495,
									"end": 517,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 495,
									"end": 517,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 532,
									"end": 560,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 560,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 532,
									"end": 560,
									"name": "PUSH",
									"source": 9,
									"value": "2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD"
								},
								{
									"begin": 532,
									"end": 560,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 532,
									"end": 560,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 532,
									"end": 560,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 444,
									"end": 567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 341,
									"end": 504,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3774,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 3435,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3653,
									"end": 3662,
									"name": "CHAINID",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3760,
									"end": 3764,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3435,
									"end": 3774,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1059"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "422"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "420"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "418"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "416"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "414"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "587"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1178,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9925a2003707a9b92a6cd44b17125a2eee1d938be679d9b58ce987133c74aa864736f6c63430007050033",
									".code": [
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "A457C2D7"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "BF7E214F"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "BF7E214F"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "D505ACCF"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "A457C2D7"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "7A9E5E4B"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "7A9E5E4B"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "7ECEBE00"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "39509351"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "39509351"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "3644E515"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 510,
											"end": 628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 634,
											"end": 724,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 730,
											"end": 846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 833,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 833,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1730,
											"end": 1740,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1721,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 1979,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2042,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH data",
											"source": 3,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "587"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2434,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2434,
											"end": 2454,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2434,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2434,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2321,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2358,
											"end": 2368,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2321,
											"end": 2369,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 510,
											"end": 628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "PUSH",
											"source": 9,
											"value": "FBFA77CF"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1027,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1006,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1027,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 597,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 603,
											"end": 611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 613,
											"end": 620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 597,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 597,
											"end": 621,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 621,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 597,
											"end": 621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 628,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 634,
											"end": 724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 692,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 698,
											"end": 708,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 692,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 692,
											"end": 717,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 717,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 692,
											"end": 717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 634,
											"end": 724,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 730,
											"end": 846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 821,
											"end": 829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 831,
											"end": 838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 811,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 811,
											"end": 839,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 681,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 672,
											"end": 690,
											"name": "PUSH",
											"source": 9,
											"value": "C340A24"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 694,
											"end": 706,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 694,
											"end": 706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 658,
											"end": 692,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 658,
											"end": 668,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 658,
											"end": 692,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 650,
											"end": 707,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1203,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "PUSH",
											"source": 9,
											"value": "2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 941,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 909,
											"end": 922,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 909,
											"end": 922,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 941,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 941,
											"end": 948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2535,
											"end": 2545,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH data",
											"source": 3,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2602,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 359,
											"end": 392,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1642,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "45524332305065726D69743A206578706972656420646561646C696E65000000"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1757,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "1059"
										},
										{
											"begin": 1759,
											"end": 1764,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1773,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1808,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1810,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1833,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1906,
											"end": 1910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1919,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "45524332305065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1593,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH data",
											"source": 3,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4283,
											"end": 4304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4283,
											"end": 4304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH data",
											"source": 3,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4365,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 2873,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2873,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH data",
											"source": 3,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 2956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH data",
											"source": 3,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3028,
											"end": 3034,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3047,
											"end": 3053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3007,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH data",
											"source": 3,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3220,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3189,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 593,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3072,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3072,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3212,
											"name": "CHAINID",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3263,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 3236,
											"end": 3263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3263,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 3382,
											"end": 3394,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 3348,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 155,
											"end": 331,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 213,
											"end": 220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 324,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 155,
											"end": 331,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 155,
											"end": 331,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3505,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3493,
											"end": 3532,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3741,
											"end": 3762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3741,
											"end": 3762,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH data",
											"source": 3,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3832,
											"end": 3839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3850,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3915,
											"end": 3921,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH data",
											"source": 3,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3960,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3970,
											"end": 3982,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 852,
											"end": 1176,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 852,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 925,
											"end": 952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH data",
											"source": 10,
											"value": "A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 965,
											"end": 973,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 975,
											"end": 985,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 955,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 955,
											"end": 990,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 955,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 955,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 925,
											"end": 1073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 925,
											"end": 1073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 1093,
											"end": 1101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1103,
											"end": 1113,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1084,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1145,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 1151,
											"end": 1159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1145,
											"end": 1169,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1169,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 1145,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 852,
											"end": 1176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 852,
											"end": 1176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 852,
											"end": 1176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 852,
											"end": 1176,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 524,
											"end": 636,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 524,
											"end": 636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2771,
											"end": 2776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4399,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4399,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 4524,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4502,
											"end": 4557,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7585,
											"end": 7589,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7595,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7621,
											"end": 7626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3435,
											"end": 3774,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3435,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3653,
											"end": 3662,
											"name": "CHAINID",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3764,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3774,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 395,
											"end": 402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 429,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "1E"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 642,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 812,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 794,
											"end": 813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 642,
											"end": 820,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8554,
											"end": 8748,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8554,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8748,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6770,
											"name": "PUSH",
											"source": 1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6691,
											"end": 6770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6770,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6836,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6786,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6786,
											"end": 6837,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6879,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6945,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6895,
											"end": 6946,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7091,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7106,
											"end": 7126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7191,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7229,
											"end": 7249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 443,
											"end": 1074,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 443,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 540,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 511,
											"end": 540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 511,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 511,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 511,
											"end": 540,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 511,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 511,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 540,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 645,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 607,
											"end": 645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 607,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 607,
											"end": 645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 607,
											"end": 645,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 607,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 607,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 645,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 716,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 716,
											"end": 760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 716,
											"end": 760,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 716,
											"end": 760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 716,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 716,
											"end": 760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 716,
											"end": 760,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 716,
											"end": 760,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 716,
											"end": 760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 716,
											"end": 760,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 838,
											"end": 843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 838,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 838,
											"end": 877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 838,
											"end": 877,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 838,
											"end": 877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 838,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 838,
											"end": 877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 838,
											"end": 877,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 838,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 838,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 838,
											"end": 877,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH data",
											"source": 1,
											"value": "520D1F787DBCAFBBFC007FD2C4ECF3D2711EC587F3EE9A1215C0B646C3E530BD"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 958,
											"end": 997,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 958,
											"end": 997,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 958,
											"end": 997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 958,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 958,
											"end": 997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 958,
											"end": 997,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 958,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 958,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 958,
											"end": 997,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH data",
											"source": 1,
											"value": "8522EE1B53216F595394DB8E80A64D9E7D9BD512C0811C18DEBE9F40858597E4"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"520D1F787DBCAFBBFC007FD2C4ECF3D2711EC587F3EE9A1215C0B646C3E530BD": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"8522EE1B53216F595394DB8E80A64D9E7D9BD512C0811C18DEBE9F40858597E4": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authority()": "bf7e214f",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setAuthority(address)": "7a9e5e4b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IExodusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/OlympusERC20.sol\":\"ExodusERC20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/Counters.sol\":{\"keccak256\":\"0x2723e1522fb9088bb9ee8d3f20e9f3b04bc38daf127ef1dc624e61a88cbf48de\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b52e187f74d2be83d893b2b47f866878504b14ba04834cb5e3d06219c5ab5673\",\"dweb:/ipfs/QmcYVMhAunHXNU55TGZGkSKATbDCNTgs42u4q5At8NN4Ce\"]},\"ExodusERC20Token/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]},\"ExodusERC20Token/EIP712.sol\":{\"keccak256\":\"0x76bfc700bb36030b1e9c73abc9b024eea9632c4538f0eedca7f15ae062b4581c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5a92ca1f712919f5da7f70fabfa55626f772f6e455510a49b2b55ec0632315\",\"dweb:/ipfs/Qme3YZHzQgeAZ7m8tB9zWdRLopRqNsBppKVj9cpKuAaLBE\"]},\"ExodusERC20Token/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"ExodusERC20Token/ERC20Permit.sol\":{\"keccak256\":\"0x652e9ebde967277c422d494f1696e735864ea171b04f210f1a9356553b800d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c501477f99535423eeb0617e706d78fa9fd5b50d4cdec4f069a922f1bc4e26\",\"dweb:/ipfs/QmTKQShGC5NYbYfENQ1pKqedGmMdiBXm86SVdykrKwTXF1\"]},\"ExodusERC20Token/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExodusERC20Token/IERC20Permit.sol\":{\"keccak256\":\"0x681e969fed243296a88805a5c99bc934b6149f0310ce7761a9cbd988f2cc139a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c274384e15d6fe8eeb1eb4a8468162ca96d7135e0714f9ac050883e9dfebb58d\",\"dweb:/ipfs/QmXmafvMmYq6xvWwvKwXSHdmpjYDwYd1CqBjLhRi1qSPxj\"]},\"ExodusERC20Token/IOHM.sol\":{\"keccak256\":\"0x72e5b4ed781e0eed921534e2a4e3f3460ac25367d68e09c00d59117ecbe1e5af\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7b416f043fd9a0a8a2b52e3f44730726270e6469a82d68203bb4fad1475a7205\",\"dweb:/ipfs/QmcH7F68HfLqK6PT6b3JHYRizJ3V4YbuV8MuXTLTPrSid2\"]},\"ExodusERC20Token/IOlympusAuthority.sol\":{\"keccak256\":\"0x81a1f77da7ddb3bf1defad03673098cc8d01fbb1ea29d9ef4968b205746f041c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://2ae99a51e64ed363058e8b18c33b1f498f84d3588f71c442e427fc0021a79a04\",\"dweb:/ipfs/QmTkMMtvLKnhqEtRWCimY2r3oY5B8FpHqmG5fuhbLQKRJg\"]},\"ExodusERC20Token/OlympusAccessControlled.sol\":{\"keccak256\":\"0xe08e1633d46748f33f8e4bab7cc743f5f427174aa54ad4b9066e8106aad66b69\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://01010d4ba59a88af6b3dd2fe46d06ce141effdf0421dfaa8dc91b8d3cc895654\",\"dweb:/ipfs/QmaPzow7X4CNeCNUd2vgwDpbnqvHxCnQV3L2kfAFu56qAX\"]},\"ExodusERC20Token/OlympusERC20.sol\":{\"keccak256\":\"0x7bd6ded2925490e85f55d2bc43c9459c7a5e709ec2c120d596e21482ca54fc26\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5efbfb7c678b68d1208c0d27965c793619626ddf3d58ee1c4dcff5c9a5a4b353\",\"dweb:/ipfs/Qmagtsg85YrMEiaxxBZ4jiQUVb9zUgBYGARUyjM45oK43g\"]},\"ExodusERC20Token/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 573,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 579,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 581,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 583,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 585,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1054,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "_nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Counter)8_storage)"
							},
							{
								"astId": 1418,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "UNAUTHORIZED",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1420,
								"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
								"label": "authority",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IExodusAuthority)1408"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IExodusAuthority)1408": {
								"encoding": "inplace",
								"label": "contract IExodusAuthority",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)8_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)8_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 7,
										"contract": "ExodusERC20Token/OlympusERC20.sol:ExodusERC20Token",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusERC20Token/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusERC20Token/SafeMath.sol\":132:1759  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusERC20Token/SafeMath.sol\":132:1759  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b3aa9644bd0ffafb6c70974103a617284f1bbb766d35ac44819f7355c2a3ff0464736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3aa9644bd0ffafb6c70974103a617284f1bbb766d35ac44819f7355c2a3ff0464736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xAA SWAP7 DIFFICULTY 0xBD 0xF STATICCALL 0xFB PUSH13 0x70974103A617284F1BBB766D35 0xAC DIFFICULTY DUP2 SWAP16 PUSH20 0x55C2A3FF0464736F6C6343000705003300000000 ",
							"sourceMap": "132:1627:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3aa9644bd0ffafb6c70974103a617284f1bbb766d35ac44819f7355c2a3ff0464736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xAA SWAP7 DIFFICULTY 0xBD 0xF STATICCALL 0xFB PUSH13 0x70974103A617284F1BBB766D35 0xAC DIFFICULTY DUP2 SWAP16 PUSH20 0x55C2A3FF0464736F6C6343000705003300000000 ",
							"sourceMap": "132:1627:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3aa9644bd0ffafb6c70974103a617284f1bbb766d35ac44819f7355c2a3ff0464736f6c63430007050033",
									".code": [
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusERC20Token/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusERC20Token/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ExodusERC20Token/Counters.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							48
						],
						"SafeMath": [
							1838
						]
					},
					"id": 49,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "ExodusERC20Token/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 1839,
							"src": "62:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1838,
										"src": "117:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1838",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "111:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "130:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "483:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "483:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 48,
									"src": "144:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "598:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7,
													"src": "615:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "608:21:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "541:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 9,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:25:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "589:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:9:0"
									},
									"scope": 48,
									"src": "524:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "695:125:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 24,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "794:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "812:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "794:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "794:19:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "661:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 20,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:25:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:0:0"
									},
									"scope": 48,
									"src": "642:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "879:55:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 36,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "889:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "925:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 39,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "906:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "906:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "906:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "906:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "889:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "889:38:0"
											}
										]
									},
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "845:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 32,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:25:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:0"
									},
									"scope": 48,
									"src": "826:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 49,
							"src": "88:848:0"
						}
					],
					"src": "37:900:0"
				},
				"id": 0
			},
			"ExodusERC20Token/ECDSA.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 51,
								"nodeType": "StructuredDocumentation",
								"src": "58:205:1",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408
							],
							"name": "ECDSA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 57,
									"members": [
										{
											"id": 52,
											"name": "NoError",
											"nodeType": "EnumValue",
											"src": "312:7:1"
										},
										{
											"id": 53,
											"name": "InvalidSignature",
											"nodeType": "EnumValue",
											"src": "329:16:1"
										},
										{
											"id": 54,
											"name": "InvalidSignatureLength",
											"nodeType": "EnumValue",
											"src": "355:22:1"
										},
										{
											"id": 55,
											"name": "InvalidSignatureS",
											"nodeType": "EnumValue",
											"src": "387:17:1"
										},
										{
											"id": 56,
											"name": "InvalidSignatureV",
											"nodeType": "EnumValue",
											"src": "414:17:1"
										}
									],
									"name": "RecoverError",
									"nodeType": "EnumDefinition",
									"src": "284:153:1"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "497:577:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$57",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "511:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$57",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 63,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "520:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"src": "520:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$57",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "511:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$57",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 68,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "607:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 69,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "616:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"src": "616:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "607:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "716:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$57",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 78,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "725:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"src": "725:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$57",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "716:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$57",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 86,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "838:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$57",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 87,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "847:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"src": "847:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$57",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "838:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$57",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 95,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 59,
																		"src": "958:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$57",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 96,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "967:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureV",
																		"nodeType": "MemberAccess",
																		"src": "967:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$57",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "958:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 104,
																"nodeType": "IfStatement",
																"src": "954:114:1",
																"trueBody": {
																	"id": 103,
																	"nodeType": "Block",
																	"src": "999:69:1",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
																						"id": 100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1020:36:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
																							"typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
																						},
																						"value": "ECDSA: invalid signature 'v' value"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
																							"typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
																						}
																					],
																					"id": 99,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						-19,
																						-19
																					],
																					"referencedDeclaration": -19,
																					"src": "1013:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1013:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 102,
																			"nodeType": "ExpressionStatement",
																			"src": "1013:44:1"
																		}
																	]
																}
															},
															"id": 105,
															"nodeType": "IfStatement",
															"src": "834:234:1",
															"trueBody": {
																"id": 94,
																"nodeType": "Block",
																"src": "879:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 91,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "900:36:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 90,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "893:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 92,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "893:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 93,
																		"nodeType": "ExpressionStatement",
																		"src": "893:44:1"
																	}
																]
															}
														},
														"id": 106,
														"nodeType": "IfStatement",
														"src": "712:356:1",
														"trueBody": {
															"id": 85,
															"nodeType": "Block",
															"src": "762:66:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 82,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "783:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 81,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-19,
																				-19
																			],
																			"referencedDeclaration": -19,
																			"src": "776:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "776:41:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 84,
																	"nodeType": "ExpressionStatement",
																	"src": "776:41:1"
																}
															]
														}
													},
													"id": 107,
													"nodeType": "IfStatement",
													"src": "603:465:1",
													"trueBody": {
														"id": 76,
														"nodeType": "Block",
														"src": "647:59:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 73,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "668:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 72,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			-19,
																			-19
																		],
																		"referencedDeclaration": -19,
																		"src": "661:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "661:34:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 75,
																"nodeType": "ExpressionStatement",
																"src": "661:34:1"
															}
														]
													}
												},
												"id": 108,
												"nodeType": "IfStatement",
												"src": "507:561:1",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "542:55:1",
													"statements": [
														{
															"functionReturnParameters": 61,
															"id": 66,
															"nodeType": "Return",
															"src": "556:7:1"
														}
													]
												}
											}
										]
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "error",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "464:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$57",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 58,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 57,
													"src": "464:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$57",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:20:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:0:1"
									},
									"scope": 408,
									"src": "443:631:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "2242:1175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 122,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2449:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2449:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2469:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2449:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 144,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2931:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2931:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3634",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2951:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "2931:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 170,
														"nodeType": "Block",
														"src": "3330:81:1",
														"statements": [
															{
																"expression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3360:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3352:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 162,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3352:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3352:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"expression": {
																				"id": 166,
																				"name": "RecoverError",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "3364:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																					"typeString": "type(enum ECDSA.RecoverError)"
																				}
																			},
																			"id": 167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "InvalidSignatureLength",
																			"nodeType": "MemberAccess",
																			"src": "3364:35:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_RecoverError_$57",
																				"typeString": "enum ECDSA.RecoverError"
																			}
																		}
																	],
																	"id": 168,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3351:49:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$57_$",
																		"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																	}
																},
																"functionReturnParameters": 121,
																"id": 169,
																"nodeType": "Return",
																"src": "3344:56:1"
															}
														]
													},
													"id": 171,
													"nodeType": "IfStatement",
													"src": "2927:484:1",
													"trueBody": {
														"id": 161,
														"nodeType": "Block",
														"src": "2955:369:1",
														"statements": [
															{
																"assignments": [
																	149
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 149,
																		"mutability": "mutable",
																		"name": "r",
																		"nodeType": "VariableDeclaration",
																		"scope": 161,
																		"src": "2969:9:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"typeName": {
																			"id": 148,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2969:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 150,
																"nodeType": "VariableDeclarationStatement",
																"src": "2969:9:1"
															},
															{
																"assignments": [
																	152
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 152,
																		"mutability": "mutable",
																		"name": "vs",
																		"nodeType": "VariableDeclaration",
																		"scope": 161,
																		"src": "2992:10:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"typeName": {
																			"id": 151,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2992:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 153,
																"nodeType": "VariableDeclarationStatement",
																"src": "2992:10:1"
															},
															{
																"AST": {
																	"nodeType": "YulBlock",
																	"src": "3156:114:1",
																	"statements": [
																		{
																			"nodeType": "YulAssignment",
																			"src": "3174:32:1",
																			"value": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "signature",
																								"nodeType": "YulIdentifier",
																								"src": "3189:9:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3200:4:1",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3185:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3185:20:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3179:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:27:1"
																			},
																			"variableNames": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "3174:1:1"
																				}
																			]
																		},
																		{
																			"nodeType": "YulAssignment",
																			"src": "3223:33:1",
																			"value": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "signature",
																								"nodeType": "YulIdentifier",
																								"src": "3239:9:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3250:4:1",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3235:20:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3229:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3229:27:1"
																			},
																			"variableNames": [
																				{
																					"name": "vs",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:1"
																				}
																			]
																		}
																	]
																},
																"evmVersion": "istanbul",
																"externalReferences": [
																	{
																		"declaration": 149,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3174:1:1",
																		"valueSize": 1
																	},
																	{
																		"declaration": 115,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3189:9:1",
																		"valueSize": 1
																	},
																	{
																		"declaration": 115,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3239:9:1",
																		"valueSize": 1
																	},
																	{
																		"declaration": 152,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3223:2:1",
																		"valueSize": 1
																	}
																],
																"id": 154,
																"nodeType": "InlineAssembly",
																"src": "3147:123:1"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 156,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "3301:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 157,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "3307:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 158,
																			"name": "vs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 152,
																			"src": "3310:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 155,
																		"name": "tryRecover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			174,
																			229,
																			338
																		],
																		"referencedDeclaration": 229,
																		"src": "3290:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$57_$",
																			"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3290:23:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$57_$",
																		"typeString": "tuple(address,enum ECDSA.RecoverError)"
																	}
																},
																"functionReturnParameters": 121,
																"id": 160,
																"nodeType": "Return",
																"src": "3283:30:1"
															}
														]
													}
												},
												"id": 172,
												"nodeType": "IfStatement",
												"src": "2445:966:1",
												"trueBody": {
													"id": 143,
													"nodeType": "Block",
													"src": "2473:448:1",
													"statements": [
														{
															"assignments": [
																127
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 127,
																	"mutability": "mutable",
																	"name": "r",
																	"nodeType": "VariableDeclaration",
																	"scope": 143,
																	"src": "2487:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 126,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2487:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 128,
															"nodeType": "VariableDeclarationStatement",
															"src": "2487:9:1"
														},
														{
															"assignments": [
																130
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 130,
																	"mutability": "mutable",
																	"name": "s",
																	"nodeType": "VariableDeclaration",
																	"scope": 143,
																	"src": "2510:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 129,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2510:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 131,
															"nodeType": "VariableDeclarationStatement",
															"src": "2510:9:1"
														},
														{
															"assignments": [
																133
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 133,
																	"mutability": "mutable",
																	"name": "v",
																	"nodeType": "VariableDeclaration",
																	"scope": 143,
																	"src": "2533:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 132,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2533:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 134,
															"nodeType": "VariableDeclarationStatement",
															"src": "2533:7:1"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2694:171:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2712:32:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2727:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2738:4:1",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2723:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2723:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2717:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2717:27:1"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2712:1:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2761:32:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2776:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2787:4:1",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2772:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2772:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2766:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2766:27:1"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2761:1:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2810:41:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2820:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2833:9:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2844:4:1",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2829:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2829:20:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2823:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2823:27:1"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2815:4:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2815:36:1"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2810:1:1"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 127,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2712:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 130,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2761:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 115,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2727:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 115,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2776:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 115,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2833:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 133,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2810:1:1",
																	"valueSize": 1
																}
															],
															"id": 135,
															"nodeType": "InlineAssembly",
															"src": "2685:180:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 137,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "2896:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 138,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 133,
																		"src": "2902:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 139,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "2905:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 140,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "2908:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 136,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		174,
																		229,
																		338
																	],
																	"referencedDeclaration": 338,
																	"src": "2885:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$57_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2885:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$57_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 121,
															"id": 142,
															"nodeType": "Return",
															"src": "2878:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1080:1053:1",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2158:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2172:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2172:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:38:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2219:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2228:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$57",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 119,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 57,
													"src": "2228:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$57",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:23:1"
									},
									"scope": 408,
									"src": "2138:1279:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "4290:140:1",
										"statements": [
											{
												"assignments": [
													185,
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "4301:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 184,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4301:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "4320:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$57",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 186,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 57,
															"src": "4320:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"arguments": [
														{
															"id": 189,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4353:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "4359:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 188,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															229,
															338
														],
														"referencedDeclaration": 174,
														"src": "4342:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$57_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$57_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4300:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "4391:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 193,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "4379:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$57_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4379:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "4379:18:1"
											},
											{
												"expression": {
													"id": 197,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 185,
													"src": "4414:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 183,
												"id": 198,
												"nodeType": "Return",
												"src": "4407:16:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "3423:775:1",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4220:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4234:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4219:38:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4281:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4280:9:1"
									},
									"scope": 408,
									"src": "4203:227:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "4817:246:1",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "4827:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 214,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4827:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"nodeType": "VariableDeclarationStatement",
												"src": "4827:9:1"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "4846:7:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 217,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4846:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"nodeType": "VariableDeclarationStatement",
												"src": "4846:7:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4872:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4886:80:1",
															"value": {
																"arguments": [
																	{
																		"name": "vs",
																		"nodeType": "YulIdentifier",
																		"src": "4895:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:66:1",
																		"type": "",
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:75:1"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "4886:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4979:26:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:3:1",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"name": "vs",
																				"nodeType": "YulIdentifier",
																				"src": "4997:2:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:12:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5002:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:21:1"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "4979:1:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "4886:1:1",
														"valueSize": 1
													},
													{
														"declaration": 218,
														"isOffset": false,
														"isSlot": false,
														"src": "4979:1:1",
														"valueSize": 1
													},
													{
														"declaration": 207,
														"isOffset": false,
														"isSlot": false,
														"src": "4895:2:1",
														"valueSize": 1
													},
													{
														"declaration": 207,
														"isOffset": false,
														"isSlot": false,
														"src": "4997:2:1",
														"valueSize": 1
													}
												],
												"id": 220,
												"nodeType": "InlineAssembly",
												"src": "4863:152:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5042:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "5048:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 224,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "5051:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 225,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5054:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 221,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															229,
															338
														],
														"referencedDeclaration": 338,
														"src": "5031:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$57_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5031:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$57_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 213,
												"id": 227,
												"nodeType": "Return",
												"src": "5024:32:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "4436:243:1",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "4713:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "4735:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "vs",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "4754:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4703:67:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "4794:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "4803:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$57",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 211,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 57,
													"src": "4803:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$57",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:23:1"
									},
									"scope": 408,
									"src": "4684:379:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "5344:136:1",
										"statements": [
											{
												"assignments": [
													242,
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "5355:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 241,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5355:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "5374:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$57",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 243,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 57,
															"src": "5374:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 250,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "5407:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5413:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 248,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "5416:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 245,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															229,
															338
														],
														"referencedDeclaration": 229,
														"src": "5396:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$57_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5396:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$57_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5354:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 252,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5441:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 251,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "5429:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$57_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5429:18:1"
											},
											{
												"expression": {
													"id": 255,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 242,
													"src": "5464:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 240,
												"id": 256,
												"nodeType": "Return",
												"src": "5457:16:1"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "5069:154:1",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "5254:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "5276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "vs",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "5295:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:67:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "5335:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5335:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:9:1"
									},
									"scope": 408,
									"src": "5228:252:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5803:1454:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 276,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6699:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6691:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 274,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6691:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6691:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6704:66:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6691:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "IfStatement",
												"src": "6687:161:1",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6772:76:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6802:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6794:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 280,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6794:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6794:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 284,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "6806:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"src": "6806:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$57",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$57_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 273,
															"id": 287,
															"nodeType": "Return",
															"src": "6786:51:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 290,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "6861:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3237",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6866:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															},
															"value": "27"
														},
														"src": "6861:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 293,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "6872:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3238",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6877:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28_by_1",
																"typeString": "int_const 28"
															},
															"value": "28"
														},
														"src": "6872:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6861:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "6857:100:1",
												"trueBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "6881:76:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6911:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6903:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 297,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6903:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6903:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 301,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "6915:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureV",
																		"nodeType": "MemberAccess",
																		"src": "6915:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$57",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6902:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$57_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 273,
															"id": 304,
															"nodeType": "Return",
															"src": "6895:51:1"
														}
													]
												}
											},
											{
												"assignments": [
													308
												],
												"declarations": [
													{
														"constant": false,
														"id": 308,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "7051:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 307,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7051:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"id": 310,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "7078:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 311,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "7084:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 312,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "7087:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 313,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7090:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 309,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "7068:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7051:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 316,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "7106:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7124:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7116:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 317,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7116:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7116:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "7106:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "IfStatement",
												"src": "7102:101:1",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "7128:75:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7158:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7150:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 322,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7150:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7150:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 326,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "7162:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"src": "7162:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$57",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7149:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$57_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 273,
															"id": 329,
															"nodeType": "Return",
															"src": "7142:50:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 332,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "7221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 333,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "7229:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$57_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"src": "7229:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 335,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7220:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$57_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 273,
												"id": 336,
												"nodeType": "Return",
												"src": "7213:37:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "5486:163:1",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5683:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5705:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 262,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5705:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5722:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5722:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5741:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:83:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5780:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5789:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$57",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 271,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 57,
													"src": "5789:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$57",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5779:23:1"
									},
									"scope": 408,
									"src": "5654:1603:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7522:138:1",
										"statements": [
											{
												"assignments": [
													353,
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "7533:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 352,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7533:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "7552:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$57",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 354,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 57,
															"src": "7552:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 357,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "7585:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 358,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "7591:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 359,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "7594:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 360,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "7597:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															229,
															338
														],
														"referencedDeclaration": 338,
														"src": "7574:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$57_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7574:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$57_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7532:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 364,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "7621:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$57",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 363,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "7609:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$57_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7609:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "7609:18:1"
											},
											{
												"expression": {
													"id": 367,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "7644:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 351,
												"id": 368,
												"nodeType": "Return",
												"src": "7637:16:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "7263:122:1",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7416:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 340,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7438:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7455:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7474:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7406:83:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7513:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7513:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7512:9:1"
									},
									"scope": 408,
									"src": "7390:270:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "8028:187:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8166:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 382,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "8202:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 379,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8149:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8149:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 378,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "8139:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8139:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 377,
												"id": 385,
												"nodeType": "Return",
												"src": "8132:76:1"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7666:279:1",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7982:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7981:14:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "8019:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8018:9:1"
									},
									"scope": 408,
									"src": "7950:265:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "8656:92:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 401,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "8712:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 402,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8729:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 398,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8683:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8683:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8683:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 397,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "8673:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8673:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 396,
												"id": 405,
												"nodeType": "Return",
												"src": "8666:75:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "8221:328:1",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "8579:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 389,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "structHash",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "8604:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 391,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:45:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "8647:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:9:1"
									},
									"scope": 408,
									"src": "8554:194:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 409,
							"src": "264:8486:1"
						}
					],
					"src": "33:8718:1"
				},
				"id": 1
			},
			"ExodusERC20Token/EIP712.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/EIP712.sol",
					"exportedSymbols": {
						"ECDSA": [
							408
						],
						"EIP712": [
							555
						]
					},
					"id": 556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "ExodusERC20Token/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 411,
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 409,
							"src": "58:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "81:1142:2",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "EIP712",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 414,
									"mutability": "immutable",
									"name": "_CACHED_DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1492:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 413,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1492:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "immutable",
									"name": "_CACHED_CHAIN_ID",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1548:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1548:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 418,
									"mutability": "immutable",
									"name": "_HASHED_NAME",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1597:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 417,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1597:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 420,
									"mutability": "immutable",
									"name": "_HASHED_VERSION",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1641:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 419,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1641:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 422,
									"mutability": "immutable",
									"name": "_TYPE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1688:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 421,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1688:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2395:591:2",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2405:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2405:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 432,
												"nodeType": "VariableDeclarationStatement",
												"src": "2405:15:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2439:44:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2453:20:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "2464:7:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:9:2"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "2453:7:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 431,
														"isOffset": false,
														"isSlot": false,
														"src": "2453:7:2",
														"valueSize": 1
													}
												],
												"id": 433,
												"nodeType": "InlineAssembly",
												"src": "2430:53:2"
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "hashedName",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2493:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 434,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2493:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 439,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "2530:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2524:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 437,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2524:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2524:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 436,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "2514:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2493:43:2"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "hashedVersion",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2546:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 443,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2546:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 448,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "2586:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2580:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 446,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2580:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2580:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 445,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "2570:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2546:49:2"
											},
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "typeHash",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2605:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 452,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2605:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:84:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
															},
															"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
															}
														],
														"id": 454,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "2624:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:117:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2605:136:2"
											},
											{
												"expression": {
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 458,
														"name": "_HASHED_NAME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2751:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 459,
														"name": "hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "2766:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2751:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "2751:25:2"
											},
											{
												"expression": {
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 462,
														"name": "_HASHED_VERSION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2786:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 463,
														"name": "hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2804:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2786:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "2786:31:2"
											},
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 466,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2827:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 467,
														"name": "chainID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2846:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2827:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "2827:26:2"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 470,
														"name": "_CACHED_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2863:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 472,
																"name": "typeHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "2912:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 473,
																"name": "hashedName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "2922:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 474,
																"name": "hashedVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "2934:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 471,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "2890:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32,bytes32) view returns (bytes32)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2890:58:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2863:85:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "2863:85:2"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "_TYPE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "2958:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 479,
														"name": "typeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "2971:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2958:21:2"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1776:559:2",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 483,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2352:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "version",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2372:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2372:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:43:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2395:0:2"
									},
									"scope": 555,
									"src": "2340:646:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3134:295:2",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "3144:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3144:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"nodeType": "VariableDeclarationStatement",
												"src": "3144:15:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3178:44:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:20:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "3203:7:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:9:2"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "3192:7:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 490,
														"isOffset": false,
														"isSlot": false,
														"src": "3192:7:2",
														"valueSize": 1
													}
												],
												"id": 492,
												"nodeType": "InlineAssembly",
												"src": "3169:53:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 493,
														"name": "chainID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "3236:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 494,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "3247:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3236:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "3327:96:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 500,
																		"name": "_TYPE_HASH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "3370:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 501,
																		"name": "_HASHED_NAME",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "3382:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 502,
																		"name": "_HASHED_VERSION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "3396:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 499,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "3348:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes32,bytes32) view returns (bytes32)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3348:64:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 488,
															"id": 504,
															"nodeType": "Return",
															"src": "3341:71:2"
														}
													]
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "3232:191:2",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "3265:56:2",
													"statements": [
														{
															"expression": {
																"id": 496,
																"name": "_CACHED_DOMAIN_SEPARATOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "3286:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 488,
															"id": 497,
															"nodeType": "Return",
															"src": "3279:31:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2992:75:2",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3099:2:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3125:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3124:9:2"
									},
									"scope": 555,
									"src": "3072:357:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3584:190:2",
										"statements": [
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3594:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 521,
												"nodeType": "VariableDeclarationStatement",
												"src": "3594:15:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3628:44:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3642:20:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "3653:7:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:9:2"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "3642:7:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 520,
														"isOffset": false,
														"isSlot": false,
														"src": "3642:7:2",
														"valueSize": 1
													}
												],
												"id": 522,
												"nodeType": "InlineAssembly",
												"src": "3619:53:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 526,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3710:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 527,
																	"name": "nameHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "3720:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 528,
																	"name": "versionHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "3730:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 529,
																	"name": "chainID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "3743:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 532,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "3760:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$555",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$555",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3752:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 530,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3752:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3752:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 524,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3699:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3699:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3699:67:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 523,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3689:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 518,
												"id": 536,
												"nodeType": "Return",
												"src": "3682:85:2"
											}
										]
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "typeHash",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3475:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "nameHash",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3501:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 511,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "versionHash",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3527:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3465:87:2"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3575:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 516,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3575:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:9:2"
									},
									"scope": 555,
									"src": "3435:339:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "4485:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 548,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "4524:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4524:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 550,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4546:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 546,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4502:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$408_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "4502:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 545,
												"id": 552,
												"nodeType": "Return",
												"src": "4495:62:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3780:614:2",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "structHash",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 540,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:20:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4476:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 543,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4476:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4475:9:2"
									},
									"scope": 555,
									"src": "4399:165:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 556,
							"src": "1224:3342:2"
						}
					],
					"src": "33:4534:2"
				},
				"id": 2
			},
			"ExodusERC20Token/ERC20.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1033
						],
						"IERC20": [
							1268
						],
						"SafeMath": [
							1838
						]
					},
					"id": 1034,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 557,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:3"
						},
						{
							"absolutePath": "ExodusERC20Token/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 558,
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 1839,
							"src": "72:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 559,
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 1269,
							"src": "98:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 560,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1268,
										"src": "149:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1268",
											"typeString": "contract IERC20"
										}
									},
									"id": 561,
									"nodeType": "InheritanceSpecifier",
									"src": "149:6:3"
								}
							],
							"contractDependencies": [
								1268
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1033,
							"linearizedBaseContracts": [
								1033,
								1268
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 564,
									"libraryName": {
										"id": 562,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1838,
										"src": "168:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1838",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "162:27:3",
									"typeName": {
										"id": 563,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "181:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 569,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "234:82:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 565,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "234:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 567,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "303:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 566,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "293:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 568,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "293:23:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 573,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "323:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 572,
										"keyType": {
											"id": 570,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "331:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "323:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 571,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 579,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "376:68:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 578,
										"keyType": {
											"id": 574,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "384:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "376:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 577,
											"keyType": {
												"id": 575,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "403:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "395:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 576,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "414:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 581,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "451:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 580,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 583,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "487:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 582,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "487:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 585,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "515:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 584,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "515:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 587,
									"mutability": "immutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "545:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 586,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "545:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "689:88:3",
										"statements": [
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "699:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 597,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "707:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "699:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "699:13:3"
											},
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 600,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "722:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 601,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "732:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "722:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "722:17:3"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 604,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "749:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 605,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "761:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "749:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "749:21:3"
											}
										]
									},
									"id": 609,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "607:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "607:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 590,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "667:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 592,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "667:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:91:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:3"
									},
									"scope": 1033,
									"src": "586:191:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "835:29:3",
										"statements": [
											{
												"expression": {
													"id": 614,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 583,
													"src": "852:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 613,
												"id": 615,
												"nodeType": "Return",
												"src": "845:12:3"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "820:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "820:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:15:3"
									},
									"scope": 1033,
									"src": "783:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "924:31:3",
										"statements": [
											{
												"expression": {
													"id": 622,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 585,
													"src": "941:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 621,
												"id": 623,
												"nodeType": "Return",
												"src": "934:14:3"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:2:3"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "909:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "909:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:15:3"
									},
									"scope": 1033,
									"src": "870:85:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "1017:33:3",
										"statements": [
											{
												"expression": {
													"id": 630,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 587,
													"src": "1034:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 629,
												"id": 631,
												"nodeType": "Return",
												"src": "1027:16:3"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:3"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1010:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 627,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1010:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:7:3"
									},
									"scope": 1033,
									"src": "961:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1206
									],
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1118:36:3",
										"statements": [
											{
												"expression": {
													"id": 639,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 581,
													"src": "1135:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 638,
												"id": 640,
												"nodeType": "Return",
												"src": "1128:19:3"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 635,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1091:8:3"
									},
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:2:3"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1109:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:3"
									},
									"scope": 1033,
									"src": "1056:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "1243:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 650,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1260:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 652,
													"indexExpression": {
														"id": 651,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "1270:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1260:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 653,
												"nodeType": "Return",
												"src": "1253:25:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 646,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1216:8:3"
									},
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "1179:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:17:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "1234:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:9:3"
									},
									"scope": 1033,
									"src": "1160:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1222
									],
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1383:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 666,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1403:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1403:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 668,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "1415:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "1426:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 665,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "1393:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "1393:40:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1450:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 664,
												"id": 673,
												"nodeType": "Return",
												"src": "1443:11:3"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 661,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1359:8:3"
									},
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1309:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1328:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:35:3"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:3"
									},
									"scope": 1033,
									"src": "1291:170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1231
									],
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "1565:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 685,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "1582:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 687,
														"indexExpression": {
															"id": 686,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "1594:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1582:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 689,
													"indexExpression": {
														"id": 688,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "1601:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1582:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 690,
												"nodeType": "Return",
												"src": "1575:34:3"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 681,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1538:8:3"
									},
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1486:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1501:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:32:3"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1556:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:9:3"
									},
									"scope": 1033,
									"src": "1467:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1240
									],
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "1711:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 703,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1730:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1730:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 705,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "1742:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "1751:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 702,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1721:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "1721:37:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1775:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 701,
												"id": 710,
												"nodeType": "Return",
												"src": "1768:11:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1687:8:3"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1639:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1656:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:33:3"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1705:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1705:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:6:3"
									},
									"scope": 1033,
									"src": "1622:164:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "1934:247:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "1954:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "1962:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "1973:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "1944:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "1944:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "2012:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 732,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2032:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2032:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 741,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "2092:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2100:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 734,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "2056:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 736,
																		"indexExpression": {
																			"id": 735,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "2068:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2056:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 739,
																	"indexExpression": {
																		"expression": {
																			"id": 737,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2076:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2076:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2056:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1689,
																"src": "2056:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2056:87:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1990:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "1990:163:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 723,
												"id": 747,
												"nodeType": "Return",
												"src": "2163:11:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 720,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1910:8:3"
									},
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1823:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1847:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1874:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:81:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1928:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1928:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:6:3"
									},
									"scope": 1033,
									"src": "1792:389:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "2281:117:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 759,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2300:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2300:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 761,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2312:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 769,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2358:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 762,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "2321:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 765,
																		"indexExpression": {
																			"expression": {
																				"id": 763,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "2333:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2333:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2321:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 767,
																	"indexExpression": {
																		"id": 766,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "2345:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2321:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1646,
																"src": "2321:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:48:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2291:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "2291:79:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2387:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 757,
												"id": 774,
												"nodeType": "Return",
												"src": "2380:11:3"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2214:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2231:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:37:3"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2275:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2275:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:6:3"
									},
									"scope": 1033,
									"src": "2187:211:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "2503:209:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 786,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2535:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2535:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 788,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "2559:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 796,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2617:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2634:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 789,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "2580:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 792,
																		"indexExpression": {
																			"expression": {
																				"id": 790,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "2592:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2592:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2580:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 794,
																	"indexExpression": {
																		"id": 793,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "2604:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2580:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1689,
																"src": "2580:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2580:94:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 785,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2513:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:171:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2513:171:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2701:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 784,
												"id": 802,
												"nodeType": "Return",
												"src": "2694:11:3"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2448:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:42:3"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2497:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2497:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:6:3"
									},
									"scope": 1033,
									"src": "2404:308:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "2835:443:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "2853:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2871:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2863:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2863:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2863:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2853:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2875:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2845:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "2845:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "2933:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2954:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2946:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 825,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2946:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2946:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2933:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2958:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2925:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "2925:71:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "3028:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "3036:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "3047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 833,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3007:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "3007:47:3"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 839,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "3065:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 841,
														"indexExpression": {
															"id": 840,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "3075:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3065:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 846,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "3107:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3115:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 842,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "3085:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 844,
																"indexExpression": {
																	"id": 843,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3095:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3085:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1689,
															"src": "3085:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3085:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3065:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "3065:91:3"
											},
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 851,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "3166:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 852,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "3176:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3166:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 858,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "3214:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 854,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "3189:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 856,
																"indexExpression": {
																	"id": 855,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "3199:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3189:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "3189:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3189:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3166:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "3166:55:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 863,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "3245:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "3253:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "3264:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "3236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "EmitStatement",
												"src": "3231:40:3"
											}
										]
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2746:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2770:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2797:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:81:3"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2835:0:3"
									},
									"scope": 1033,
									"src": "2718:560:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "3349:303:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 877,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "3367:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3386:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3378:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 878,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3378:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3378:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3367:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3390:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3359:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "3359:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3463:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3455:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 887,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3455:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3455:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 891,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "3467:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "3476:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 886,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3434:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3434:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "3434:49:3"
											},
											{
												"expression": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 895,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "3493:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 898,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "3525:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 896,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "3508:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "3508:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3493:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "3493:39:3"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 902,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "3542:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 904,
														"indexExpression": {
															"id": 903,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "3552:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3542:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 909,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "3586:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 905,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "3563:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 907,
																"indexExpression": {
																	"id": 906,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "3573:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3563:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "3563:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3563:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3542:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "3542:51:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3625:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3617:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 914,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3617:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3617:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 918,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "3629:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "3638:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "3608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3608:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "EmitStatement",
												"src": "3603:42:3"
											}
										]
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3299:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3316:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:33:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:3"
									},
									"scope": 1033,
									"src": "3284:368:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "3723:345:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 931,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "3741:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3760:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3752:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 932,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3752:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3752:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3741:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3764:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3733:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "3733:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3832:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3849:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3841:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 942,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3841:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3841:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3853:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3811:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3811:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "3811:49:3"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 949,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "3871:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 951,
														"indexExpression": {
															"id": 950,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3881:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3871:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 956,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "3915:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3923:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 952,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "3892:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 954,
																"indexExpression": {
																	"id": 953,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "3902:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3892:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1689,
															"src": "3892:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3892:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3871:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "3871:89:3"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 961,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "3970:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 964,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "4002:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 962,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "3985:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "3985:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3985:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3970:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "3970:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 969,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "4033:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4050:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4042:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 970,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4042:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4042:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 974,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "4054:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "4024:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "EmitStatement",
												"src": "4019:42:3"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3673:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3690:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3672:33:3"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:0:3"
									},
									"scope": 1033,
									"src": "3658:410:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "4187:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 988,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "4205:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4222:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4214:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 989,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4214:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4214:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4205:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4197:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4197:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "4197:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 998,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "4283:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4302:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4294:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 999,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4294:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4283:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4306:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4275:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4275:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "4275:68:3"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1007,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "4354:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1010,
															"indexExpression": {
																"id": 1008,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "4366:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4354:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1011,
														"indexExpression": {
															"id": 1009,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "4373:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4354:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1012,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "4384:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4354:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "4354:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1016,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "4414:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "4421:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "4430:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1015,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "4405:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4405:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "EmitStatement",
												"src": "4400:37:3"
											}
										]
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4101:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4124:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4124:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4149:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:78:3"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4187:0:3"
									},
									"scope": 1033,
									"src": "4074:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "4572:2:3",
										"statements": []
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4512:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4533:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4479:75:3"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4572:0:3"
									},
									"scope": 1033,
									"src": "4450:124:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1034,
							"src": "122:4454:3"
						}
					],
					"src": "46:4531:3"
				},
				"id": 3
			},
			"ExodusERC20Token/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/ERC20Permit.sol",
					"exportedSymbols": {
						"Counters": [
							48
						],
						"ECDSA": [
							408
						],
						"EIP712": [
							555
						],
						"ERC20": [
							1033
						],
						"ERC20Permit": [
							1199
						],
						"IERC20": [
							1268
						],
						"IERC20Permit": [
							1304
						],
						"SafeMath": [
							1838
						]
					},
					"id": 1200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1035,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "ExodusERC20Token/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 1036,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 1305,
							"src": "58:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1037,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 1034,
							"src": "87:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/EIP712.sol",
							"file": "./EIP712.sol",
							"id": 1038,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 556,
							"src": "109:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 1039,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 409,
							"src": "132:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/Counters.sol",
							"file": "./Counters.sol",
							"id": 1040,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 49,
							"src": "154:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1042,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1033,
										"src": "731:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1033",
											"typeString": "contract ERC20"
										}
									},
									"id": 1043,
									"nodeType": "InheritanceSpecifier",
									"src": "731:5:4"
								},
								{
									"baseName": {
										"id": 1044,
										"name": "IERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1304,
										"src": "738:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Permit_$1304",
											"typeString": "contract IERC20Permit"
										}
									},
									"id": 1045,
									"nodeType": "InheritanceSpecifier",
									"src": "738:12:4"
								},
								{
									"baseName": {
										"id": 1046,
										"name": "EIP712",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 555,
										"src": "752:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EIP712_$555",
											"typeString": "contract EIP712"
										}
									},
									"id": 1047,
									"nodeType": "InheritanceSpecifier",
									"src": "752:6:4"
								}
							],
							"contractDependencies": [
								555,
								1033,
								1268,
								1304
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1041,
								"nodeType": "StructuredDocumentation",
								"src": "180:517:4",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"
							},
							"fullyImplemented": false,
							"id": 1199,
							"linearizedBaseContracts": [
								1199,
								555,
								1304,
								1033,
								1268
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1050,
									"libraryName": {
										"id": 1048,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 48,
										"src": "771:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$48",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "765:36:4",
									"typeName": {
										"id": 1049,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "784:16:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1054,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1199,
									"src": "807:52:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$8_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1053,
										"keyType": {
											"id": 1051,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "815:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "807:36:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$8_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 1052,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "826:16:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1059,
									"mutability": "immutable",
									"name": "_PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1199,
									"src": "918:148:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1055,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "918:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 1057,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "981:84:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 1056,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "971:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1058,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "971:95:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "1348:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "1073:220:4",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 1070,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1065,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1062,
													"src": "1337:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1343:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 1067,
											"modifierName": {
												"id": 1064,
												"name": "EIP712",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 555,
												"src": "1330:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_EIP712_$555_$",
													"typeString": "type(contract EIP712)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1330:17:4"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1310:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1310:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:20:4"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:4"
									},
									"scope": 1199,
									"src": "1298:52:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "1609:428:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1090,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "1627:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1627:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1092,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "1646:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1627:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1656:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															},
															"value": "ERC20Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															}
														],
														"id": 1089,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1619:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1619:69:4"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "1699:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1097,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1699:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1112,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1102,
																	"name": "_PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "1741:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1103,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "1759:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1104,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "1766:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1105,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "1775:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1107,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "1792:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1106,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "1782:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1782:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1109,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "1800:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1100,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1730:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1730:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1730:79:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1099,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1720:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1699:111:4"
											},
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "hash",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "1821:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1113,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1821:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"arguments": [
														{
															"id": 1116,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "1853:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1115,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "1836:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1836:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1821:43:4"
											},
											{
												"assignments": [
													1120
												],
												"declarations": [
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "1875:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1119,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1875:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"id": 1123,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "1906:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1124,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "1912:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1125,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "1915:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1126,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "1918:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1121,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "1892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$408_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 370,
														"src": "1892:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1875:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "1938:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1131,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "1948:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1938:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1955:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															},
															"value": "ERC20Permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1930:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "1930:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1137,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "2008:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "2024:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1999:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "1999:31:4"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "1356:50:4",
										"text": " @dev See {IERC20Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1087,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1600:8:4"
									},
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1436:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1459:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1484:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1507:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1533:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1080,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1533:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1550:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1569:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:158:4"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:0:4"
									},
									"scope": 1199,
									"src": "1411:626:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2176:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1152,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2193:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$8_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1154,
															"indexExpression": {
																"id": 1153,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "2201:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2193:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$8_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2193:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$8_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$8_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2193:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1157,
												"nodeType": "Return",
												"src": "2186:31:4"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "2043:50:4",
										"text": " @dev See {IERC20Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2149:8:4"
									},
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2114:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:15:4"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2167:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:9:4"
									},
									"scope": 1199,
									"src": "2098:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "2417:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1166,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2434:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2434:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1168,
												"nodeType": "Return",
												"src": "2427:27:4"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2230:60:4",
										"text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
									},
									"functionSelector": "3644e515",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2390:8:4"
									},
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2373:2:4"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "2408:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:9:4"
									},
									"scope": 1199,
									"src": "2348:113:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "2669:126:4",
										"statements": [
											{
												"assignments": [
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "2679:30:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
															"typeString": "struct Counters.Counter"
														},
														"typeName": {
															"id": 1180,
															"name": "Counters.Counter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "2679:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
																"typeString": "struct Counters.Counter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1185,
												"initialValue": {
													"baseExpression": {
														"id": 1182,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2712:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$8_storage_$",
															"typeString": "mapping(address => struct Counters.Counter storage ref)"
														}
													},
													"id": 1184,
													"indexExpression": {
														"id": 1183,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2720:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2712:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$8_storage",
														"typeString": "struct Counters.Counter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2679:47:4"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1186,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "2736:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1187,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "2746:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
																	"typeString": "struct Counters.Counter storage pointer"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "2746:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$8_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$8_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2746:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2736:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "2736:25:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1192,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "2771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$8_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "2771:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$8_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$8_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2771:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "2771:17:4"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "2467:120:4",
										"text": " @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "2611:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:15:4"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"scope": 1199,
									"src": "2592:203:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1200,
							"src": "698:2099:4"
						}
					],
					"src": "32:2766:4"
				},
				"id": 4
			},
			"ExodusERC20Token/IERC20.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1268
						]
					},
					"id": 1269,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1268,
							"linearizedBaseContracts": [
								1268
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 1206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:5"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "132:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:5"
									},
									"scope": 1268,
									"src": "86:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "166:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:17:5"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 1268,
									"src": "147:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "239:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "258:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:35:5"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "292:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:5"
									},
									"scope": 1268,
									"src": "221:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "323:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "338:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:5"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "378:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:5"
									},
									"scope": 1268,
									"src": "304:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "410:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "427:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:33:5"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "461:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:6:5"
									},
									"scope": 1268,
									"src": "393:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "504:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "528:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "555:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:81:5"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "594:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:5"
									},
									"scope": 1268,
									"src": "473:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1259,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "621:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "643:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "663:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:57:5"
									},
									"src": "606:72:5"
								},
								{
									"anonymous": false,
									"id": 1267,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "699:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "722:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "747:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:63:5"
									},
									"src": "684:78:5"
								}
							],
							"scope": 1269,
							"src": "63:701:5"
						}
					],
					"src": "37:728:5"
				},
				"id": 5
			},
			"ExodusERC20Token/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1304
						]
					},
					"id": 1305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1270,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1271,
								"nodeType": "StructuredDocumentation",
								"src": "58:480:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1304,
							"linearizedBaseContracts": [
								1304
							],
							"name": "IERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "568:794:6",
										"text": " @dev Sets `value` as th xe allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1392:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1415:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1440:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1463:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1489:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1281,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1489:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1506:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1525:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:158:6"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:0:6"
									},
									"scope": 1304,
									"src": "1367:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "1556:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1871:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:15:6"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1909:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:9:6"
									},
									"scope": 1304,
									"src": "1855:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "1924:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:2:6"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2161:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:9:6"
									},
									"scope": 1304,
									"src": "2110:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1305,
							"src": "539:1633:6"
						}
					],
					"src": "32:2141:6"
				},
				"id": 6
			},
			"ExodusERC20Token/IOHM.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/IOHM.sol",
					"exportedSymbols": {
						"IERC20": [
							1268
						],
						"IEXO": [
							1329
						]
					},
					"id": 1330,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1306,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"absolutePath": "ExodusERC20Token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1307,
							"nodeType": "ImportDirective",
							"scope": 1330,
							"sourceUnit": 1269,
							"src": "63:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1308,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1268,
										"src": "105:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1268",
											"typeString": "contract IERC20"
										}
									},
									"id": 1309,
									"nodeType": "InheritanceSpecifier",
									"src": "105:6:7"
								}
							],
							"contractDependencies": [
								1268
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1329,
							"linearizedBaseContracts": [
								1329,
								1268
							],
							"name": "IEXO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "132:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "150:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:35:7"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:7"
									},
									"scope": 1329,
									"src": "118:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "196:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:16:7"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:0:7"
									},
									"scope": 1329,
									"src": "182:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 1328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "245:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "263:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:35:7"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:7"
									},
									"scope": 1329,
									"src": "227:62:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1330,
							"src": "87:204:7"
						}
					],
					"src": "37:255:7"
				},
				"id": 7
			},
			"ExodusERC20Token/IOlympusAuthority.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/IOlympusAuthority.sol",
					"exportedSymbols": {
						"IExodusAuthority": [
							1408
						]
					},
					"id": 1409,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1331,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1408,
							"linearizedBaseContracts": [
								1408
							],
							"name": "IExodusAuthority",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1339,
									"name": "GovernorPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "157:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "179:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "199:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "199:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "156:70:8"
									},
									"src": "136:91:8"
								},
								{
									"anonymous": false,
									"id": 1347,
									"name": "GuardianPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "253:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "275:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "295:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:70:8"
									},
									"src": "232:91:8"
								},
								{
									"anonymous": false,
									"id": 1355,
									"name": "PolicyPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "347:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "369:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "389:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "389:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:70:8"
									},
									"src": "328:89:8"
								},
								{
									"anonymous": false,
									"id": 1363,
									"name": "VaultPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "440:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "462:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "482:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "482:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:70:8"
									},
									"src": "422:88:8"
								},
								{
									"anonymous": false,
									"id": 1369,
									"name": "GovernorPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "537:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "559:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:42:8"
									},
									"src": "516:63:8"
								},
								{
									"anonymous": false,
									"id": 1375,
									"name": "GuardianPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "605:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "627:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:42:8"
									},
									"src": "584:63:8"
								},
								{
									"anonymous": false,
									"id": 1381,
									"name": "PolicyPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "671:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "693:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:42:8"
									},
									"src": "652:61:8"
								},
								{
									"anonymous": false,
									"id": 1387,
									"name": "VaultPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "736:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "758:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:42:8"
									},
									"src": "718:60:8"
								},
								{
									"functionSelector": "0c340a24",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:8"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "865:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:9:8"
									},
									"scope": 1408,
									"src": "822:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "452a9320",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "guardian",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:2:8"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "923:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:9:8"
									},
									"scope": 1408,
									"src": "880:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0505c8c9",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "policy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:2:8"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "979:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:9:8"
									},
									"scope": 1408,
									"src": "938:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbfa77cf",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vault",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:8"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1034:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:9:8"
									},
									"scope": 1408,
									"src": "994:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1409,
							"src": "63:982:8"
						}
					],
					"src": "37:1009:8"
				},
				"id": 8
			},
			"ExodusERC20Token/OlympusAccessControlled.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/OlympusAccessControlled.sol",
					"exportedSymbols": {
						"ExodusAccessControlled": [
							1507
						],
						"IExodusAuthority": [
							1408
						]
					},
					"id": 1508,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1410,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:9"
						},
						{
							"absolutePath": "ExodusERC20Token/IOlympusAuthority.sol",
							"file": "./IOlympusAuthority.sol",
							"id": 1411,
							"nodeType": "ImportDirective",
							"scope": 1508,
							"sourceUnit": 1409,
							"src": "68:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1507,
							"linearizedBaseContracts": [
								1507
							],
							"name": "ExodusAccessControlled",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1415,
									"name": "AuthorityUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "authority",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "213:34:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
													"typeString": "contract IExodusAuthority"
												},
												"typeName": {
													"id": 1412,
													"name": "IExodusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1408,
													"src": "213:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
														"typeString": "contract IExodusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:36:9"
									},
									"src": "190:59:9"
								},
								{
									"constant": false,
									"id": 1418,
									"mutability": "mutable",
									"name": "UNAUTHORIZED",
									"nodeType": "VariableDeclaration",
									"scope": 1507,
									"src": "255:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1416,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "255:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "554e415554484f52495a4544",
										"id": 1417,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "277:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
											"typeString": "literal_string \"UNAUTHORIZED\""
										},
										"value": "UNAUTHORIZED"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "bf7e214f",
									"id": 1420,
									"mutability": "mutable",
									"name": "authority",
									"nodeType": "VariableDeclaration",
									"scope": 1507,
									"src": "359:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
										"typeString": "contract IExodusAuthority"
									},
									"typeName": {
										"id": 1419,
										"name": "IExodusAuthority",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1408,
										"src": "359:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
											"typeString": "contract IExodusAuthority"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "485:82:9",
										"statements": [
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1425,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "495:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
															"typeString": "contract IExodusAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1426,
														"name": "_authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "507:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
															"typeString": "contract IExodusAuthority"
														}
													},
													"src": "495:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
														"typeString": "contract IExodusAuthority"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "495:22:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1430,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "549:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																"typeString": "contract IExodusAuthority"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																"typeString": "contract IExodusAuthority"
															}
														],
														"id": 1429,
														"name": "AuthorityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "532:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IExodusAuthority_$1408_$returns$__$",
															"typeString": "function (contract IExodusAuthority)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "532:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "EmitStatement",
												"src": "527:33:9"
											}
										]
									},
									"id": 1434,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "_authority",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "456:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
													"typeString": "contract IExodusAuthority"
												},
												"typeName": {
													"id": 1421,
													"name": "IExodusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1408,
													"src": "456:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
														"typeString": "contract IExodusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:29:9"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:0:9"
									},
									"scope": 1507,
									"src": "444:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "640:85:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1437,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "658:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "658:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1439,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "672:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "governor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1392,
																	"src": "672:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "672:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "658:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1443,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "694:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "650:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "650:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "650:57:9"
											},
											{
												"id": 1446,
												"nodeType": "PlaceholderStatement",
												"src": "717:1:9"
											}
										]
									},
									"id": 1448,
									"name": "onlyGovernor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:2:9"
									},
									"src": "616:109:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "755:85:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1451,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "773:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "773:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1453,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "787:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "guardian",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1397,
																	"src": "787:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "787:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "773:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1457,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "809:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 1450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "765:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "765:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "765:57:9"
											},
											{
												"id": 1460,
												"nodeType": "PlaceholderStatement",
												"src": "832:1:9"
											}
										]
									},
									"id": 1462,
									"name": "onlyGuardian",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:2:9"
									},
									"src": "731:109:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "868:83:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1465,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "886:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "886:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1467,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "900:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "policy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1402,
																	"src": "900:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "900:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "886:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1471,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "920:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 1464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "878:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "878:55:9"
											},
											{
												"id": 1474,
												"nodeType": "PlaceholderStatement",
												"src": "943:1:9"
											}
										]
									},
									"id": 1476,
									"name": "onlyPolicy",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:9"
									},
									"src": "846:105:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "978:82:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1479,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "996:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "996:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1481,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "1010:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vault",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1407,
																	"src": "1010:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1010:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "996:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1485,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "1029:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 1478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "988:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "988:54:9"
											},
											{
												"id": 1488,
												"nodeType": "PlaceholderStatement",
												"src": "1052:1:9"
											}
										]
									},
									"id": 1490,
									"name": "onlyVault",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:2:9"
									},
									"src": "957:103:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "1184:88:9",
										"statements": [
											{
												"expression": {
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1497,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "1194:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
															"typeString": "contract IExodusAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1498,
														"name": "_newAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "1206:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
															"typeString": "contract IExodusAuthority"
														}
													},
													"src": "1194:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
														"typeString": "contract IExodusAuthority"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "1194:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1502,
															"name": "_newAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "1251:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																"typeString": "contract IExodusAuthority"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
																"typeString": "contract IExodusAuthority"
															}
														],
														"id": 1501,
														"name": "AuthorityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "1234:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IExodusAuthority_$1408_$returns$__$",
															"typeString": "function (contract IExodusAuthority)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1234:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "EmitStatement",
												"src": "1229:36:9"
											}
										]
									},
									"functionSelector": "7a9e5e4b",
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1495,
											"modifierName": {
												"id": 1494,
												"name": "onlyGovernor",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1448,
												"src": "1171:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1171:12:9"
										}
									],
									"name": "setAuthority",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "_newAuthority",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1130:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
													"typeString": "contract IExodusAuthority"
												},
												"typeName": {
													"id": 1491,
													"name": "IExodusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1408,
													"src": "1130:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
														"typeString": "contract IExodusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:32:9"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:0:9"
									},
									"scope": 1507,
									"src": "1108:164:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1508,
							"src": "103:1171:9"
						}
					],
					"src": "42:1233:9"
				},
				"id": 9
			},
			"ExodusERC20Token/OlympusERC20.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/OlympusERC20.sol",
					"exportedSymbols": {
						"Counters": [
							48
						],
						"ECDSA": [
							408
						],
						"EIP712": [
							555
						],
						"ERC20": [
							1033
						],
						"ERC20Permit": [
							1199
						],
						"ExodusAccessControlled": [
							1507
						],
						"ExodusERC20Token": [
							1619
						],
						"IERC20": [
							1268
						],
						"IERC20Permit": [
							1304
						],
						"IEXO": [
							1329
						],
						"IExodusAuthority": [
							1408
						],
						"SafeMath": [
							1838
						]
					},
					"id": 1620,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1509,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:10"
						},
						{
							"absolutePath": "ExodusERC20Token/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1510,
							"nodeType": "ImportDirective",
							"scope": 1620,
							"sourceUnit": 1839,
							"src": "62:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1511,
							"nodeType": "ImportDirective",
							"scope": 1620,
							"sourceUnit": 1269,
							"src": "88:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/IOHM.sol",
							"file": "./IOHM.sol",
							"id": 1512,
							"nodeType": "ImportDirective",
							"scope": 1620,
							"sourceUnit": 1330,
							"src": "111:20:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 1513,
							"nodeType": "ImportDirective",
							"scope": 1620,
							"sourceUnit": 1305,
							"src": "132:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/ERC20Permit.sol",
							"file": "./ERC20Permit.sol",
							"id": 1514,
							"nodeType": "ImportDirective",
							"scope": 1620,
							"sourceUnit": 1200,
							"src": "162:27:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusERC20Token/OlympusAccessControlled.sol",
							"file": "./OlympusAccessControlled.sol",
							"id": 1515,
							"nodeType": "ImportDirective",
							"scope": 1620,
							"sourceUnit": 1508,
							"src": "190:39:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1516,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1199,
										"src": "260:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$1199",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1517,
									"nodeType": "InheritanceSpecifier",
									"src": "260:11:10"
								},
								{
									"baseName": {
										"id": 1518,
										"name": "IEXO",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1329,
										"src": "273:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEXO_$1329",
											"typeString": "contract IEXO"
										}
									},
									"id": 1519,
									"nodeType": "InheritanceSpecifier",
									"src": "273:4:10"
								},
								{
									"baseName": {
										"id": 1520,
										"name": "ExodusAccessControlled",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1507,
										"src": "279:22:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ExodusAccessControlled_$1507",
											"typeString": "contract ExodusAccessControlled"
										}
									},
									"id": 1521,
									"nodeType": "InheritanceSpecifier",
									"src": "279:22:10"
								}
							],
							"contractDependencies": [
								555,
								1033,
								1199,
								1268,
								1304,
								1329,
								1507
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1619,
							"linearizedBaseContracts": [
								1619,
								1507,
								1329,
								1199,
								555,
								1304,
								1033,
								1268
							],
							"name": "ExodusERC20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1524,
									"libraryName": {
										"id": 1522,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1838,
										"src": "314:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1838",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "308:27:10",
									"typeName": {
										"id": 1523,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "502:2:10",
										"statements": []
									},
									"id": 1543,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "45786f647573",
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "387:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_db8816468d822151ec05b9ac67bf284b18427cf09a65a6fe58b5228c3837db99",
														"typeString": "literal_string \"Exodus\""
													},
													"value": "Exodus"
												},
												{
													"hexValue": "45584f",
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "397:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_896a0b762edb57cf385702536ba0cce85d894198e74dda8231357501417fff46",
														"typeString": "literal_string \"EXO\""
													},
													"value": "EXO"
												},
												{
													"hexValue": "39",
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "404:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 1532,
											"modifierName": {
												"id": 1528,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1033,
												"src": "381:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$1033_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "381:25:10"
										},
										{
											"arguments": [
												{
													"hexValue": "45786f647573",
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "427:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_db8816468d822151ec05b9ac67bf284b18427cf09a65a6fe58b5228c3837db99",
														"typeString": "literal_string \"Exodus\""
													},
													"value": "Exodus"
												}
											],
											"id": 1535,
											"modifierName": {
												"id": 1533,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1199,
												"src": "415:11:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1199_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "415:21:10"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1538,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "485:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1537,
														"name": "IExodusAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "468:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IExodusAuthority_$1408_$",
															"typeString": "type(contract IExodusAuthority)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "468:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$1408",
														"typeString": "contract IExodusAuthority"
													}
												}
											],
											"id": 1540,
											"modifierName": {
												"id": 1536,
												"name": "ExodusAccessControlled",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1507,
												"src": "445:22:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ExodusAccessControlled_$1507_$",
													"typeString": "type(contract ExodusAccessControlled)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "445:52:10"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "_authority",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "353:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:20:10"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:0:10"
									},
									"scope": 1619,
									"src": "341:163:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1316
									],
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "587:41:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "603:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1555,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "613:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1553,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "597:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "597:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "597:24:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1551,
											"modifierName": {
												"id": 1550,
												"name": "onlyVault",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1490,
												"src": "577:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "577:9:10"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1549,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "568:8:10"
									},
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "524:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "542:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:35:10"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:0:10"
									},
									"scope": 1619,
									"src": "510:118:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1321
									],
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "682:42:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1566,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "698:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "698:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "710:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1565,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "692:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "692:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "692:25:10"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1563,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "673:8:10"
									},
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "648:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:16:10"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "682:0:10"
									},
									"scope": 1619,
									"src": "634:90:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1328
									],
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "801:45:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1581,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "821:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1582,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "831:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "_burnFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "811:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "811:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "811:28:10"
											}
										]
									},
									"functionSelector": "79cc6790",
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "792:8:10"
									},
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "748:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "766:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:35:10"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:0:10"
									},
									"scope": 1619,
									"src": "730:116:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "915:261:10",
										"statements": [
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "decreasedAllowance_",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "925:27:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "925:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"arguments": [
														{
															"id": 1601,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1004:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1025:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1596,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "965:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1597,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "975:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "975:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1595,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "955:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1689,
														"src": "955:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "955:118:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "925:148:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "1093:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1607,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1103:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1103:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1609,
															"name": "decreasedAllowance_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "1115:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1605,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1084:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "1084:51:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1613,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "1151:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1614,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1161:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1612,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1145:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1145:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "1145:24:10"
											}
										]
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "871:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "889:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:35:10"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:0:10"
									},
									"scope": 1619,
									"src": "852:324:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1620,
							"src": "231:947:10"
						}
					],
					"src": "37:1142:10"
				},
				"id": 10
			},
			"ExodusERC20Token/SafeMath.sol": {
				"ast": {
					"absolutePath": "ExodusERC20Token/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1838
						]
					},
					"id": 1839,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1621,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1838,
							"linearizedBaseContracts": [
								1838
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "222:109:11",
										"statements": [
											{
												"assignments": [
													1631
												],
												"declarations": [
													{
														"constant": false,
														"id": 1631,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "232:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "232:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1632,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "244:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1633,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "248:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "244:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "232:17:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1637,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "267:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1638,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "272:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "267:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "275:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "259:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "259:46:11"
											},
											{
												"expression": {
													"id": 1643,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1631,
													"src": "323:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1644,
												"nodeType": "Return",
												"src": "316:8:11"
											}
										]
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "168:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "179:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:22:11"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "213:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:9:11"
									},
									"scope": 1838,
									"src": "155:176:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "404:67:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1656,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "425:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1657,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "428:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "431:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1655,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1662,
															1689
														],
														"referencedDeclaration": 1689,
														"src": "421:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1654,
												"id": 1660,
												"nodeType": "Return",
												"src": "414:50:11"
											}
										]
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "350:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "361:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:22:11"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "395:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:9:11"
									},
									"scope": 1838,
									"src": "337:134:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "602:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1674,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "620:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1675,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "625:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "620:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1677,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "628:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "612:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "612:29:11"
											},
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "651:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "651:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1685,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1683,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "667:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "651:17:11"
											},
											{
												"expression": {
													"id": 1686,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1681,
													"src": "686:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1672,
												"id": 1687,
												"nodeType": "Return",
												"src": "679:8:11"
											}
										]
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "499:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "518:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "537:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1667,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:80:11"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "593:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:11"
									},
									"scope": 1838,
									"src": "477:217:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "767:174:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "781:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "781:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1704,
												"nodeType": "IfStatement",
												"src": "777:45:11",
												"trueBody": {
													"id": 1703,
													"nodeType": "Block",
													"src": "789:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "810:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1697,
															"id": 1702,
															"nodeType": "Return",
															"src": "803:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "832:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "832:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1707,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "844:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1708,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "848:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "844:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "832:17:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1712,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "867:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1713,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "867:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1715,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "876:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "867:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "879:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "859:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "859:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "859:56:11"
											},
											{
												"expression": {
													"id": 1720,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1706,
													"src": "933:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1697,
												"id": 1721,
												"nodeType": "Return",
												"src": "926:8:11"
											}
										]
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "713:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "724:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:22:11"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "758:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:9:11"
									},
									"scope": 1838,
									"src": "700:241:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "1014:63:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1733,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "1035:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1734,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "1038:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1041:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1732,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1739,
															1779
														],
														"referencedDeclaration": 1779,
														"src": "1031:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1737,
												"nodeType": "Return",
												"src": "1024:46:11"
											}
										]
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "960:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "971:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:22:11"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "1005:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:11"
									},
									"scope": 1838,
									"src": "947:130:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "1208:176:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1751,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "1226:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1230:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1754,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "1233:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1218:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "1218:28:11"
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "1256:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1256:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1759,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "1268:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1760,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "1272:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1256:17:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1764,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "1290:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1765,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "1295:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1766,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "1299:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1295:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1768,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1741,
																				"src": "1304:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 1769,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1743,
																				"src": "1308:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1304:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1771,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1303:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1295:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1290:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1763,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1283:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "1283:28:11"
											},
											{
												"expression": {
													"id": 1776,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1758,
													"src": "1376:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1777,
												"nodeType": "Return",
												"src": "1369:8:11"
											}
										]
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1105:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1124:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1143:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1744,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1143:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:80:11"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1199:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:9:11"
									},
									"scope": 1838,
									"src": "1083:301:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "1497:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1786,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "1511:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1511:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1826,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "1713:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1713:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1834,
													"nodeType": "IfStatement",
													"src": "1709:42:11",
													"trueBody": {
														"id": 1833,
														"nodeType": "Block",
														"src": "1721:30:11",
														"statements": [
															{
																"expression": {
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1829,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "1735:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1739:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1735:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1832,
																"nodeType": "ExpressionStatement",
																"src": "1735:5:11"
															}
														]
													}
												},
												"id": 1835,
												"nodeType": "IfStatement",
												"src": "1507:244:11",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "1518:185:11",
													"statements": [
														{
															"expression": {
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1789,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "1532:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1790,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "1536:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1532:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1792,
															"nodeType": "ExpressionStatement",
															"src": "1532:5:11"
														},
														{
															"assignments": [
																1794
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1794,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 1825,
																	"src": "1551:9:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1793,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1551:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1802,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1797,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1781,
																				"src": "1571:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 1798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1574:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 1796,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1739,
																				1779
																			],
																			"referencedDeclaration": 1739,
																			"src": "1567:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1567:9:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1578:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1795,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "1563:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1563:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1551:29:11"
														},
														{
															"body": {
																"id": 1823,
																"nodeType": "Block",
																"src": "1608:85:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1806,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "1626:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1807,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "1630:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1626:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1809,
																		"nodeType": "ExpressionStatement",
																		"src": "1626:5:11"
																	},
																	{
																		"expression": {
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1810,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "1649:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1814,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1781,
																										"src": "1665:1:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1815,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1794,
																										"src": "1668:1:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1813,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										1739,
																										1779
																									],
																									"referencedDeclaration": 1739,
																									"src": "1661:3:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1816,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1661:9:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1817,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1794,
																								"src": "1672:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1812,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1646,
																							"src": "1657:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1657:17:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 1819,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1676:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 1811,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1739,
																						1779
																					],
																					"referencedDeclaration": 1739,
																					"src": "1653:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1653:25:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1649:29:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1822,
																		"nodeType": "ExpressionStatement",
																		"src": "1649:29:11"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1803,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "1601:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1804,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "1605:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1824,
															"nodeType": "WhileStatement",
															"src": "1594:99:11"
														}
													]
												}
											}
										]
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "1452:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:11:11"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "1486:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:11:11"
									},
									"scope": 1838,
									"src": "1437:320:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1839,
							"src": "132:1627:11"
						}
					],
					"src": "37:1723:11"
				},
				"id": 11
			}
		}
	}
}