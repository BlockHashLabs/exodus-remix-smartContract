{
	"id": "25158c3bbe5c56f65e39c120068ad810",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"gEXO/gOHM.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.5;\n\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\n\nimport \"./IsOHM.sol\";\nimport \"./IgOHM.sol\";\nimport \"./ERC20.sol\";\n\ncontract gEXO is IgEXO, ERC20 {\n    /* ========== DEPENDENCIES ========== */\n\n    using Address for address;\n    using SafeMath for uint256;\n\n    /* ========== MODIFIERS ========== */\n\n    modifier onlyApproved() {\n        require(msg.sender == approved, \"Only approved\");\n        _;\n    }\n\n    /* ========== EVENTS ========== */\n\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /* ========== DATA STRUCTURES ========== */\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint256 fromBlock;\n        uint256 votes;\n    }\n\n    /* ========== STATE VARIABLES ========== */\n\n    IsEXO public sEXO;\n    address public approved; // minter\n    bool public migrated;\n\n    mapping(address => mapping(uint256 => Checkpoint)) public checkpoints;\n    mapping(address => uint256) public numCheckpoints;\n    mapping(address => address) public delegates;\n\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor(address _migrator, address _sEXO) ERC20(\"Governance EXO\", \"gEXO\", 18) {\n        require(_migrator != address(0), \"Zero address: Migrator\");\n        approved = _migrator;\n        require(_sEXO != address(0), \"Zero address: sEXO\");\n        sEXO = IsEXO(_sEXO);\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    /**\n     * @notice transfer mint rights from migrator to staking\n     * @notice can only be done once, at the time of contract migration\n     * @param _staking address\n     * @param _sEXO address\n     */\n    function migrate(address _staking, address _sEXO) external override onlyApproved {\n        require(!migrated, \"Migrated\");\n        migrated = true;\n\n        require(_staking != approved, \"Invalid argument\");\n        require(_staking != address(0), \"Zero address found\");\n        approved = _staking;\n\n        require(_sEXO != address(0), \"Zero address found\");\n        sEXO = IsEXO(_sEXO);\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n        @notice mint gOHM\n        @param _to address\n        @param _amount uint\n     */\n    function mint(address _to, uint256 _amount) external override onlyApproved {\n        _mint(_to, _amount);\n    }\n\n    /**\n        @notice burn gOHM\n        @param _from address\n        @param _amount uint\n     */\n    function burn(address _from, uint256 _amount) external override onlyApproved {\n        _burn(_from, _amount);\n    }\n\n    /* ========== VIEW FUNCTIONS ========== */\n\n    /**\n     * @notice pull index from sOHM token\n     */\n    function index() public view override returns (uint256) {\n        return sEXO.index();\n    }\n\n    /**\n        @notice converts gOHM amount to OHM\n        @param _amount uint\n        @return uint\n     */\n    function balanceFrom(uint256 _amount) public view override returns (uint256) {\n        return _amount.mul(index()).div(10**decimals());\n    }\n\n    /**\n        @notice converts OHM amount to gOHM\n        @param _amount uint\n        @return uint\n     */\n    function balanceTo(uint256 _amount) public view override returns (uint256) {\n        return _amount.mul(10**decimals()).div(index());\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint256) {\n        uint256 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {\n        require(blockNumber < block.number, \"gEXO::getPriorVotes: not yet determined\");\n\n        uint256 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint256 lower = 0;\n        uint256 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    /* ========== INTERNAL FUNCTIONS ========== */\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint256 delegatorBalance = _balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(\n        address srcRep,\n        address dstRep,\n        uint256 amount\n    ) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint256 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint256 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint256 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    ) internal {\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(block.number, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    /**\n        @notice Ensure delegation moves when token is transferred.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        _moveDelegates(delegates[from], delegates[to], amount);\n    }\n}\n"
			},
			"gEXO/ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity >=0.7.5;\n\nimport \"./SafeMath.sol\";\n\nimport \"./IERC20.sol\";\n\nabstract contract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    // TODO comment actual hash value.\n    bytes32 private constant ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256(\"ERC20Token\");\n\n    mapping(address => uint256) internal _balances;\n\n    mapping(address => mapping(address => uint256)) internal _allowances;\n\n    uint256 internal _totalSupply;\n\n    string internal _name;\n\n    string internal _symbol;\n\n    uint8 internal immutable _decimals;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            msg.sender,\n            _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\")\n        );\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")\n        );\n        return true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address(0), account, amount);\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _beforeTokenTransfer(\n        address from_,\n        address to_,\n        uint256 amount_\n    ) internal virtual {}\n}\n"
			},
			"gEXO/IgOHM.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./IERC20.sol\";\n\ninterface IgEXO is IERC20 {\n    function mint(address _to, uint256 _amount) external;\n\n    function burn(address _from, uint256 _amount) external;\n\n    function index() external view returns (uint256);\n\n    function balanceFrom(uint256 _amount) external view returns (uint256);\n\n    function balanceTo(uint256 _amount) external view returns (uint256);\n\n    function migrate(address _staking, address _sOHM) external;\n}\n"
			},
			"gEXO/IsOHM.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./IERC20.sol\";\n\ninterface IsEXO is IERC20 {\n    function rebase(uint256 ohmProfit_, uint256 epoch_) external returns (uint256);\n\n    function circulatingSupply() external view returns (uint256);\n\n    function gonsForBalance(uint256 amount) external view returns (uint256);\n\n    function balanceForGons(uint256 gons) external view returns (uint256);\n\n    function index() external view returns (uint256);\n\n    function toG(uint256 amount) external view returns (uint256);\n\n    function fromG(uint256 amount) external view returns (uint256);\n\n    function changeDebt(\n        uint256 amount,\n        address debtor,\n        bool add\n    ) external;\n\n    function debtBalances(address _address) external view returns (uint256);\n}\n"
			},
			"gEXO/Address.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\n// TODO(zx): replace with OZ implementation.\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"gEXO/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\n        if (a > 3) {\n            c = a;\n            uint256 b = add(div(a, 2), 1);\n            while (b < c) {\n                c = b;\n                b = div(add(div(a, b), b), 2);\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }\n}\n"
			},
			"gEXO/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"gEXO/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gEXO/Address.sol\":108:9330  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"gEXO/Address.sol\":108:9330  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201da8c53db43410d43171d7446021d5b926410bab31e2da8ef93eb1067a14e86d64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201da8c53db43410d43171d7446021d5b926410bab31e2da8ef93eb1067a14e86d64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xA8 0xC5 RETURNDATASIZE 0xB4 CALLVALUE LT 0xD4 BALANCE PUSH18 0xD7446021D5B926410BAB31E2DA8EF93EB106 PUSH27 0x14E86D64736F6C6343000705003300000000000000000000000000 ",
							"sourceMap": "108:9222:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201da8c53db43410d43171d7446021d5b926410bab31e2da8ef93eb1067a14e86d64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xA8 0xC5 RETURNDATASIZE 0xB4 CALLVALUE LT 0xD4 BALANCE PUSH18 0xD7446021D5B926410BAB31E2DA8EF93EB106 PUSH27 0x14E86D64736F6C6343000705003300000000000000000000000000 ",
							"sourceMap": "108:9222:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201da8c53db43410d43171d7446021d5b926410bab31e2da8ef93eb1067a14e86d64736f6c63430007050033",
									".code": [
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gEXO/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"gEXO/Address.sol\":{\"keccak256\":\"0xc2d8595504a985f53a5db9e6220ae614a7f8b4c5c1d35f55b07e08a21e40b2b9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1b8104a932321f4f8a89ca5265b7bca5fe9f5e51ccec01470931e5014be87fc9\",\"dweb:/ipfs/Qmb2ta7fADrRuXqjot4reKg63brweMH6jWocx534huYtCc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gEXO/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gEXO/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"gEXO/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"gEXO/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"gEXO/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 362,
								"contract": "gEXO/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 368,
								"contract": "gEXO/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 370,
								"contract": "gEXO/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 372,
								"contract": "gEXO/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 374,
								"contract": "gEXO/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gEXO/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gEXO/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"gEXO/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gEXO/IgOHM.sol": {
				"IgEXO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staking",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sOHM",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceFrom(uint256)": "a8248768",
							"balanceOf(address)": "70a08231",
							"balanceTo(uint256)": "66a5236c",
							"burn(address,uint256)": "9dc29fac",
							"index()": "2986c0e5",
							"migrate(address,address)": "1068361f",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sOHM\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gEXO/IgOHM.sol\":\"IgEXO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"gEXO/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"gEXO/IgOHM.sol\":{\"keccak256\":\"0x6cac4e5000a7bf84a9fb175f38a3a85fdedf2401cca7c0f0d95e9f88c8929e0d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e313687e3a347191cbb05812b8bf6832ee47019912f066d3e5c68a7b9fc8ea3f\",\"dweb:/ipfs/QmX2si86fKKkP96jmWCc3D2qbLUiT5mN9mw5nL68CUcHwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gEXO/IsOHM.sol": {
				"IsEXO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "debtor",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "add",
									"type": "bool"
								}
							],
							"name": "changeDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "debtBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fromG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ohmProfit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "toG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"changeDebt(uint256,address,bool)": "ae5c6cd3",
							"circulatingSupply()": "9358928b",
							"debtBalances(address)": "c4ef1c4c",
							"fromG(uint256)": "b8fbd533",
							"gonsForBalance(uint256)": "1bd39674",
							"index()": "2986c0e5",
							"rebase(uint256,uint256)": "058ecdb4",
							"toG(uint256)": "095be818",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"changeDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"debtBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fromG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ohmProfit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gEXO/IsOHM.sol\":\"IsEXO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"gEXO/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"gEXO/IsOHM.sol\":{\"keccak256\":\"0xe6853333a2d813d8ff0afce244cb92d4e1742a26ae2955d1d2cca221bfd4e675\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a3dd7d8b7d6421a74b3794e80174f7ee486c1391013c7a557859f75e30229d2\",\"dweb:/ipfs/QmeyMJhtEkL85vGk1e9BRd2AXmfq6Kivm4nTi1NeDTkoDr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gEXO/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gEXO/SafeMath.sol\":132:1759  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"gEXO/SafeMath.sol\":132:1759  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122060d282ea33816057d7e082f3393877b955895038e0bbbb7e6225578e441ad91664736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060d282ea33816057d7e082f3393877b955895038e0bbbb7e6225578e441ad91664736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xD2 DUP3 0xEA CALLER DUP2 PUSH1 0x57 0xD7 0xE0 DUP3 RETURN CODECOPY CODESIZE PUSH24 0xB955895038E0BBBB7E6225578E441AD91664736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060d282ea33816057d7e082f3393877b955895038e0bbbb7e6225578e441ad91664736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xD2 DUP3 0xEA CALLER DUP2 PUSH1 0x57 0xD7 0xE0 DUP3 RETURN CODECOPY CODESIZE PUSH24 0xB955895038E0BBBB7E6225578E441AD91664736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060d282ea33816057d7e082f3393877b955895038e0bbbb7e6225578e441ad91664736f6c63430007050033",
									".code": [
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gEXO/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"gEXO/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gEXO/gOHM.sol": {
				"gEXO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_migrator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sEXO",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "approved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fromBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staking",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sEXO",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrated",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sEXO",
							"outputs": [
								{
									"internalType": "contract IsEXO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceFrom(uint256)": {
								"params": {
									"_amount": "uint"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"balanceTo(uint256)": {
								"params": {
									"_amount": "uint"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"burn(address,uint256)": {
								"params": {
									"_amount": "uint",
									"_from": "address"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"migrate(address,address)": {
								"params": {
									"_sEXO": "address",
									"_staking": "address"
								}
							},
							"mint(address,uint256)": {
								"params": {
									"_amount": "uint",
									"_to": "address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gEXO/gOHM.sol\":174:7814  contract gEXO is IgEXO, ERC20 {... */\n  mstore(0x40, 0xa0)\n    /* \"gEXO/gOHM.sol\":1295:1571  constructor(address _migrator, address _sEXO) ERC20(\"Governance EXO\", \"gEXO\", 18) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  mload\n  0x40\n    /* \"gEXO/ERC20.sol\":586:777  constructor(... */\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0e\n  dup2\n  mstore\n  shl(0x90, 0x476f7665726e616e63652045584f)\n  dup2\n  dup7\n  add\n  swap1\n  dup2\n  mstore\n  dup3\n  mload\n  dup1\n  dup5\n  add\n  swap1\n  swap4\n  mstore\n  0x04\n  dup4\n  mstore\n  shl(0xe0, 0x6745584f)\n  swap6\n  dup4\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n    /* \"gEXO/ERC20.sol\":699:712  _name = name_ */\n  dup1\n  mload\n    /* \"gEXO/gOHM.sol\":1295:1571  constructor(address _migrator, address _sEXO) ERC20(\"Governance EXO\", \"gEXO\", 18) {... */\n  swap4\n  swap5\n  swap3\n  swap4\n    /* \"gEXO/ERC20.sol\":586:777  constructor(... */\n  swap1\n  swap3\n    /* \"gEXO/gOHM.sol\":1373:1375  18 */\n  0x12\n  swap2\n    /* \"gEXO/ERC20.sol\":699:712  _name = name_ */\n  tag_6\n  swap2\n    /* \"gEXO/ERC20.sol\":699:704  _name */\n  0x03\n  swap2\n    /* \"gEXO/ERC20.sol\":699:712  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"gEXO/ERC20.sol\":722:739  _symbol = symbol_ */\n  dup2\n  mload\n  tag_8\n  swap1\n    /* \"gEXO/ERC20.sol\":722:729  _symbol */\n  0x04\n  swap1\n    /* \"gEXO/ERC20.sol\":722:739  _symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"gEXO/ERC20.sol\":749:770  _decimals = decimals_ */\n  0xf8\n  shl\n  0xff00000000000000000000000000000000000000000000000000000000000000\n  and\n  0x80\n  mstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"gEXO/gOHM.sol\":1395:1418  _migrator != address(0) */\n  dup3\n  and\n    /* \"gEXO/gOHM.sol\":1387:1445  require(_migrator != address(0), \"Zero address: Migrator\") */\n  tag_10\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x16\n  0x24\n  dup3\n  add\n  mstore\n  0x5a65726f20616464726573733a204d69677261746f7200000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_10:\n    /* \"gEXO/gOHM.sol\":1455:1463  approved */\n  0x06\n    /* \"gEXO/gOHM.sol\":1455:1475  approved = _migrator */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"gEXO/gOHM.sol\":1493:1512  _sEXO != address(0) */\n  dup2\n  and\n    /* \"gEXO/gOHM.sol\":1485:1535  require(_sEXO != address(0), \"Zero address: sEXO\") */\n  tag_11\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x12\n  0x24\n  dup3\n  add\n  mstore\n  shl(0x70, 0x5a65726f20616464726573733a207345584f)\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_11:\n    /* \"gEXO/gOHM.sol\":1545:1549  sEXO */\n  0x05\n    /* \"gEXO/gOHM.sol\":1545:1564  sEXO = IsEXO(_sEXO) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"gEXO/gOHM.sol\":174:7814  contract gEXO is IgEXO, ERC20 {... */\n  jump(tag_12)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_14\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_17)\ntag_14:\n  dup3\n  0x1f\n  lt\n  tag_15\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_17)\ntag_15:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_17\n  jumpi\n  swap2\n  dup3\n  add\ntag_16:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_16)\ntag_17:\n  pop\n  tag_18\n  swap3\n  swap2\n  pop\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n  swap1\n  jump\t// out\ntag_19:\ntag_20:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_20)\ntag_12:\n  shr(0xf8, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x38985005b3886382adf349011d67a82b9ae02641442e41e1921bb637b1dc329d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"gEXO/gOHM.sol\":174:7814  contract gEXO is IgEXO, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x587cde1e\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa8248768\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa8248768\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x6fcfff45\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x587cde1e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x66a5236c\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x19d40b08\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x2c678c64\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x2c678c64\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x19d40b08\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2986c0e5\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x0cdfebfa\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x0cdfebfa\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1068361f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x06d9cea8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"gEXO/gOHM.sol\":980:997  IsEXO public sEXO */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"gEXO/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_40:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_40)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_43\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_43:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gEXO/ERC20.sol\":1622:1786  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_46\n      jump\t// in\n    tag_44:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"gEXO/gOHM.sol\":1069:1138  mapping(address => mapping(uint256 => Checkpoint)) public checkpoints */\n    tag_6:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"gEXO/gOHM.sol\":1837:2232  function migrate(address _staking, address _sEXO) external override onlyApproved {... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"gEXO/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n    tag_8:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"gEXO/gOHM.sol\":1003:1026  address public approved */\n    tag_9:\n      tag_36\n      tag_56\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":1792:2181  function transferFrom(... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":3022:3114  function index() public view override returns (uint256) {... */\n    tag_11:\n      tag_53\n      tag_61\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":1042:1062  bool public migrated */\n    tag_12:\n      tag_44\n      tag_63\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"gEXO/ERC20.sol\":2187:2398  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_68\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":2579:2690  function mint(address _to, uint256 _amount) external override onlyApproved {... */\n    tag_15:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_71\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":1199:1243  mapping(address => address) public delegates */\n    tag_16:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_74\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":2374:2476  function delegate(address delegatee) external {... */\n    tag_17:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":3485:3624  function balanceTo(uint256 _amount) public view override returns (uint256) {... */\n    tag_18:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      calldataload\n      tag_80\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":1144:1193  mapping(address => uint256) public numCheckpoints */\n    tag_19:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_20:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_86\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":4461:5657  function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {... */\n    tag_21:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_89\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":870:955  function symbol() public view returns (string memory) {... */\n    tag_22:\n      tag_38\n      tag_91\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":2795:2910  function burn(address _from, uint256 _amount) external override onlyApproved {... */\n    tag_23:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_98\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":2404:2712  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_101\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":3229:3370  function balanceFrom(uint256 _amount) public view override returns (uint256) {... */\n    tag_25:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      calldataload\n      tag_104\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":1291:1461  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_26:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_107\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":3818:4039  function getCurrentVotes(address account) external view returns (uint256) {... */\n    tag_27:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_110\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":1467:1616  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_28:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_113\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":980:997  IsEXO public sEXO */\n    tag_37:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      dup2\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_39:\n        /* \"gEXO/ERC20.sol\":852:857  _name */\n      0x03\n        /* \"gEXO/ERC20.sol\":845:857  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"gEXO/ERC20.sol\":820:833  string memory */\n      0x60\n      swap4\n        /* \"gEXO/ERC20.sol\":845:857  return _name */\n      swap1\n      swap3\n        /* \"gEXO/ERC20.sol\":852:857  _name */\n      swap1\n      swap2\n        /* \"gEXO/ERC20.sol\":845:857  return _name */\n      dup4\n      add\n        /* \"gEXO/ERC20.sol\":852:857  _name */\n      dup3\n        /* \"gEXO/ERC20.sol\":845:857  return _name */\n      dup3\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"gEXO/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":1622:1786  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_46:\n        /* \"gEXO/ERC20.sol\":1705:1709  bool */\n      0x00\n        /* \"gEXO/ERC20.sol\":1721:1758  _approve(msg.sender, spender, amount) */\n      tag_119\n        /* \"gEXO/ERC20.sol\":1730:1740  msg.sender */\n      caller\n        /* \"gEXO/ERC20.sol\":1742:1749  spender */\n      dup5\n        /* \"gEXO/ERC20.sol\":1751:1757  amount */\n      dup5\n        /* \"gEXO/ERC20.sol\":1721:1729  _approve */\n      tag_120\n        /* \"gEXO/ERC20.sol\":1721:1758  _approve(msg.sender, spender, amount) */\n      jump\t// in\n    tag_119:\n      pop\n        /* \"gEXO/ERC20.sol\":1775:1779  true */\n      0x01\n        /* \"gEXO/ERC20.sol\":1622:1786  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_118:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":1069:1138  mapping(address => mapping(uint256 => Checkpoint)) public checkpoints */\n    tag_49:\n      0x07\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":1837:2232  function migrate(address _staking, address _sEXO) external override onlyApproved {... */\n    tag_52:\n        /* \"gEXO/gOHM.sol\":419:427  approved */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"gEXO/gOHM.sol\":405:415  msg.sender */\n      caller\n        /* \"gEXO/gOHM.sol\":405:427  msg.sender == approved */\n      eq\n        /* \"gEXO/gOHM.sol\":397:445  require(msg.sender == approved, \"Only approved\") */\n      tag_122\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x13db9b1e48185c1c1c9bdd9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_122:\n        /* \"gEXO/gOHM.sol\":1937:1945  migrated */\n      sload(0x06)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"gEXO/gOHM.sol\":1936:1945  !migrated */\n      iszero\n        /* \"gEXO/gOHM.sol\":1928:1958  require(!migrated, \"Migrated\") */\n      tag_124\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      0x4d69677261746564000000000000000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_124:\n        /* \"gEXO/gOHM.sol\":1968:1976  migrated */\n      0x06\n        /* \"gEXO/gOHM.sol\":1968:1983  migrated = true */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      dup2\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":2002:2022  _staking != approved */\n      dup4\n      dup2\n      and\n        /* \"gEXO/gOHM.sol\":2014:2022  approved */\n      swap2\n      and\n        /* \"gEXO/gOHM.sol\":2002:2022  _staking != approved */\n      eq\n      iszero\n        /* \"gEXO/gOHM.sol\":1994:2043  require(_staking != approved, \"Invalid argument\") */\n      tag_125\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420617267756d656e7400000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":2061:2083  _staking != address(0) */\n      dup3\n      and\n        /* \"gEXO/gOHM.sol\":2053:2106  require(_staking != address(0), \"Zero address found\") */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x5a65726f206164647265737320666f756e640000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"gEXO/gOHM.sol\":2116:2124  approved */\n      0x06\n        /* \"gEXO/gOHM.sol\":2116:2135  approved = _staking */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"gEXO/gOHM.sol\":2154:2173  _sEXO != address(0) */\n      dup2\n      and\n        /* \"gEXO/gOHM.sol\":2146:2196  require(_sEXO != address(0), \"Zero address found\") */\n      tag_127\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x5a65726f206164647265737320666f756e640000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_127:\n        /* \"gEXO/gOHM.sol\":2206:2210  sEXO */\n      0x05\n        /* \"gEXO/gOHM.sol\":2206:2225  sEXO = IsEXO(_sEXO) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n        /* \"gEXO/gOHM.sol\":1837:2232  function migrate(address _staking, address _sEXO) external override onlyApproved {... */\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n    tag_54:\n        /* \"gEXO/ERC20.sol\":1135:1147  _totalSupply */\n      sload(0x02)\n        /* \"gEXO/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":1003:1026  address public approved */\n    tag_56:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":1792:2181  function transferFrom(... */\n    tag_59:\n        /* \"gEXO/ERC20.sol\":1928:1932  bool */\n      0x00\n        /* \"gEXO/ERC20.sol\":1944:1980  _transfer(sender, recipient, amount) */\n      tag_130\n        /* \"gEXO/ERC20.sol\":1954:1960  sender */\n      dup5\n        /* \"gEXO/ERC20.sol\":1962:1971  recipient */\n      dup5\n        /* \"gEXO/ERC20.sol\":1973:1979  amount */\n      dup5\n        /* \"gEXO/ERC20.sol\":1944:1953  _transfer */\n      tag_131\n        /* \"gEXO/ERC20.sol\":1944:1980  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_130:\n        /* \"gEXO/ERC20.sol\":1990:2153  _approve(... */\n      tag_132\n        /* \"gEXO/ERC20.sol\":2012:2018  sender */\n      dup5\n        /* \"gEXO/ERC20.sol\":2032:2042  msg.sender */\n      caller\n        /* \"gEXO/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_133\n        /* \"gEXO/ERC20.sol\":2092:2098  amount */\n      dup6\n        /* \"gEXO/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":2056:2075  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/ERC20.sol\":2056:2067  _allowances */\n      0x01\n        /* \"gEXO/ERC20.sol\":2056:2075  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gEXO/ERC20.sol\":2076:2086  msg.sender */\n      caller\n        /* \"gEXO/ERC20.sol\":2056:2087  _allowances[sender][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"gEXO/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"gEXO/ERC20.sol\":2056:2091  _allowances[sender][msg.sender].sub */\n      tag_134\n        /* \"gEXO/ERC20.sol\":2056:2143  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_133:\n        /* \"gEXO/ERC20.sol\":1990:1998  _approve */\n      tag_120\n        /* \"gEXO/ERC20.sol\":1990:2153  _approve(... */\n      jump\t// in\n    tag_132:\n      pop\n        /* \"gEXO/ERC20.sol\":2170:2174  true */\n      0x01\n        /* \"gEXO/ERC20.sol\":1792:2181  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":3022:3114  function index() public view override returns (uint256) {... */\n    tag_61:\n        /* \"gEXO/gOHM.sol\":3095:3099  sEXO */\n      sload(0x05)\n        /* \"gEXO/gOHM.sol\":3095:3107  sEXO.index() */\n      0x40\n      dup1\n      mload\n      0x2986c0e500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"gEXO/gOHM.sol\":3069:3076  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":3095:3099  sEXO */\n      and\n      swap2\n        /* \"gEXO/gOHM.sol\":3095:3105  sEXO.index */\n      0x2986c0e5\n      swap2\n        /* \"gEXO/gOHM.sol\":3095:3107  sEXO.index() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"gEXO/gOHM.sol\":3095:3099  sEXO */\n      dup7\n        /* \"gEXO/gOHM.sol\":3095:3107  sEXO.index() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      mload\n      swap1\n      pop\n        /* \"gEXO/gOHM.sol\":3022:3114  function index() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":1042:1062  bool public migrated */\n    tag_63:\n      sload(0x06)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n    tag_65:\n        /* \"gEXO/ERC20.sol\":1034:1043  _decimals */\n      immutable(\"0x38985005b3886382adf349011d67a82b9ae02641442e41e1921bb637b1dc329d\")\n        /* \"gEXO/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":2187:2398  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_68:\n        /* \"gEXO/ERC20.sol\":2300:2310  msg.sender */\n      caller\n        /* \"gEXO/ERC20.sol\":2275:2279  bool */\n      0x00\n        /* \"gEXO/ERC20.sol\":2321:2344  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"gEXO/ERC20.sol\":2321:2332  _allowances */\n      0x01\n        /* \"gEXO/ERC20.sol\":2321:2344  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":2321:2353  _allowances[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"gEXO/ERC20.sol\":2275:2279  bool */\n      swap1\n      swap2\n        /* \"gEXO/ERC20.sol\":2291:2370  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_119\n      swap2\n        /* \"gEXO/ERC20.sol\":2312:2319  spender */\n      dup6\n      swap1\n        /* \"gEXO/ERC20.sol\":2321:2369  _allowances[msg.sender][spender].add(addedValue) */\n      tag_133\n      swap1\n        /* \"gEXO/ERC20.sol\":2358:2368  addedValue */\n      dup7\n        /* \"gEXO/ERC20.sol\":2321:2357  _allowances[msg.sender][spender].add */\n      tag_144\n        /* \"gEXO/ERC20.sol\":2321:2369  _allowances[msg.sender][spender].add(addedValue) */\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":2579:2690  function mint(address _to, uint256 _amount) external override onlyApproved {... */\n    tag_71:\n        /* \"gEXO/gOHM.sol\":419:427  approved */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"gEXO/gOHM.sol\":405:415  msg.sender */\n      caller\n        /* \"gEXO/gOHM.sol\":405:427  msg.sender == approved */\n      eq\n        /* \"gEXO/gOHM.sol\":397:445  require(msg.sender == approved, \"Only approved\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x13db9b1e48185c1c1c9bdd9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"gEXO/gOHM.sol\":2664:2683  _mint(_to, _amount) */\n      tag_148\n        /* \"gEXO/gOHM.sol\":2670:2673  _to */\n      dup3\n        /* \"gEXO/gOHM.sol\":2675:2682  _amount */\n      dup3\n        /* \"gEXO/gOHM.sol\":2664:2669  _mint */\n      tag_149\n        /* \"gEXO/gOHM.sol\":2664:2683  _mint(_to, _amount) */\n      jump\t// in\n    tag_148:\n        /* \"gEXO/gOHM.sol\":2579:2690  function mint(address _to, uint256 _amount) external override onlyApproved {... */\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":1199:1243  mapping(address => address) public delegates */\n    tag_74:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":2374:2476  function delegate(address delegatee) external {... */\n    tag_77:\n        /* \"gEXO/gOHM.sol\":2437:2469  _delegate(msg.sender, delegatee) */\n      tag_151\n        /* \"gEXO/gOHM.sol\":2447:2457  msg.sender */\n      caller\n        /* \"gEXO/gOHM.sol\":2459:2468  delegatee */\n      dup3\n        /* \"gEXO/gOHM.sol\":2437:2446  _delegate */\n      tag_152\n        /* \"gEXO/gOHM.sol\":2437:2469  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_151:\n        /* \"gEXO/gOHM.sol\":2374:2476  function delegate(address delegatee) external {... */\n      pop\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":3485:3624  function balanceTo(uint256 _amount) public view override returns (uint256) {... */\n    tag_80:\n        /* \"gEXO/gOHM.sol\":3551:3558  uint256 */\n      0x00\n        /* \"gEXO/gOHM.sol\":3577:3617  _amount.mul(10**decimals()).div(index()) */\n      tag_118\n        /* \"gEXO/gOHM.sol\":3609:3616  index() */\n      tag_155\n        /* \"gEXO/gOHM.sol\":3609:3614  index */\n      tag_61\n        /* \"gEXO/gOHM.sol\":3609:3616  index() */\n      jump\t// in\n    tag_155:\n        /* \"gEXO/gOHM.sol\":3577:3604  _amount.mul(10**decimals()) */\n      tag_156\n        /* \"gEXO/gOHM.sol\":3593:3603  decimals() */\n      tag_157\n        /* \"gEXO/gOHM.sol\":3593:3601  decimals */\n      tag_65\n        /* \"gEXO/gOHM.sol\":3593:3603  decimals() */\n      jump\t// in\n    tag_157:\n        /* \"gEXO/gOHM.sol\":3577:3584  _amount */\n      dup6\n      swap1\n        /* \"gEXO/gOHM.sol\":3589:3603  10**decimals() */\n      0xff\n      and\n        /* \"gEXO/gOHM.sol\":3589:3591  10 */\n      0x0a\n        /* \"gEXO/gOHM.sol\":3589:3603  10**decimals() */\n      exp\n        /* \"gEXO/gOHM.sol\":3577:3588  _amount.mul */\n      tag_158\n        /* \"gEXO/gOHM.sol\":3577:3604  _amount.mul(10**decimals()) */\n      jump\t// in\n    tag_156:\n        /* \"gEXO/gOHM.sol\":3577:3608  _amount.mul(10**decimals()).div */\n      swap1\n      tag_159\n        /* \"gEXO/gOHM.sol\":3577:3617  _amount.mul(10**decimals()).div(index()) */\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":1144:1193  mapping(address => uint256) public numCheckpoints */\n    tag_83:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":1260:1278  _balances[account] */\n      and\n        /* \"gEXO/ERC20.sol\":1234:1241  uint256 */\n      0x00\n        /* \"gEXO/ERC20.sol\":1260:1278  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"gEXO/ERC20.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":4461:5657  function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {... */\n    tag_89:\n        /* \"gEXO/gOHM.sol\":4545:4552  uint256 */\n      0x00\n        /* \"gEXO/gOHM.sol\":4586:4598  block.number */\n      number\n        /* \"gEXO/gOHM.sol\":4572:4583  blockNumber */\n      dup3\n        /* \"gEXO/gOHM.sol\":4572:4598  blockNumber < block.number */\n      lt\n        /* \"gEXO/gOHM.sol\":4564:4642  require(blockNumber < block.number, \"gEXO::getPriorVotes: not yet determined\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7ce14e62375391d57a10579fed6527dbae13153d5307491a336b206517515337\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":4676:4699  numCheckpoints[account] */\n      dup4\n      and\n        /* \"gEXO/gOHM.sol\":4653:4673  uint256 nCheckpoints */\n      0x00\n        /* \"gEXO/gOHM.sol\":4676:4699  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":4676:4690  numCheckpoints */\n      0x08\n        /* \"gEXO/gOHM.sol\":4676:4699  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gEXO/gOHM.sol\":4713:4730  nCheckpoints == 0 */\n      dup1\n        /* \"gEXO/gOHM.sol\":4709:4765  if (nCheckpoints == 0) {... */\n      tag_163\n      jumpi\n        /* \"gEXO/gOHM.sol\":4753:4754  0 */\n      0x00\n        /* \"gEXO/gOHM.sol\":4746:4754  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_118)\n        /* \"gEXO/gOHM.sol\":4709:4765  if (nCheckpoints == 0) {... */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":4822:4842  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":4822:4833  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":4822:4842  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":4843:4859  nCheckpoints - 1 */\n      dup6\n      add\n        /* \"gEXO/gOHM.sol\":4822:4860  checkpoints[account][nCheckpoints - 1] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":4822:4870  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"gEXO/gOHM.sol\":4822:4885  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      dup4\n      lt\n        /* \"gEXO/gOHM.sol\":4818:4963  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_164\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":4908:4928  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":4908:4919  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":4908:4928  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":4929:4945  nCheckpoints - 1 */\n      swap1\n      swap5\n      add\n        /* \"gEXO/gOHM.sol\":4908:4946  checkpoints[account][nCheckpoints - 1] */\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"gEXO/gOHM.sol\":4944:4945  1 */\n      0x01\n        /* \"gEXO/gOHM.sol\":4908:4952  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n      swap1\n      pop\n        /* \"gEXO/gOHM.sol\":4901:4952  return checkpoints[account][nCheckpoints - 1].votes */\n      jump(tag_118)\n        /* \"gEXO/gOHM.sol\":4818:4963  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":5021:5041  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":5021:5032  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":5021:5041  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gEXO/gOHM.sol\":5021:5044  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":5021:5054  checkpoints[account][0].fromBlock */\n      sload\n        /* \"gEXO/gOHM.sol\":5021:5068  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"gEXO/gOHM.sol\":5017:5103  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"gEXO/gOHM.sol\":5091:5092  0 */\n      0x00\n        /* \"gEXO/gOHM.sol\":5084:5092  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_118)\n        /* \"gEXO/gOHM.sol\":5017:5103  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_165:\n        /* \"gEXO/gOHM.sol\":5113:5126  uint256 lower */\n      0x00\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":5156:5172  nCheckpoints - 1 */\n      dup3\n      add\n        /* \"gEXO/gOHM.sol\":5182:5601  while (upper > lower) {... */\n    tag_166:\n        /* \"gEXO/gOHM.sol\":5197:5202  lower */\n      dup2\n        /* \"gEXO/gOHM.sol\":5189:5194  upper */\n      dup2\n        /* \"gEXO/gOHM.sol\":5189:5202  upper > lower */\n      gt\n        /* \"gEXO/gOHM.sol\":5182:5601  while (upper > lower) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"gEXO/gOHM.sol\":5261:5262  2 */\n      0x02\n        /* \"gEXO/gOHM.sol\":5244:5257  upper - lower */\n      dup3\n      dup3\n      sub\n        /* \"gEXO/gOHM.sol\":5243:5262  (upper - lower) / 2 */\n      div\n        /* \"gEXO/gOHM.sol\":5235:5262  upper - (upper - lower) / 2 */\n      dup2\n      sub\n        /* \"gEXO/gOHM.sol\":5303:5323  Checkpoint memory cp */\n      tag_169\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":5326:5346  checkpoints[account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":5326:5337  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":5326:5346  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gEXO/gOHM.sol\":5326:5354  checkpoints[account][center] */\n      dup5\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":5303:5354  Checkpoint memory cp = checkpoints[account][center] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      dup1\n      dup5\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"gEXO/gOHM.sol\":5372:5399  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"gEXO/gOHM.sol\":5368:5591  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"gEXO/gOHM.sol\":5426:5434  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"gEXO/gOHM.sol\":5419:5434  return cp.votes */\n      tag_118\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"gEXO/gOHM.sol\":5368:5591  if (cp.fromBlock == blockNumber) {... */\n    tag_171:\n        /* \"gEXO/gOHM.sol\":5459:5471  cp.fromBlock */\n      dup1\n      mload\n        /* \"gEXO/gOHM.sol\":5459:5485  cp.fromBlock < blockNumber */\n      dup8\n      gt\n        /* \"gEXO/gOHM.sol\":5455:5591  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"gEXO/gOHM.sol\":5513:5519  center */\n      dup2\n        /* \"gEXO/gOHM.sol\":5505:5519  lower = center */\n      swap4\n      pop\n        /* \"gEXO/gOHM.sol\":5455:5591  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_174)\n    tag_173:\n        /* \"gEXO/gOHM.sol\":5575:5576  1 */\n      0x01\n        /* \"gEXO/gOHM.sol\":5566:5572  center */\n      dup3\n        /* \"gEXO/gOHM.sol\":5566:5576  center - 1 */\n      sub\n        /* \"gEXO/gOHM.sol\":5558:5576  upper = center - 1 */\n      swap3\n      pop\n        /* \"gEXO/gOHM.sol\":5455:5591  if (cp.fromBlock < blockNumber) {... */\n    tag_174:\n        /* \"gEXO/gOHM.sol\":5182:5601  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_166)\n    tag_167:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":5617:5637  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":5617:5628  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":5617:5637  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gEXO/gOHM.sol\":5617:5644  checkpoints[account][lower] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"gEXO/gOHM.sol\":5617:5650  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n      swap2\n      pop\n      pop\n        /* \"gEXO/gOHM.sol\":4461:5657  function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":870:955  function symbol() public view returns (string memory) {... */\n    tag_91:\n        /* \"gEXO/ERC20.sol\":941:948  _symbol */\n      0x04\n        /* \"gEXO/ERC20.sol\":934:948  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"gEXO/ERC20.sol\":909:922  string memory */\n      0x60\n      swap4\n        /* \"gEXO/ERC20.sol\":934:948  return _symbol */\n      swap1\n      swap3\n        /* \"gEXO/ERC20.sol\":941:948  _symbol */\n      swap1\n      swap2\n        /* \"gEXO/ERC20.sol\":934:948  return _symbol */\n      dup4\n      add\n        /* \"gEXO/ERC20.sol\":941:948  _symbol */\n      dup3\n        /* \"gEXO/ERC20.sol\":934:948  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n        /* \"gEXO/gOHM.sol\":2795:2910  function burn(address _from, uint256 _amount) external override onlyApproved {... */\n    tag_98:\n        /* \"gEXO/gOHM.sol\":419:427  approved */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"gEXO/gOHM.sol\":405:415  msg.sender */\n      caller\n        /* \"gEXO/gOHM.sol\":405:427  msg.sender == approved */\n      eq\n        /* \"gEXO/gOHM.sol\":397:445  require(msg.sender == approved, \"Only approved\") */\n      tag_180\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x13db9b1e48185c1c1c9bdd9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_180:\n        /* \"gEXO/gOHM.sol\":2882:2903  _burn(_from, _amount) */\n      tag_148\n        /* \"gEXO/gOHM.sol\":2888:2893  _from */\n      dup3\n        /* \"gEXO/gOHM.sol\":2895:2902  _amount */\n      dup3\n        /* \"gEXO/gOHM.sol\":2882:2887  _burn */\n      tag_183\n        /* \"gEXO/gOHM.sol\":2882:2903  _burn(_from, _amount) */\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":2404:2712  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_101:\n        /* \"gEXO/ERC20.sol\":2497:2501  bool */\n      0x00\n        /* \"gEXO/ERC20.sol\":2513:2684  _approve(... */\n      tag_119\n        /* \"gEXO/ERC20.sol\":2535:2545  msg.sender */\n      caller\n        /* \"gEXO/ERC20.sol\":2559:2566  spender */\n      dup5\n        /* \"gEXO/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_133\n        /* \"gEXO/ERC20.sol\":2617:2632  subtractedValue */\n      dup6\n        /* \"gEXO/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"gEXO/ERC20.sol\":2592:2602  msg.sender */\n      caller\n        /* \"gEXO/ERC20.sol\":2580:2603  _allowances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/ERC20.sol\":2580:2591  _allowances */\n      0x01\n        /* \"gEXO/ERC20.sol\":2580:2603  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":2580:2612  _allowances[msg.sender][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"gEXO/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"gEXO/ERC20.sol\":2580:2616  _allowances[msg.sender][spender].sub */\n      tag_134\n        /* \"gEXO/ERC20.sol\":2580:2674  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":3229:3370  function balanceFrom(uint256 _amount) public view override returns (uint256) {... */\n    tag_104:\n        /* \"gEXO/gOHM.sol\":3297:3304  uint256 */\n      0x00\n        /* \"gEXO/gOHM.sol\":3323:3363  _amount.mul(index()).div(10**decimals()) */\n      tag_118\n        /* \"gEXO/gOHM.sol\":3352:3362  decimals() */\n      tag_189\n        /* \"gEXO/gOHM.sol\":3352:3360  decimals */\n      tag_65\n        /* \"gEXO/gOHM.sol\":3352:3362  decimals() */\n      jump\t// in\n    tag_189:\n        /* \"gEXO/gOHM.sol\":3348:3362  10**decimals() */\n      0xff\n      and\n        /* \"gEXO/gOHM.sol\":3348:3350  10 */\n      0x0a\n        /* \"gEXO/gOHM.sol\":3348:3362  10**decimals() */\n      exp\n        /* \"gEXO/gOHM.sol\":3323:3343  _amount.mul(index()) */\n      tag_156\n        /* \"gEXO/gOHM.sol\":3335:3342  index() */\n      tag_191\n        /* \"gEXO/gOHM.sol\":3335:3340  index */\n      tag_61\n        /* \"gEXO/gOHM.sol\":3335:3342  index() */\n      jump\t// in\n    tag_191:\n        /* \"gEXO/gOHM.sol\":3323:3330  _amount */\n      dup6\n      swap1\n        /* \"gEXO/gOHM.sol\":3323:3334  _amount.mul */\n      tag_158\n        /* \"gEXO/gOHM.sol\":3323:3343  _amount.mul(index()) */\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":1291:1461  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_107:\n        /* \"gEXO/ERC20.sol\":1377:1381  bool */\n      0x00\n        /* \"gEXO/ERC20.sol\":1393:1433  _transfer(msg.sender, recipient, amount) */\n      tag_119\n        /* \"gEXO/ERC20.sol\":1403:1413  msg.sender */\n      caller\n        /* \"gEXO/ERC20.sol\":1415:1424  recipient */\n      dup5\n        /* \"gEXO/ERC20.sol\":1426:1432  amount */\n      dup5\n        /* \"gEXO/ERC20.sol\":1393:1402  _transfer */\n      tag_131\n        /* \"gEXO/ERC20.sol\":1393:1433  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":3818:4039  function getCurrentVotes(address account) external view returns (uint256) {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":3925:3948  numCheckpoints[account] */\n      dup2\n      and\n        /* \"gEXO/gOHM.sol\":3883:3890  uint256 */\n      0x00\n        /* \"gEXO/gOHM.sol\":3925:3948  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":3925:3939  numCheckpoints */\n      0x08\n        /* \"gEXO/gOHM.sol\":3925:3948  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"gEXO/gOHM.sol\":3965:3981  nCheckpoints > 0 */\n      dup1\n        /* \"gEXO/gOHM.sol\":3965:4032  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_195\n      jumpi\n        /* \"gEXO/gOHM.sol\":4031:4032  0 */\n      0x00\n        /* \"gEXO/gOHM.sol\":3965:4032  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_196)\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":3984:4004  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":3984:3995  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":3984:4004  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":4005:4021  nCheckpoints - 1 */\n      dup6\n      add\n        /* \"gEXO/gOHM.sol\":3984:4022  checkpoints[account][nCheckpoints - 1] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":4020:4021  1 */\n      0x01\n        /* \"gEXO/gOHM.sol\":3984:4028  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"gEXO/gOHM.sol\":3965:4032  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_196:\n        /* \"gEXO/gOHM.sol\":3958:4032  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap4\n        /* \"gEXO/gOHM.sol\":3818:4039  function getCurrentVotes(address account) external view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":1467:1616  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":1582:1600  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"gEXO/ERC20.sol\":1556:1563  uint256 */\n      0x00\n        /* \"gEXO/ERC20.sol\":1582:1600  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/ERC20.sol\":1582:1593  _allowances */\n      0x01\n        /* \"gEXO/ERC20.sol\":1582:1600  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gEXO/ERC20.sol\":1582:1609  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"gEXO/ERC20.sol\":1467:1616  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":4074:4444  function _approve(... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":4205:4224  owner != address(0) */\n      dup4\n      and\n        /* \"gEXO/ERC20.sol\":4197:4265  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":4283:4304  spender != address(0) */\n      dup3\n      and\n        /* \"gEXO/ERC20.sol\":4275:4343  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":4354:4372  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"gEXO/ERC20.sol\":4354:4365  _allowances */\n      0x01\n        /* \"gEXO/ERC20.sol\":4354:4372  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gEXO/ERC20.sol\":4354:4381  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"gEXO/ERC20.sol\":4354:4390  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"gEXO/ERC20.sol\":4405:4437  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"gEXO/ERC20.sol\":4074:4444  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/ERC20.sol\":2718:3278  function _transfer(... */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":2853:2873  sender != address(0) */\n      dup4\n      and\n        /* \"gEXO/ERC20.sol\":2845:2915  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":2933:2956  recipient != address(0) */\n      dup3\n      and\n        /* \"gEXO/ERC20.sol\":2925:2996  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"gEXO/ERC20.sol\":3007:3054  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_204\n        /* \"gEXO/ERC20.sol\":3028:3034  sender */\n      dup4\n        /* \"gEXO/ERC20.sol\":3036:3045  recipient */\n      dup4\n        /* \"gEXO/ERC20.sol\":3047:3053  amount */\n      dup4\n        /* \"gEXO/ERC20.sol\":3007:3027  _beforeTokenTransfer */\n      tag_205\n        /* \"gEXO/ERC20.sol\":3007:3054  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_204:\n        /* \"gEXO/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_206\n        /* \"gEXO/ERC20.sol\":3107:3113  amount */\n      dup2\n        /* \"gEXO/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3085:3102  _balances[sender] */\n      dup7\n      and\n        /* \"gEXO/ERC20.sol\":3085:3094  _balances */\n      0x00\n        /* \"gEXO/ERC20.sol\":3085:3102  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"gEXO/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"gEXO/ERC20.sol\":3085:3106  _balances[sender].sub */\n      tag_134\n        /* \"gEXO/ERC20.sol\":3085:3156  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3065:3082  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"gEXO/ERC20.sol\":3065:3074  _balances */\n      0x00\n        /* \"gEXO/ERC20.sol\":3065:3082  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"gEXO/ERC20.sol\":3065:3156  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"gEXO/ERC20.sol\":3189:3209  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"gEXO/ERC20.sol\":3189:3221  _balances[recipient].add(amount) */\n      tag_207\n      swap1\n        /* \"gEXO/ERC20.sol\":3214:3220  amount */\n      dup3\n        /* \"gEXO/ERC20.sol\":3189:3213  _balances[recipient].add */\n      tag_144\n        /* \"gEXO/ERC20.sol\":3189:3221  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3166:3186  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"gEXO/ERC20.sol\":3166:3175  _balances */\n      0x00\n        /* \"gEXO/ERC20.sol\":3166:3186  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"gEXO/ERC20.sol\":3166:3221  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"gEXO/ERC20.sol\":3236:3271  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"gEXO/ERC20.sol\":3166:3186  _balances[recipient] */\n      swap2\n      swap4\n        /* \"gEXO/ERC20.sol\":3236:3271  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"gEXO/ERC20.sol\":2718:3278  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/SafeMath.sol\":477:694  function sub(... */\n    tag_134:\n        /* \"gEXO/SafeMath.sol\":593:600  uint256 */\n      0x00\n        /* \"gEXO/SafeMath.sol\":628:640  errorMessage */\n      dup2\n        /* \"gEXO/SafeMath.sol\":620:626  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"gEXO/SafeMath.sol\":612:641  require(b <= a, errorMessage) */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_210:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_212\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_210)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_213\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_213:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n      pop\n      pop\n      pop\n        /* \"gEXO/SafeMath.sol\":663:668  a - b */\n      swap1\n      sub\n      swap1\n        /* \"gEXO/SafeMath.sol\":477:694  function sub(... */\n      jump\t// out\n        /* \"gEXO/SafeMath.sol\":155:331  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_144:\n        /* \"gEXO/SafeMath.sol\":213:220  uint256 */\n      0x00\n        /* \"gEXO/SafeMath.sol\":244:249  a + b */\n      dup3\n      dup3\n      add\n        /* \"gEXO/SafeMath.sol\":267:273  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"gEXO/SafeMath.sol\":259:305  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_196\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"gEXO/ERC20.sol\":3284:3652  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3367:3388  account != address(0) */\n      dup3\n      and\n        /* \"gEXO/ERC20.sol\":3359:3424  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_217\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_217:\n        /* \"gEXO/ERC20.sol\":3434:3483  _beforeTokenTransfer(address(0), account, amount) */\n      tag_218\n        /* \"gEXO/ERC20.sol\":3463:3464  0 */\n      0x00\n        /* \"gEXO/ERC20.sol\":3467:3474  account */\n      dup4\n        /* \"gEXO/ERC20.sol\":3476:3482  amount */\n      dup4\n        /* \"gEXO/ERC20.sol\":3434:3454  _beforeTokenTransfer */\n      tag_205\n        /* \"gEXO/ERC20.sol\":3434:3483  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_218:\n        /* \"gEXO/ERC20.sol\":3508:3520  _totalSupply */\n      sload(0x02)\n        /* \"gEXO/ERC20.sol\":3508:3532  _totalSupply.add(amount) */\n      tag_219\n      swap1\n        /* \"gEXO/ERC20.sol\":3525:3531  amount */\n      dup3\n        /* \"gEXO/ERC20.sol\":3508:3524  _totalSupply.add */\n      tag_144\n        /* \"gEXO/ERC20.sol\":3508:3532  _totalSupply.add(amount) */\n      jump\t// in\n    tag_219:\n        /* \"gEXO/ERC20.sol\":3493:3505  _totalSupply */\n      0x02\n        /* \"gEXO/ERC20.sol\":3493:3532  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3563:3581  _balances[account] */\n      dup3\n      and\n        /* \"gEXO/ERC20.sol\":3563:3572  _balances */\n      0x00\n        /* \"gEXO/ERC20.sol\":3563:3581  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gEXO/ERC20.sol\":3563:3593  _balances[account].add(amount) */\n      tag_220\n      swap1\n        /* \"gEXO/ERC20.sol\":3586:3592  amount */\n      dup3\n        /* \"gEXO/ERC20.sol\":3563:3585  _balances[account].add */\n      tag_144\n        /* \"gEXO/ERC20.sol\":3563:3593  _balances[account].add(amount) */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3542:3560  _balances[account] */\n      dup4\n      and\n        /* \"gEXO/ERC20.sol\":3542:3551  _balances */\n      0x00\n        /* \"gEXO/ERC20.sol\":3542:3560  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gEXO/ERC20.sol\":3542:3593  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"gEXO/ERC20.sol\":3608:3645  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"gEXO/ERC20.sol\":3542:3560  _balances[account] */\n      swap3\n      swap4\n        /* \"gEXO/ERC20.sol\":3542:3551  _balances */\n      swap2\n      swap3\n        /* \"gEXO/ERC20.sol\":3608:3645  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"gEXO/ERC20.sol\":3284:3652  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":5715:6084  function _delegate(address delegator, address delegatee) internal {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":5817:5837  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"gEXO/gOHM.sol\":5791:5814  address currentDelegate */\n      0x00\n        /* \"gEXO/gOHM.sol\":5817:5837  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":5817:5826  delegates */\n      0x09\n        /* \"gEXO/gOHM.sol\":5817:5837  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"gEXO/gOHM.sol\":5874:5894  _balances[delegator] */\n      dup6\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"gEXO/gOHM.sol\":5904:5924  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"gEXO/gOHM.sol\":5904:5936  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"gEXO/gOHM.sol\":5952:6006  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"gEXO/gOHM.sol\":5817:5837  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n        /* \"gEXO/gOHM.sol\":5874:5894  _balances[delegator] */\n      swap2\n      swap4\n        /* \"gEXO/gOHM.sol\":5904:5936  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"gEXO/gOHM.sol\":5817:5837  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"gEXO/gOHM.sol\":5952:6006  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"gEXO/gOHM.sol\":5791:5814  address currentDelegate */\n      swap1\n        /* \"gEXO/gOHM.sol\":5952:6006  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"gEXO/gOHM.sol\":6017:6077  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_222\n        /* \"gEXO/gOHM.sol\":6032:6047  currentDelegate */\n      dup3\n        /* \"gEXO/gOHM.sol\":6049:6058  delegatee */\n      dup5\n        /* \"gEXO/gOHM.sol\":6060:6076  delegatorBalance */\n      dup4\n        /* \"gEXO/gOHM.sol\":6017:6031  _moveDelegates */\n      tag_223\n        /* \"gEXO/gOHM.sol\":6017:6077  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_222:\n        /* \"gEXO/gOHM.sol\":5715:6084  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/SafeMath.sol\":700:941  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_158:\n        /* \"gEXO/SafeMath.sol\":758:765  uint256 */\n      0x00\n        /* \"gEXO/SafeMath.sol\":781:787  a == 0 */\n      dup3\n        /* \"gEXO/SafeMath.sol\":777:822  if (a == 0) {... */\n      tag_225\n      jumpi\n      pop\n        /* \"gEXO/SafeMath.sol\":810:811  0 */\n      0x00\n        /* \"gEXO/SafeMath.sol\":803:811  return 0 */\n      jump(tag_118)\n        /* \"gEXO/SafeMath.sol\":777:822  if (a == 0) {... */\n    tag_225:\n        /* \"gEXO/SafeMath.sol\":844:849  a * b */\n      dup3\n      dup3\n      mul\n        /* \"gEXO/SafeMath.sol\":848:849  b */\n      dup3\n        /* \"gEXO/SafeMath.sol\":844:845  a */\n      dup5\n        /* \"gEXO/SafeMath.sol\":844:849  a * b */\n      dup3\n        /* \"gEXO/SafeMath.sol\":844:845  a */\n      dup2\n        /* \"gEXO/SafeMath.sol\":867:872  c / a */\n      tag_226\n      jumpi\n      invalid\n    tag_226:\n      div\n        /* \"gEXO/SafeMath.sol\":867:877  c / a == b */\n      eq\n        /* \"gEXO/SafeMath.sol\":859:915  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"gEXO/SafeMath.sol\":947:1077  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_159:\n        /* \"gEXO/SafeMath.sol\":1005:1012  uint256 */\n      0x00\n        /* \"gEXO/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      tag_196\n        /* \"gEXO/SafeMath.sol\":1035:1036  a */\n      dup4\n        /* \"gEXO/SafeMath.sol\":1038:1039  b */\n      dup4\n        /* \"gEXO/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"gEXO/SafeMath.sol\":1031:1034  div */\n      tag_230\n        /* \"gEXO/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"gEXO/ERC20.sol\":3658:4068  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3741:3762  account != address(0) */\n      dup3\n      and\n        /* \"gEXO/ERC20.sol\":3733:3800  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"gEXO/ERC20.sol\":3811:3860  _beforeTokenTransfer(account, address(0), amount) */\n      tag_233\n        /* \"gEXO/ERC20.sol\":3832:3839  account */\n      dup3\n        /* \"gEXO/ERC20.sol\":3849:3850  0 */\n      0x00\n        /* \"gEXO/ERC20.sol\":3853:3859  amount */\n      dup4\n        /* \"gEXO/ERC20.sol\":3811:3831  _beforeTokenTransfer */\n      tag_205\n        /* \"gEXO/ERC20.sol\":3811:3860  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_233:\n        /* \"gEXO/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_234\n        /* \"gEXO/ERC20.sol\":3915:3921  amount */\n      dup2\n        /* \"gEXO/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3892:3910  _balances[account] */\n      dup6\n      and\n        /* \"gEXO/ERC20.sol\":3892:3901  _balances */\n      0x00\n        /* \"gEXO/ERC20.sol\":3892:3910  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"gEXO/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap1\n        /* \"gEXO/ERC20.sol\":3892:3914  _balances[account].sub */\n      tag_134\n        /* \"gEXO/ERC20.sol\":3892:3960  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":3871:3889  _balances[account] */\n      dup4\n      and\n        /* \"gEXO/ERC20.sol\":3871:3880  _balances */\n      0x00\n        /* \"gEXO/ERC20.sol\":3871:3889  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"gEXO/ERC20.sol\":3871:3960  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      sstore\n        /* \"gEXO/ERC20.sol\":3985:3997  _totalSupply */\n      sload(0x02)\n        /* \"gEXO/ERC20.sol\":3985:4009  _totalSupply.sub(amount) */\n      tag_235\n      swap1\n        /* \"gEXO/ERC20.sol\":4002:4008  amount */\n      dup3\n        /* \"gEXO/ERC20.sol\":3985:4001  _totalSupply.sub */\n      tag_236\n        /* \"gEXO/ERC20.sol\":3985:4009  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_235:\n        /* \"gEXO/ERC20.sol\":3970:3982  _totalSupply */\n      0x02\n        /* \"gEXO/ERC20.sol\":3970:4009  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"gEXO/ERC20.sol\":4024:4061  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"gEXO/ERC20.sol\":4050:4051  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/ERC20.sol\":4024:4061  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"gEXO/ERC20.sol\":3658:4068  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":7621:7812  function _beforeTokenTransfer(... */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":7766:7781  delegates[from] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":7766:7775  delegates */\n      0x09\n        /* \"gEXO/gOHM.sol\":7766:7781  delegates[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"gEXO/gOHM.sol\":7783:7796  delegates[to] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"gEXO/gOHM.sol\":7751:7805  _moveDelegates(delegates[from], delegates[to], amount) */\n      tag_238\n      swap3\n        /* \"gEXO/gOHM.sol\":7766:7781  delegates[from] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"gEXO/gOHM.sol\":7783:7796  delegates[to] */\n      and\n        /* \"gEXO/gOHM.sol\":7798:7804  amount */\n      dup4\n        /* \"gEXO/gOHM.sol\":7751:7765  _moveDelegates */\n      tag_223\n        /* \"gEXO/gOHM.sol\":7751:7805  _moveDelegates(delegates[from], delegates[to], amount) */\n      jump\t// in\n    tag_238:\n        /* \"gEXO/gOHM.sol\":7621:7812  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/gOHM.sol\":6090:6957  function _moveDelegates(... */\n    tag_223:\n        /* \"gEXO/gOHM.sol\":6225:6231  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6215:6231  srcRep != dstRep */\n      and\n        /* \"gEXO/gOHM.sol\":6215:6221  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6215:6231  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"gEXO/gOHM.sol\":6215:6245  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"gEXO/gOHM.sol\":6244:6245  0 */\n      0x00\n        /* \"gEXO/gOHM.sol\":6235:6241  amount */\n      dup2\n        /* \"gEXO/gOHM.sol\":6235:6245  amount > 0 */\n      gt\n        /* \"gEXO/gOHM.sol\":6215:6245  srcRep != dstRep && amount > 0 */\n    tag_240:\n        /* \"gEXO/gOHM.sol\":6211:6951  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_238\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6265:6285  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"gEXO/gOHM.sol\":6261:6594  if (srcRep != address(0)) {... */\n      tag_242\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6325:6347  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"gEXO/gOHM.sol\":6305:6322  uint256 srcRepNum */\n      0x00\n        /* \"gEXO/gOHM.sol\":6325:6347  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":6325:6339  numCheckpoints */\n      0x08\n        /* \"gEXO/gOHM.sol\":6325:6347  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"gEXO/gOHM.sol\":6385:6398  srcRepNum > 0 */\n      dup2\n        /* \"gEXO/gOHM.sol\":6385:6445  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_243\n      jumpi\n        /* \"gEXO/gOHM.sol\":6444:6445  0 */\n      0x00\n        /* \"gEXO/gOHM.sol\":6385:6445  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_244)\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6401:6420  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":6401:6412  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":6401:6420  checkpoints[srcRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":6421:6434  srcRepNum - 1 */\n      dup7\n      add\n        /* \"gEXO/gOHM.sol\":6401:6435  checkpoints[srcRep][srcRepNum - 1] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":6433:6434  1 */\n      0x01\n        /* \"gEXO/gOHM.sol\":6401:6441  checkpoints[srcRep][srcRepNum - 1].votes */\n      add\n      sload\n        /* \"gEXO/gOHM.sol\":6385:6445  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_244:\n        /* \"gEXO/gOHM.sol\":6365:6445  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"gEXO/gOHM.sol\":6463:6480  uint256 srcRepNew */\n      0x00\n        /* \"gEXO/gOHM.sol\":6483:6504  srcRepOld.sub(amount) */\n      tag_245\n        /* \"gEXO/gOHM.sol\":6365:6445  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      dup3\n        /* \"gEXO/gOHM.sol\":6497:6503  amount */\n      dup6\n        /* \"gEXO/gOHM.sol\":6483:6496  srcRepOld.sub */\n      tag_236\n        /* \"gEXO/gOHM.sol\":6483:6504  srcRepOld.sub(amount) */\n      jump\t// in\n    tag_245:\n        /* \"gEXO/gOHM.sol\":6463:6504  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"gEXO/gOHM.sol\":6522:6579  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_246\n        /* \"gEXO/gOHM.sol\":6539:6545  srcRep */\n      dup7\n        /* \"gEXO/gOHM.sol\":6547:6556  srcRepNum */\n      dup5\n        /* \"gEXO/gOHM.sol\":6558:6567  srcRepOld */\n      dup5\n        /* \"gEXO/gOHM.sol\":6569:6578  srcRepNew */\n      dup5\n        /* \"gEXO/gOHM.sol\":6522:6538  _writeCheckpoint */\n      tag_247\n        /* \"gEXO/gOHM.sol\":6522:6579  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_246:\n        /* \"gEXO/gOHM.sol\":6261:6594  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6612:6632  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"gEXO/gOHM.sol\":6608:6941  if (dstRep != address(0)) {... */\n      tag_238\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6672:6694  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"gEXO/gOHM.sol\":6652:6669  uint256 dstRepNum */\n      0x00\n        /* \"gEXO/gOHM.sol\":6672:6694  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":6672:6686  numCheckpoints */\n      0x08\n        /* \"gEXO/gOHM.sol\":6672:6694  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"gEXO/gOHM.sol\":6732:6745  dstRepNum > 0 */\n      dup2\n        /* \"gEXO/gOHM.sol\":6732:6792  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_249\n      jumpi\n        /* \"gEXO/gOHM.sol\":6791:6792  0 */\n      0x00\n        /* \"gEXO/gOHM.sol\":6732:6792  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_250)\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":6748:6767  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":6748:6759  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":6748:6767  checkpoints[dstRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":6768:6781  dstRepNum - 1 */\n      dup7\n      add\n        /* \"gEXO/gOHM.sol\":6748:6782  checkpoints[dstRep][dstRepNum - 1] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":6780:6781  1 */\n      0x01\n        /* \"gEXO/gOHM.sol\":6748:6788  checkpoints[dstRep][dstRepNum - 1].votes */\n      add\n      sload\n        /* \"gEXO/gOHM.sol\":6732:6792  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_250:\n        /* \"gEXO/gOHM.sol\":6712:6792  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"gEXO/gOHM.sol\":6810:6827  uint256 dstRepNew */\n      0x00\n        /* \"gEXO/gOHM.sol\":6830:6851  dstRepOld.add(amount) */\n      tag_251\n        /* \"gEXO/gOHM.sol\":6712:6792  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      dup3\n        /* \"gEXO/gOHM.sol\":6844:6850  amount */\n      dup6\n        /* \"gEXO/gOHM.sol\":6830:6843  dstRepOld.add */\n      tag_144\n        /* \"gEXO/gOHM.sol\":6830:6851  dstRepOld.add(amount) */\n      jump\t// in\n    tag_251:\n        /* \"gEXO/gOHM.sol\":6810:6851  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"gEXO/gOHM.sol\":6869:6926  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_252\n        /* \"gEXO/gOHM.sol\":6886:6892  dstRep */\n      dup6\n        /* \"gEXO/gOHM.sol\":6894:6903  dstRepNum */\n      dup5\n        /* \"gEXO/gOHM.sol\":6905:6914  dstRepOld */\n      dup5\n        /* \"gEXO/gOHM.sol\":6916:6925  dstRepNew */\n      dup5\n        /* \"gEXO/gOHM.sol\":6869:6885  _writeCheckpoint */\n      tag_247\n        /* \"gEXO/gOHM.sol\":6869:6926  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_252:\n        /* \"gEXO/gOHM.sol\":6608:6941  if (dstRep != address(0)) {... */\n      pop\n      pop\n      pop\n        /* \"gEXO/gOHM.sol\":6090:6957  function _moveDelegates(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/SafeMath.sol\":1083:1384  function div(... */\n    tag_230:\n        /* \"gEXO/SafeMath.sol\":1199:1206  uint256 */\n      0x00\n        /* \"gEXO/SafeMath.sol\":1233:1245  errorMessage */\n      dup2\n        /* \"gEXO/SafeMath.sol\":1226:1231  b > 0 */\n      dup4\n        /* \"gEXO/SafeMath.sol\":1218:1246  require(b > 0, errorMessage) */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_212\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_210)\n    tag_254:\n      pop\n        /* \"gEXO/SafeMath.sol\":1256:1265  uint256 c */\n      0x00\n        /* \"gEXO/SafeMath.sol\":1272:1273  b */\n      dup4\n        /* \"gEXO/SafeMath.sol\":1268:1269  a */\n      dup6\n        /* \"gEXO/SafeMath.sol\":1268:1273  a / b */\n      dup2\n      tag_259\n      jumpi\n      invalid\n    tag_259:\n      div\n        /* \"gEXO/SafeMath.sol\":1256:1273  uint256 c = a / b */\n      swap1\n      pop\n        /* \"gEXO/SafeMath.sol\":1308:1309  b */\n      dup4\n        /* \"gEXO/SafeMath.sol\":1304:1305  a */\n      dup6\n        /* \"gEXO/SafeMath.sol\":1304:1309  a % b */\n      dup2\n      tag_260\n      jumpi\n      invalid\n    tag_260:\n      mod\n        /* \"gEXO/SafeMath.sol\":1299:1300  c */\n      dup2\n        /* \"gEXO/SafeMath.sol\":1295:1296  b */\n      dup6\n        /* \"gEXO/SafeMath.sol\":1295:1300  b * c */\n      mul\n        /* \"gEXO/SafeMath.sol\":1295:1310  b * c + (a % b) */\n      add\n        /* \"gEXO/SafeMath.sol\":1290:1291  a */\n      dup6\n        /* \"gEXO/SafeMath.sol\":1290:1310  a == b * c + (a % b) */\n      eq\n        /* \"gEXO/SafeMath.sol\":1283:1311  assert(a == b * c + (a % b)) */\n      tag_261\n      jumpi\n      invalid\n    tag_261:\n        /* \"gEXO/SafeMath.sol\":1376:1377  c */\n      swap5\n        /* \"gEXO/SafeMath.sol\":1083:1384  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gEXO/SafeMath.sol\":337:471  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"gEXO/SafeMath.sol\":395:402  uint256 */\n      0x00\n        /* \"gEXO/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_196\n        /* \"gEXO/SafeMath.sol\":425:426  a */\n      dup4\n        /* \"gEXO/SafeMath.sol\":428:429  b */\n      dup4\n        /* \"gEXO/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"gEXO/SafeMath.sol\":421:424  sub */\n      tag_134\n        /* \"gEXO/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"gEXO/gOHM.sol\":6963:7532  function _writeCheckpoint(... */\n    tag_247:\n        /* \"gEXO/gOHM.sol\":7142:7143  0 */\n      0x00\n        /* \"gEXO/gOHM.sol\":7127:7139  nCheckpoints */\n      dup4\n        /* \"gEXO/gOHM.sol\":7127:7143  nCheckpoints > 0 */\n      gt\n        /* \"gEXO/gOHM.sol\":7127:7213  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number */\n      dup1\n      iszero\n      tag_265\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":7147:7169  checkpoints[delegatee] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":7147:7158  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":7147:7169  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":7170:7186  nCheckpoints - 1 */\n      dup8\n      add\n        /* \"gEXO/gOHM.sol\":7147:7187  checkpoints[delegatee][nCheckpoints - 1] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":7147:7197  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"gEXO/gOHM.sol\":7201:7213  block.number */\n      number\n        /* \"gEXO/gOHM.sol\":7147:7213  checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number */\n      eq\n        /* \"gEXO/gOHM.sol\":7127:7213  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number */\n    tag_265:\n        /* \"gEXO/gOHM.sol\":7123:7459  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {... */\n      iszero\n      tag_266\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":7229:7251  checkpoints[delegatee] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":7229:7240  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":7229:7251  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"gEXO/gOHM.sol\":7252:7268  nCheckpoints - 1 */\n      dup8\n      add\n        /* \"gEXO/gOHM.sol\":7229:7269  checkpoints[delegatee][nCheckpoints - 1] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"gEXO/gOHM.sol\":7267:7268  1 */\n      0x01\n        /* \"gEXO/gOHM.sol\":7229:7275  checkpoints[delegatee][nCheckpoints - 1].votes */\n      add\n        /* \"gEXO/gOHM.sol\":7229:7286  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup2\n      swap1\n      sstore\n        /* \"gEXO/gOHM.sol\":7123:7459  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {... */\n      jump(tag_267)\n    tag_266:\n        /* \"gEXO/gOHM.sol\":7356:7390  Checkpoint(block.number, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n        /* \"gEXO/gOHM.sol\":7367:7379  block.number */\n      number\n        /* \"gEXO/gOHM.sol\":7356:7390  Checkpoint(block.number, newVotes) */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gEXO/gOHM.sol\":7317:7339  checkpoints[delegatee] */\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":7317:7328  checkpoints */\n      0x07\n        /* \"gEXO/gOHM.sol\":7317:7339  checkpoints[delegatee] */\n      dup5\n      mstore\n      dup6\n      dup2\n      keccak256\n        /* \"gEXO/gOHM.sol\":7317:7353  checkpoints[delegatee][nCheckpoints] */\n      dup10\n      dup3\n      mstore\n      dup5\n      mstore\n      dup6\n      dup2\n      keccak256\n        /* \"gEXO/gOHM.sol\":7317:7390  checkpoints[delegatee][nCheckpoints] = Checkpoint(block.number, newVotes) */\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      0x01\n      swap5\n      dup6\n      add\n      sstore\n        /* \"gEXO/gOHM.sol\":7404:7429  numCheckpoints[delegatee] */\n      dup2\n      mstore\n        /* \"gEXO/gOHM.sol\":7404:7418  numCheckpoints */\n      0x08\n        /* \"gEXO/gOHM.sol\":7404:7429  numCheckpoints[delegatee] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"gEXO/gOHM.sol\":7432:7448  nCheckpoints + 1 */\n      swap1\n      dup5\n      add\n        /* \"gEXO/gOHM.sol\":7404:7448  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      swap1\n      sstore\n        /* \"gEXO/gOHM.sol\":7123:7459  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {... */\n    tag_267:\n        /* \"gEXO/gOHM.sol\":7474:7525  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap3\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"gEXO/gOHM.sol\":6963:7532  function _writeCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_170:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_7ce14e62375391d57a10579fed6527dbae13153d5307491a336b206517515337 6745584f3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220b2653e959be5e1306be773743da3dfb6c9940f169a4f290ca51261b87d06739264736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b5060405162001ca038038062001ca0833981810160405260408110156200003757600080fd5b508051602091820151604080518082018252600e81526d476f7665726e616e63652045584f60901b818601908152825180840190935260048352636745584f60e01b9583019590955280519394929390926012916200009991600391620001c6565b508151620000af906004906020850190620001c6565b5060f81b7fff000000000000000000000000000000000000000000000000000000000000001660805250506001600160a01b03821662000136576040805162461bcd60e51b815260206004820152601660248201527f5a65726f20616464726573733a204d69677261746f7200000000000000000000604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b038481169190911790915581166200019f576040805162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a207345584f60701b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b03929092169190911790555062000272565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001fe576000855562000249565b82601f106200021957805160ff191683800117855562000249565b8280016001018555821562000249579182015b82811115620002495782518255916020019190600101906200022c565b50620002579291506200025b565b5090565b5b808211156200025757600081556001016200025c565b60805160f81c611a106200029060003980610a0d5250611a106000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c8063587cde1e116100ee57806395d89b4111610097578063a824876811610071578063a824876814610528578063a9059cbb14610545578063b4b5ea5714610571578063dd62ed3e14610597576101ae565b806395d89b41146104c85780639dc29fac146104d0578063a457c2d7146104fc576101ae565b80636fcfff45116100c85780636fcfff451461045057806370a0823114610476578063782d6fe11461049c576101ae565b8063587cde1e146103e75780635c19a95c1461040d57806366a5236c14610433576101ae565b806319d40b081161015b5780632c678c64116101355780632c678c6414610369578063313ce56714610371578063395093511461038f57806340c10f19146103bb576101ae565b806319d40b081461032357806323b872dd1461032b5780632986c0e514610361576101ae565b80630cdfebfa1161018c5780630cdfebfa146102945780631068361f146102d957806318160ddd14610309576101ae565b806306d9cea8146101b357806306fdde03146101d7578063095ea7b314610254575b600080fd5b6101bb6105c5565b604080516001600160a01b039092168252519081900360200190f35b6101df6105d4565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610219578181015183820152602001610201565b50505050905090810190601f1680156102465780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102806004803603604081101561026a57600080fd5b506001600160a01b03813516906020013561066a565b604080519115158252519081900360200190f35b6102c0600480360360408110156102aa57600080fd5b506001600160a01b038135169060200135610681565b6040805192835260208301919091528051918290030190f35b610307600480360360408110156102ef57600080fd5b506001600160a01b03813581169160200135166106a5565b005b6103116108ee565b60408051918252519081900360200190f35b6101bb6108f4565b6102806004803603606081101561034157600080fd5b506001600160a01b03813581169160208101359091169060400135610903565b61031161096c565b6102806109fb565b610379610a0b565b6040805160ff9092168252519081900360200190f35b610280600480360360408110156103a557600080fd5b506001600160a01b038135169060200135610a2f565b610307600480360360408110156103d157600080fd5b506001600160a01b038135169060200135610a65565b6101bb600480360360208110156103fd57600080fd5b50356001600160a01b0316610ac2565b6103076004803603602081101561042357600080fd5b50356001600160a01b0316610add565b6103116004803603602081101561044957600080fd5b5035610aea565b6103116004803603602081101561046657600080fd5b50356001600160a01b0316610b15565b6103116004803603602081101561048c57600080fd5b50356001600160a01b0316610b27565b610311600480360360408110156104b257600080fd5b506001600160a01b038135169060200135610b42565b6101df610d04565b610307600480360360408110156104e657600080fd5b506001600160a01b038135169060200135610d65565b6102806004803603604081101561051257600080fd5b506001600160a01b038135169060200135610dbe565b6103116004803603602081101561053e57600080fd5b5035610e0d565b6102806004803603604081101561055b57600080fd5b506001600160a01b038135169060200135610e32565b6103116004803603602081101561058757600080fd5b50356001600160a01b0316610e3f565b610311600480360360408110156105ad57600080fd5b506001600160a01b0381358116916020013516610e97565b6005546001600160a01b031681565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050905090565b6000610677338484610ec2565b5060015b92915050565b60076020908152600092835260408084209091529082529020805460019091015482565b6006546001600160a01b031633146106f4576040805162461bcd60e51b815260206004820152600d60248201526c13db9b1e48185c1c1c9bdd9959609a1b604482015290519081900360640190fd5b600654600160a01b900460ff1615610753576040805162461bcd60e51b815260206004820152600860248201527f4d69677261746564000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600680547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b17908190556001600160a01b03838116911614156107e3576040805162461bcd60e51b815260206004820152601060248201527f496e76616c696420617267756d656e7400000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821661083e576040805162461bcd60e51b815260206004820152601260248201527f5a65726f206164647265737320666f756e640000000000000000000000000000604482015290519081900360640190fd5b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038481169190911790915581166108be576040805162461bcd60e51b815260206004820152601260248201527f5a65726f206164647265737320666f756e640000000000000000000000000000604482015290519081900360640190fd5b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b60025490565b6006546001600160a01b031681565b6000610910848484610fae565b610962843361095d85604051806060016040528060288152602001611924602891396001600160a01b038a1660009081526001602090815260408083203384529091529020549190611109565b610ec2565b5060019392505050565b600554604080517f2986c0e500000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691632986c0e5916004808301926020929190829003018186803b1580156109ca57600080fd5b505afa1580156109de573d6000803e3d6000fd5b505050506040513d60208110156109f457600080fd5b5051905090565b600654600160a01b900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161067791859061095d90866111a0565b6006546001600160a01b03163314610ab4576040805162461bcd60e51b815260206004820152600d60248201526c13db9b1e48185c1c1c9bdd9959609a1b604482015290519081900360640190fd5b610abe82826111fa565b5050565b6009602052600090815260409020546001600160a01b031681565b610ae733826112ea565b50565b600061067b610af761096c565b610b0f610b02610a0b565b859060ff16600a0a611376565b906113cf565b60086020526000908152604090205481565b6001600160a01b031660009081526020819052604090205490565b6000438210610b825760405162461bcd60e51b81526004018080602001828103825260278152602001806118dc6027913960400191505060405180910390fd5b6001600160a01b03831660009081526008602052604090205480610baa57600091505061067b565b6001600160a01b0384166000908152600760209081526040808320600019850184529091529020548310610c0a576001600160a01b038416600090815260076020908152604080832060001990940183529290522060010154905061067b565b6001600160a01b0384166000908152600760209081526040808320838052909152902054831015610c3f57600091505061067b565b600060001982015b81811115610cd4576002828203048103610c5f611834565b506001600160a01b03871660009081526007602090815260408083208484528252918290208251808401909352805480845260019091015491830191909152871415610cb55760200151945061067b9350505050565b8051871115610cc657819350610ccd565b6001820392505b5050610c47565b506001600160a01b0385166000908152600760209081526040808320938352929052206001015491505092915050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106605780601f1061063557610100808354040283529160200191610660565b6006546001600160a01b03163314610db4576040805162461bcd60e51b815260206004820152600d60248201526c13db9b1e48185c1c1c9bdd9959609a1b604482015290519081900360640190fd5b610abe8282611411565b6000610677338461095d856040518060600160405280602581526020016119b6602591393360009081526001602090815260408083206001600160a01b038d1684529091529020549190611109565b600061067b610e1a610a0b565b60ff16600a0a610b0f610e2b61096c565b8590611376565b6000610677338484610fae565b6001600160a01b03811660009081526008602052604081205480610e64576000610e90565b6001600160a01b0383166000908152600760209081526040808320600019850184529091529020600101545b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038316610f075760405162461bcd60e51b81526004018080602001828103825260248152602001806119926024913960400191505060405180910390fd5b6001600160a01b038216610f4c5760405162461bcd60e51b81526004018080602001828103825260228152602001806118946022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610ff35760405162461bcd60e51b815260040180806020018281038252602581526020018061196d6025913960400191505060405180910390fd5b6001600160a01b0382166110385760405162461bcd60e51b815260040180806020018281038252602381526020018061184f6023913960400191505060405180910390fd5b61104383838361150d565b611080816040518060600160405280602681526020016118b6602691396001600160a01b0386166000908152602081905260409020549190611109565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546110af90826111a0565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156111985760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561115d578181015183820152602001611145565b50505050905090810190601f16801561118a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610e90576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216611255576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6112616000838361150d565b60025461126e90826111a0565b6002556001600160a01b03821660009081526020819052604090205461129490826111a0565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0380831660008181526009602081815260408084208054858452828620549490935287871673ffffffffffffffffffffffffffffffffffffffff198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611370828483611544565b50505050565b6000826113855750600061067b565b8282028284828161139257fe5b0414610e905760405162461bcd60e51b81526004018080602001828103825260218152602001806119036021913960400191505060405180910390fd5b6000610e9083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611671565b6001600160a01b0382166114565760405162461bcd60e51b815260040180806020018281038252602181526020018061194c6021913960400191505060405180910390fd5b6114628260008361150d565b61149f81604051806060016040528060228152602001611872602291396001600160a01b0385166000908152602081905260409020549190611109565b6001600160a01b0383166000908152602081905260409020556002546114c590826116ed565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b0380841660009081526009602052604080822054858416835291205461153f92918216911683611544565b505050565b816001600160a01b0316836001600160a01b0316141580156115665750600081115b1561153f576001600160a01b038316156115ec576001600160a01b03831660009081526008602052604081205490816115a05760006115cc565b6001600160a01b0385166000908152600760209081526040808320600019860184529091529020600101545b905060006115da82856116ed565b90506115e88684848461172f565b5050505b6001600160a01b0382161561153f576001600160a01b038216600090815260086020526040812054908161162157600061164d565b6001600160a01b0384166000908152600760209081526040808320600019860184529091529020600101545b9050600061165b82856111a0565b90506116698584848461172f565b505050505050565b600081836116c05760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561115d578181015183820152602001611145565b5060008385816116cc57fe5b0490508385816116d857fe5b068185020185146116e557fe5b949350505050565b6000610e9083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611109565b60008311801561176557506001600160a01b03841660009081526007602090815260408083206000198701845290915290205443145b1561179c576001600160a01b03841660009081526007602090815260408083206000198701845290915290206001018190556117eb565b60408051808201825243815260208082018481526001600160a01b0388166000818152600784528581208982528452858120945185559151600194850155815260089091529190912090840190555b604080518381526020810183905281516001600160a01b038716927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a250505050565b60405180604001604052806000815260200160008152509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63656745584f3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b2653e959be5e1306be773743da3dfb6c9940f169a4f290ca51261b87d06739264736f6c63430007050033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CA0 CODESIZE SUB DUP1 PUSH3 0x1CA0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x476F7665726E616E63652045584F PUSH1 0x90 SHL DUP2 DUP7 ADD SWAP1 DUP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH4 0x6745584F PUSH1 0xE0 SHL SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 MLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x12 SWAP2 PUSH3 0x99 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x1C6 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0xAF SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1C6 JUMP JUMPDEST POP PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0x80 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x136 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F20616464726573733A204D69677261746F7200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND PUSH3 0x19F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5A65726F20616464726573733A207345584F PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x272 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1FE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x249 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x219 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x249 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x249 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x249 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x22C JUMP JUMPDEST POP PUSH3 0x257 SWAP3 SWAP2 POP PUSH3 0x25B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x257 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x25C JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xF8 SHR PUSH2 0x1A10 PUSH3 0x290 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xA0D MSTORE POP PUSH2 0x1A10 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x587CDE1E GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8248768 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA8248768 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x597 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4FC JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x49C JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x66A5236C EQ PUSH2 0x433 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x2C678C64 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x2C678C64 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3BB JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x361 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0xCDFEBFA GT PUSH2 0x18C JUMPI DUP1 PUSH4 0xCDFEBFA EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x1068361F EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x309 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x6D9CEA8 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x219 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x201 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x246 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x66A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x903 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x280 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x379 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xADD JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x635 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x660 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x643 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 CALLER DUP5 DUP5 PUSH2 0xEC2 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x753 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69677261746564000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617267756D656E7400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND PUSH2 0x8BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x910 DUP5 DUP5 DUP5 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x962 DUP5 CALLER PUSH2 0x95D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1924 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2986C0E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2986C0E5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x677 SWAP2 DUP6 SWAP1 PUSH2 0x95D SWAP1 DUP7 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xABE DUP3 DUP3 PUSH2 0x11FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xAE7 CALLER DUP3 PUSH2 0x12EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0xAF7 PUSH2 0x96C JUMP JUMPDEST PUSH2 0xB0F PUSH2 0xB02 PUSH2 0xA0B JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x1376 JUMP JUMPDEST SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18DC PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xBAA JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT PUSH2 0xC0A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP5 ADD DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x2 DUP3 DUP3 SUB DIV DUP2 SUB PUSH2 0xC5F PUSH2 0x1834 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 EQ ISZERO PUSH2 0xCB5 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x67B SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP8 GT ISZERO PUSH2 0xCC6 JUMPI DUP2 SWAP4 POP PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xC47 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x635 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xABE DUP3 DUP3 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 CALLER DUP5 PUSH2 0x95D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B6 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0xE1A PUSH2 0xA0B JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0xB0F PUSH2 0xE2B PUSH2 0x96C JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 CALLER DUP5 DUP5 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0xE64 JUMPI PUSH1 0x0 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1992 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1894 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x196D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x184F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1043 DUP4 DUP4 DUP4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x1080 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x10AF SWAP1 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE90 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1255 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1261 PUSH1 0x0 DUP4 DUP4 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x126E SWAP1 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1294 SWAP1 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1370 DUP3 DUP5 DUP4 PUSH2 0x1544 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1385 JUMPI POP PUSH1 0x0 PUSH2 0x67B JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1392 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xE90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1903 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1456 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x194C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1462 DUP3 PUSH1 0x0 DUP4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x149F DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1872 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x14C5 SWAP1 DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x153F SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1544 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x153F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x15EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH2 0x15A0 JUMPI PUSH1 0x0 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15DA DUP3 DUP6 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH2 0x15E8 DUP7 DUP5 DUP5 DUP5 PUSH2 0x172F JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x153F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH2 0x1621 JUMPI PUSH1 0x0 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x165B DUP3 DUP6 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1669 DUP6 DUP5 DUP5 DUP5 PUSH2 0x172F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x115D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1145 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x16CC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x16D8 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x16E5 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1765 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP8 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD NUMBER EQ JUMPDEST ISZERO PUSH2 0x179C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP8 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE NUMBER DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE DUP6 DUP2 KECCAK256 DUP10 DUP3 MSTORE DUP5 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP5 DUP6 ADD SSTORE DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63656745584F GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220B265 RETURNDATACOPY SWAP6 SWAP12 0xE5 0xE1 ADDRESS PUSH12 0xE773743DA3DFB6C9940F169A 0x4F 0x29 0xC 0xA5 SLT PUSH2 0xB87D MOD PUSH20 0x9264736F6C634300070500330000000000000000 ",
							"sourceMap": "174:7640:6:-:0;;;1295:276;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1295:276:6;;;;;;;;586:191:1;;;;;;;;;;-1:-1:-1;;;586:191:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;586:191:1;;;;;;;699:13;;1295:276:6;;;;586:191:1;;1373:2:6;;699:13:1;;:5;;:13;:::i;:::-;-1:-1:-1;722:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;749:21:1;;;;;;-1:-1:-1;;;;;;;1395:23:6;::::1;1387:58;;;::::0;;-1:-1:-1;;;1387:58:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1455:8;:20:::0;;-1:-1:-1;;;;;;1455:20:6::1;-1:-1:-1::0;;;;;1455:20:6;;::::1;::::0;;;::::1;::::0;;;1493:19;::::1;1485:50;;;::::0;;-1:-1:-1;;;1485:50:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1485:50:6;;;;;;;;;;;;;::::1;;1545:4;:19:::0;;-1:-1:-1;;;;;;1545:19:6::1;-1:-1:-1::0;;;;;1545:19:6;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;174:7640:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;174:7640:6;;;-1:-1:-1;174:7640:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"376": [
									{
										"length": 32,
										"start": 2573
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x587CDE1E GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8248768 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA8248768 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x597 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4FC JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x49C JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x66A5236C EQ PUSH2 0x433 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x2C678C64 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x2C678C64 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3BB JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x19D40B08 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x361 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0xCDFEBFA GT PUSH2 0x18C JUMPI DUP1 PUSH4 0xCDFEBFA EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x1068361F EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x309 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x6D9CEA8 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x219 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x201 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x246 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x66A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x903 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x280 PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x379 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xADD JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x635 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x660 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x643 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 CALLER DUP5 DUP5 PUSH2 0xEC2 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x753 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69677261746564000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617267756D656E7400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND PUSH2 0x8BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206164647265737320666F756E640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x910 DUP5 DUP5 DUP5 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x962 DUP5 CALLER PUSH2 0x95D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1924 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2986C0E500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2986C0E5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x677 SWAP2 DUP6 SWAP1 PUSH2 0x95D SWAP1 DUP7 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xABE DUP3 DUP3 PUSH2 0x11FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xAE7 CALLER DUP3 PUSH2 0x12EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0xAF7 PUSH2 0x96C JUMP JUMPDEST PUSH2 0xB0F PUSH2 0xB02 PUSH2 0xA0B JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x1376 JUMP JUMPDEST SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18DC PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xBAA JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT PUSH2 0xC0A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP5 ADD DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 LT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x2 DUP3 DUP3 SUB DIV DUP2 SUB PUSH2 0xC5F PUSH2 0x1834 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 EQ ISZERO PUSH2 0xCB5 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x67B SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP8 GT ISZERO PUSH2 0xCC6 JUMPI DUP2 SWAP4 POP PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xC47 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x635 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xABE DUP3 DUP3 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 CALLER DUP5 PUSH2 0x95D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B6 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0xE1A PUSH2 0xA0B JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0xB0F PUSH2 0xE2B PUSH2 0x96C JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 CALLER DUP5 DUP5 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0xE64 JUMPI PUSH1 0x0 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1992 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1894 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x196D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x184F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1043 DUP4 DUP4 DUP4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x1080 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18B6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x10AF SWAP1 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE90 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1255 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1261 PUSH1 0x0 DUP4 DUP4 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x126E SWAP1 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1294 SWAP1 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1370 DUP3 DUP5 DUP4 PUSH2 0x1544 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1385 JUMPI POP PUSH1 0x0 PUSH2 0x67B JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1392 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xE90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1903 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1456 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x194C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1462 DUP3 PUSH1 0x0 DUP4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x149F DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1872 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x14C5 SWAP1 DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x153F SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1544 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x153F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x15EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH2 0x15A0 JUMPI PUSH1 0x0 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15DA DUP3 DUP6 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP PUSH2 0x15E8 DUP7 DUP5 DUP5 DUP5 PUSH2 0x172F JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x153F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH2 0x1621 JUMPI PUSH1 0x0 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x165B DUP3 DUP6 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1669 DUP6 DUP5 DUP5 DUP5 PUSH2 0x172F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x115D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1145 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x16CC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x16D8 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x16E5 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1765 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP8 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD NUMBER EQ JUMPDEST ISZERO PUSH2 0x179C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP8 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE NUMBER DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE DUP6 DUP2 KECCAK256 DUP10 DUP3 MSTORE DUP5 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP5 DUP6 ADD SSTORE DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63656745584F GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220B265 RETURNDATACOPY SWAP6 SWAP12 0xE5 0xE1 ADDRESS PUSH12 0xE773743DA3DFB6C9940F169A 0x4F 0x29 0xC 0xA5 SLT PUSH2 0xB87D MOD PUSH20 0x9264736F6C634300070500330000000000000000 ",
							"sourceMap": "174:7640:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;980:17;;;:::i;:::-;;;;-1:-1:-1;;;;;980:17:6;;;;;;;;;;;;;;783:81:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:164;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1622:164:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1069:69:6;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1069:69:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1837:395;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1837:395:6;;;;;;;;;;:::i;:::-;;1056:98:1;;;:::i;:::-;;;;;;;;;;;;;;;;1003:23:6;;;:::i;1792:389:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1792:389:1;;;;;;;;;;;;;;;;;:::i;3022:92:6:-;;;:::i;1042:20::-;;;:::i;961:89:1:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2187:211;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2187:211:1;;;;;;;;:::i;2579:111:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2579:111:6;;;;;;;;:::i;1199:44::-;;;;;;;;;;;;;;;;-1:-1:-1;1199:44:6;-1:-1:-1;;;;;1199:44:6;;:::i;2374:102::-;;;;;;;;;;;;;;;;-1:-1:-1;2374:102:6;-1:-1:-1;;;;;2374:102:6;;:::i;3485:139::-;;;;;;;;;;;;;;;;-1:-1:-1;3485:139:6;;:::i;1144:49::-;;;;;;;;;;;;;;;;-1:-1:-1;1144:49:6;-1:-1:-1;;;;;1144:49:6;;:::i;1160:125:1:-;;;;;;;;;;;;;;;;-1:-1:-1;1160:125:1;-1:-1:-1;;;;;1160:125:1;;:::i;4461:1196:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4461:1196:6;;;;;;;;:::i;870:85:1:-;;;:::i;2795:115:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2795:115:6;;;;;;;;:::i;2404:308:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2404:308:1;;;;;;;;:::i;3229:141:6:-;;;;;;;;;;;;;;;;-1:-1:-1;3229:141:6;;:::i;1291:170:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1291:170:1;;;;;;;;:::i;3818:221:6:-;;;;;;;;;;;;;;;;-1:-1:-1;3818:221:6;-1:-1:-1;;;;;3818:221:6;;:::i;1467:149:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1467:149:1;;;;;;;;;;:::i;980:17:6:-;;;-1:-1:-1;;;;;980:17:6;;:::o;783:81:1:-;852:5;845:12;;;;;;;;-1:-1:-1;;845:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:13;;845:12;;852:5;;845:12;;852:5;845:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:81;:::o;1622:164::-;1705:4;1721:37;1730:10;1742:7;1751:6;1721:8;:37::i;:::-;-1:-1:-1;1775:4:1;1622:164;;;;;:::o;1069:69:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1837:395::-;419:8;;-1:-1:-1;;;;;419:8:6;405:10;:22;397:48;;;;;-1:-1:-1;;;397:48:6;;;;;;;;;;;;-1:-1:-1;;;397:48:6;;;;;;;;;;;;;;;1937:8:::1;::::0;-1:-1:-1;;;1937:8:6;::::1;;;1936:9;1928:30;;;::::0;;-1:-1:-1;;;1928:30:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1968:8;:15:::0;;;::::1;-1:-1:-1::0;;;1968:15:6::1;::::0;;;;-1:-1:-1;;;;;2002:20:6;;::::1;2014:8:::0;::::1;2002:20;;1994:49;;;::::0;;-1:-1:-1;;;1994:49:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;2061:22:6;::::1;2053:53;;;::::0;;-1:-1:-1;;;2053:53:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2116:8;:19:::0;;-1:-1:-1;;2116:19:6::1;-1:-1:-1::0;;;;;2116:19:6;;::::1;::::0;;;::::1;::::0;;;2154;::::1;2146:50;;;::::0;;-1:-1:-1;;;2146:50:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2206:4;:19:::0;;-1:-1:-1;;2206:19:6::1;-1:-1:-1::0;;;;;2206:19:6;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1837:395:6:o;1056:98:1:-;1135:12;;1056:98;:::o;1003:23:6:-;;;-1:-1:-1;;;;;1003:23:6;;:::o;1792:389:1:-;1928:4;1944:36;1954:6;1962:9;1973:6;1944:9;:36::i;:::-;1990:163;2012:6;2032:10;2056:87;2092:6;2056:87;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2056:19:1;;;;;;:11;:19;;;;;;;;2076:10;2056:31;;;;;;;;;:87;:35;:87::i;:::-;1990:8;:163::i;:::-;-1:-1:-1;2170:4:1;1792:389;;;;;:::o;3022:92:6:-;3095:4;;:12;;;;;;;;3069:7;;-1:-1:-1;;;;;3095:4:6;;:10;;:12;;;;;;;;;;;;;;:4;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3095:12:6;;-1:-1:-1;3022:92:6;:::o;1042:20::-;;;-1:-1:-1;;;1042:20:6;;;;;:::o;961:89:1:-;1034:9;961:89;:::o;2187:211::-;2300:10;2275:4;2321:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2321:32:1;;;;;;;;;;2275:4;;2291:79;;2312:7;;2321:48;;2358:10;2321:36;:48::i;2579:111:6:-;419:8;;-1:-1:-1;;;;;419:8:6;405:10;:22;397:48;;;;;-1:-1:-1;;;397:48:6;;;;;;;;;;;;-1:-1:-1;;;397:48:6;;;;;;;;;;;;;;;2664:19:::1;2670:3;2675:7;2664:5;:19::i;:::-;2579:111:::0;;:::o;1199:44::-;;;;;;;;;;;;-1:-1:-1;;;;;1199:44:6;;:::o;2374:102::-;2437:32;2447:10;2459:9;2437;:32::i;:::-;2374:102;:::o;3485:139::-;3551:7;3577:40;3609:7;:5;:7::i;:::-;3577:27;3593:10;:8;:10::i;:::-;3577:7;;3589:14;;:2;:14;3577:11;:27::i;:::-;:31;;:40::i;1144:49::-;;;;;;;;;;;;;:::o;1160:125:1:-;-1:-1:-1;;;;;1260:18:1;1234:7;1260:18;;;;;;;;;;;;1160:125::o;4461:1196:6:-;4545:7;4586:12;4572:11;:26;4564:78;;;;-1:-1:-1;;;4564:78:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4676:23:6;;4653:20;4676:23;;;:14;:23;;;;;;4713:17;4709:56;;4753:1;4746:8;;;;;4709:56;-1:-1:-1;;;;;4822:20:6;;;;;;:11;:20;;;;;;;;-1:-1:-1;;4843:16:6;;4822:38;;;;;;;:48;:63;-1:-1:-1;4818:145:6;;-1:-1:-1;;;;;4908:20:6;;;;;;:11;:20;;;;;;;;-1:-1:-1;;4929:16:6;;;4908:38;;;;;;4944:1;4908:44;;;-1:-1:-1;4901:51:6;;4818:145;-1:-1:-1;;;;;5021:20:6;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:47;-1:-1:-1;5017:86:6;;;5091:1;5084:8;;;;;5017:86;5113:13;-1:-1:-1;;5156:16:6;;5182:419;5197:5;5189;:13;5182:419;;;5261:1;5244:13;;;5243:19;5235:27;;5303:20;;:::i;:::-;-1:-1:-1;;;;;;5326:20:6;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;5303:51;;;;;;;;;;;;;;;;;;;;;;;;;5372:27;;5368:223;;;5426:8;;;;-1:-1:-1;5419:15:6;;-1:-1:-1;;;;5419:15:6;5368:223;5459:12;;:26;-1:-1:-1;5455:136:6;;;5513:6;5505:14;;5455:136;;;5575:1;5566:6;:10;5558:18;;5455:136;5182:419;;;;;-1:-1:-1;;;;;;5617:20:6;;;;;;:11;:20;;;;;;;;:27;;;;;;;:33;;;;-1:-1:-1;;4461:1196:6;;;;:::o;870:85:1:-;941:7;934:14;;;;;;;;-1:-1:-1;;934:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:13;;934:14;;941:7;;934:14;;941:7;934:14;;;;;;;;;;;;;;;;;;;;;;;;2795:115:6;419:8;;-1:-1:-1;;;;;419:8:6;405:10;:22;397:48;;;;;-1:-1:-1;;;397:48:6;;;;;;;;;;;;-1:-1:-1;;;397:48:6;;;;;;;;;;;;;;;2882:21:::1;2888:5;2895:7;2882:5;:21::i;2404:308:1:-:0;2497:4;2513:171;2535:10;2559:7;2580:94;2617:15;2580:94;;;;;;;;;;;;;;;;;2592:10;2580:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2580:32:1;;;;;;;;;;;:94;:36;:94::i;3229:141:6:-;3297:7;3323:40;3352:10;:8;:10::i;:::-;3348:14;;:2;:14;3323:20;3335:7;:5;:7::i;:::-;3323;;:11;:20::i;1291:170:1:-;1377:4;1393:40;1403:10;1415:9;1426:6;1393:9;:40::i;3818:221:6:-;-1:-1:-1;;;;;3925:23:6;;3883:7;3925:23;;;:14;:23;;;;;;3965:16;:67;;4031:1;3965:67;;;-1:-1:-1;;;;;3984:20:6;;;;;;:11;:20;;;;;;;;-1:-1:-1;;4005:16:6;;3984:38;;;;;;;4020:1;3984:44;;3965:67;3958:74;3818:221;-1:-1:-1;;;3818:221:6:o;1467:149:1:-;-1:-1:-1;;;;;1582:18:1;;;1556:7;1582:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;1467:149::o;4074:370::-;-1:-1:-1;;;;;4205:19:1;;4197:68;;;;-1:-1:-1;;;4197:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4283:21:1;;4275:68;;;;-1:-1:-1;;;4275:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4354:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;4405:32;;;;;;;;;;;;;;;;;4074:370;;;:::o;2718:560::-;-1:-1:-1;;;;;2853:20:1;;2845:70;;;;-1:-1:-1;;;2845:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2933:23:1;;2925:71;;;;-1:-1:-1;;;2925:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3007:47;3028:6;3036:9;3047:6;3007:20;:47::i;:::-;3085:71;3107:6;3085:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3085:17:1;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;3065:17:1;;;:9;:17;;;;;;;;;;;:91;;;;3189:20;;;;;;;:32;;3214:6;3189:24;:32::i;:::-;-1:-1:-1;;;;;3166:20:1;;;:9;:20;;;;;;;;;;;;:55;;;;3236:35;;;;;;;3166:20;;3236:35;;;;;;;;;;;;;2718:560;;;:::o;477:217:5:-;593:7;628:12;620:6;;;;612:29;;;;-1:-1:-1;;;612:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;663:5:5;;;477:217::o;155:176::-;213:7;244:5;;;267:6;;;;259:46;;;;;-1:-1:-1;;;259:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;3284:368:1;-1:-1:-1;;;;;3367:21:1;;3359:65;;;;;-1:-1:-1;;;3359:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:49;3463:1;3467:7;3476:6;3434:20;:49::i;:::-;3508:12;;:24;;3525:6;3508:16;:24::i;:::-;3493:12;:39;-1:-1:-1;;;;;3563:18:1;;:9;:18;;;;;;;;;;;:30;;3586:6;3563:22;:30::i;:::-;-1:-1:-1;;;;;3542:18:1;;:9;:18;;;;;;;;;;;:51;;;;3608:37;;;;;;;3542:18;;:9;;3608:37;;;;;;;;;;3284:368;;:::o;5715:369:6:-;-1:-1:-1;;;;;5817:20:6;;;5791:23;5817:20;;;:9;:20;;;;;;;;;;5874;;;;;;;5904;;;;:32;;;-1:-1:-1;;5904:32:6;;;;;;;5952:54;;5817:20;;;;;5874;;5904:32;;5817:20;;;5952:54;;5791:23;5952:54;6017:60;6032:15;6049:9;6060:16;6017:14;:60::i;:::-;5715:369;;;;:::o;700:241:5:-;758:7;781:6;777:45;;-1:-1:-1;810:1:5;803:8;;777:45;844:5;;;848:1;844;:5;:1;867:5;;;;;:10;859:56;;;;-1:-1:-1;;;859:56:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:130;1005:7;1031:39;1035:1;1038;1031:39;;;;;;;;;;;;;;;;;:3;:39::i;3658:410:1:-;-1:-1:-1;;;;;3741:21:1;;3733:67;;;;-1:-1:-1;;;3733:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3811:49;3832:7;3849:1;3853:6;3811:20;:49::i;:::-;3892:68;3915:6;3892:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3892:18:1;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;3871:18:1;;:9;:18;;;;;;;;;;:89;3985:12;;:24;;4002:6;3985:16;:24::i;:::-;3970:12;:39;4024:37;;;;;;;;4050:1;;-1:-1:-1;;;;;4024:37:1;;;;;;;;;;;;3658:410;;:::o;7621:191:6:-;-1:-1:-1;;;;;7766:15:6;;;;;;;:9;:15;;;;;;;7783:13;;;;;;;;7751:54;;7766:15;;;;7783:13;7798:6;7751:14;:54::i;:::-;7621:191;;;:::o;6090:867::-;6225:6;-1:-1:-1;;;;;6215:16:6;:6;-1:-1:-1;;;;;6215:16:6;;;:30;;;;;6244:1;6235:6;:10;6215:30;6211:740;;;-1:-1:-1;;;;;6265:20:6;;;6261:333;;-1:-1:-1;;;;;6325:22:6;;6305:17;6325:22;;;:14;:22;;;;;;;6385:13;:60;;6444:1;6385:60;;;-1:-1:-1;;;;;6401:19:6;;;;;;:11;:19;;;;;;;;-1:-1:-1;;6421:13:6;;6401:34;;;;;;;6433:1;6401:40;;6385:60;6365:80;-1:-1:-1;6463:17:6;6483:21;6365:80;6497:6;6483:13;:21::i;:::-;6463:41;;6522:57;6539:6;6547:9;6558;6569;6522:16;:57::i;:::-;6261:333;;;;-1:-1:-1;;;;;6612:20:6;;;6608:333;;-1:-1:-1;;;;;6672:22:6;;6652:17;6672:22;;;:14;:22;;;;;;;6732:13;:60;;6791:1;6732:60;;;-1:-1:-1;;;;;6748:19:6;;;;;;:11;:19;;;;;;;;-1:-1:-1;;6768:13:6;;6748:34;;;;;;;6780:1;6748:40;;6732:60;6712:80;-1:-1:-1;6810:17:6;6830:21;6712:80;6844:6;6830:13;:21::i;:::-;6810:41;;6869:57;6886:6;6894:9;6905;6916;6869:16;:57::i;:::-;6608:333;;;6090:867;;;:::o;1083:301:5:-;1199:7;1233:12;1226:5;1218:28;;;;-1:-1:-1;;;1218:28:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:9;1272:1;1268;:5;;;;;;1256:17;;1308:1;1304;:5;;;;;;1299:1;1295;:5;:15;1290:1;:20;1283:28;;;;1376:1;1083:301;-1:-1:-1;;;;1083:301:5:o;337:134::-;395:7;421:43;425:1;428;421:43;;;;;;;;;;;;;;;;;:3;:43::i;6963:569:6:-;7142:1;7127:12;:16;:86;;;;-1:-1:-1;;;;;;7147:22:6;;;;;;:11;:22;;;;;;;;-1:-1:-1;;7170:16:6;;7147:40;;;;;;;:50;7201:12;7147:66;7127:86;7123:336;;;-1:-1:-1;;;;;7229:22:6;;;;;;:11;:22;;;;;;;;-1:-1:-1;;7252:16:6;;7229:40;;;;;;;7267:1;7229:46;:57;;;7123:336;;;7356:34;;;;;;;;7367:12;7356:34;;;;;;;;;-1:-1:-1;;;;;7317:22:6;;-1:-1:-1;7317:22:6;;;:11;:22;;;;;:36;;;;;;;;:73;;;;;;;;;;;7404:25;;:14;:25;;;;;;;7432:16;;;7404:44;;7123:336;7474:51;;;;;;;;;;;;;;-1:-1:-1;;;;;7474:51:6;;;;;;;;;;;6963:569;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1334400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"approved()": "1083",
								"balanceFrom(uint256)": "infinite",
								"balanceOf(address)": "1212",
								"balanceTo(uint256)": "infinite",
								"burn(address,uint256)": "infinite",
								"checkpoints(address,uint256)": "2096",
								"decimals()": "infinite",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegates(address)": "1209",
								"getCurrentVotes(address)": "2237",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"index()": "infinite",
								"migrate(address,address)": "64630",
								"migrated()": "1072",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"numCheckpoints(address)": "1169",
								"sEXO()": "1084",
								"symbol()": "infinite",
								"totalSupply()": "1088",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "476F7665726E616E63652045584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "90"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6745584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 699,
									"end": 712,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 699,
									"end": 712,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1571,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 699,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 699,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 699,
									"end": 704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 699,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 729,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 722,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "FF00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1395,
									"end": 1418,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1418,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "5A65726F20616464726573733A204D69677261746F7200000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1387,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1463,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1475,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1512,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1512,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5A65726F20616464726573733A207345584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "70"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1485,
									"end": 1535,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1549,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1564,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "376"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7814,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2653e959be5e1306be773743da3dfb6c9940f169a4f290ca51261b87d06739264736f6c63430007050033",
									".code": [
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "587CDE1E"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "A8248768"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "A8248768"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "B4B5EA57"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "6FCFFF45"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "6FCFFF45"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "782D6FE1"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "587CDE1E"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "5C19A95C"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "66A5236C"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "19D40B08"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "2C678C64"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "2C678C64"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "19D40B08"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "2986C0E5"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "CDFEBFA"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "CDFEBFA"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "1068361F"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "6D9CEA8"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7814,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 980,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 870,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 980,
											"end": 997,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 980,
											"end": 997,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 980,
											"end": 997,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 820,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 833,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1730,
											"end": 1740,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1749,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1721,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1138,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 419,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 419,
											"end": 427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 419,
											"end": 427,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 405,
											"end": 415,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 405,
											"end": 427,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E48185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "4D69677261746564000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1928,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1976,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1983,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420617267756D656E7400000000000000000000000000000000"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1994,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "5A65726F206164647265737320666F756E640000000000000000000000000000"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "5A65726F206164647265737320666F756E640000000000000000000000000000"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2146,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2225,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 2232,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1944,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2042,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2056,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1990,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 2181,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "2986C0E500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "2986C0E5"
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3114,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1062,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2187,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2321,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2368,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2321,
											"end": 2369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 419,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 419,
											"end": 427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 419,
											"end": 427,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 405,
											"end": 415,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 405,
											"end": 427,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E48185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2690,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1243,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2476,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3485,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3593,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3593,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3591,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3577,
											"end": 3604,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3577,
											"end": 3604,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3577,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3577,
											"end": 3617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1193,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4598,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4598,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH data",
											"source": 6,
											"value": "7CE14E62375391D57A10579FED6527DBAE13153D5307491A336B206517515337"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4564,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4653,
											"end": 4673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4690,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4730,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4709,
											"end": 4765,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4746,
											"end": 4754,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4765,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4709,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4843,
											"end": 4859,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4860,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4860,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4870,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4885,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4818,
											"end": 4963,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4946,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4946,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4946,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4945,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4908,
											"end": 4952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4952,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4901,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4901,
											"end": 4952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4818,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5032,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5068,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5017,
											"end": 5103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5017,
											"end": 5103,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5084,
											"end": 5092,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5103,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5017,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5156,
											"end": 5172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5202,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5261,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5244,
											"end": 5257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5257,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5262,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5337,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5346,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5354,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 5399,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 5399,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5591,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5368,
											"end": 5591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5426,
											"end": 5434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5434,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5434,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5419,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5419,
											"end": 5434,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5419,
											"end": 5434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5591,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5368,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5485,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5519,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5519,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5566,
											"end": 5572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5576,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5455,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5182,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5628,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5644,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5644,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5644,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5644,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5650,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5617,
											"end": 5650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5650,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 5657,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 909,
											"end": 922,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 909,
											"end": 922,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2795,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 419,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 419,
											"end": 427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 419,
											"end": 427,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 405,
											"end": 415,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 405,
											"end": 427,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E48185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 397,
											"end": 445,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 397,
											"end": 445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2888,
											"end": 2893,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2882,
											"end": 2903,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2404,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2535,
											"end": 2545,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2602,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2580,
											"end": 2674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3229,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3348,
											"end": 3362,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3350,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3348,
											"end": 3362,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3323,
											"end": 3343,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1291,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 3995,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4005,
											"end": 4021,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4022,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3984,
											"end": 4028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3965,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4032,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3818,
											"end": 4039,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1616,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4197,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4283,
											"end": 4304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4275,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4381,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4390,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 2873,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2845,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 2956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3028,
											"end": 3034,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3007,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3085,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3156,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3221,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3186,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3271,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 3278,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 593,
											"end": 600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 620,
											"end": 626,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 620,
											"end": 626,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 213,
											"end": 220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 267,
											"end": 273,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 267,
											"end": 273,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 259,
											"end": 305,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3359,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3434,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3508,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3493,
											"end": 3532,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3593,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3645,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5715,
											"end": 6084,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5715,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5826,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 6006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 6006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5936,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 6006,
											"name": "PUSH",
											"source": 6,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 5952,
											"end": 6006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 6006,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6049,
											"end": 6058,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6076,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6017,
											"end": 6077,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6017,
											"end": 6077,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6017,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 6084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 6084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 6084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 6084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 6084,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 777,
											"end": 822,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 844,
											"end": 849,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 867,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 867,
											"end": 872,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 867,
											"end": 872,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 867,
											"end": 872,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 867,
											"end": 877,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 915,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3741,
											"end": 3762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3762,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH data",
											"source": 1,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3832,
											"end": 3839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3811,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3915,
											"end": 3921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH data",
											"source": 1,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3982,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 4068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7621,
											"end": 7812,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7621,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7775,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7751,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7751,
											"end": 7805,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7798,
											"end": 7804,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7751,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7751,
											"end": 7805,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7751,
											"end": 7805,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7751,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7812,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6090,
											"end": 6957,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6090,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6245,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6245,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6215,
											"end": 6245,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6241,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6245,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6245,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6215,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6951,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6211,
											"end": 6951,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6265,
											"end": 6285,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6285,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6285,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6261,
											"end": 6594,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6339,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6444,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6412,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6435,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6435,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6433,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6385,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6463,
											"end": 6480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6365,
											"end": 6445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6503,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6483,
											"end": 6504,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6483,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6483,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6556,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6567,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6578,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6522,
											"end": 6579,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6579,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6522,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6594,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6261,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6632,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6612,
											"end": 6632,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6612,
											"end": 6632,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6608,
											"end": 6941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6686,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6759,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6768,
											"end": 6781,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6782,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6782,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6781,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6748,
											"end": 6788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6788,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6712,
											"end": 6792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6830,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6886,
											"end": 6892,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6903,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 6925,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6869,
											"end": 6926,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6869,
											"end": 6926,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6869,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6957,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1310,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 395,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 428,
											"end": 429,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 421,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6963,
											"end": 7532,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6963,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7127,
											"end": 7139,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7143,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7213,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7127,
											"end": 7213,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7158,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7186,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7187,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7187,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7197,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7201,
											"end": 7213,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7213,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7213,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7127,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7240,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7251,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7268,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7269,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7269,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7267,
											"end": 7268,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7229,
											"end": 7275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7229,
											"end": 7286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7379,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7328,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7353,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7390,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7418,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7429,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7432,
											"end": 7448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7432,
											"end": 7448,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7432,
											"end": 7448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7123,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "PUSH",
											"source": 6,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7525,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7532,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "170"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"7CE14E62375391D57A10579FED6527DBAE13153D5307491A336B206517515337": "6745584f3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approved()": "19d40b08",
							"balanceFrom(uint256)": "a8248768",
							"balanceOf(address)": "70a08231",
							"balanceTo(uint256)": "66a5236c",
							"burn(address,uint256)": "9dc29fac",
							"checkpoints(address,uint256)": "0cdfebfa",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"migrate(address,address)": "1068361f",
							"migrated()": "2c678c64",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"numCheckpoints(address)": "6fcfff45",
							"sEXO()": "06d9cea8",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sEXO\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sEXO\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sEXO\",\"outputs\":[{\"internalType\":\"contract IsEXO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceFrom(uint256)\":{\"params\":{\"_amount\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"balanceTo(uint256)\":{\"params\":{\"_amount\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"burn(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_from\":\"address\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"migrate(address,address)\":{\"params\":{\"_sEXO\":\"address\",\"_staking\":\"address\"}},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_to\":\"address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceFrom(uint256)\":{\"notice\":\"converts gOHM amount to OHM\"},\"balanceTo(uint256)\":{\"notice\":\"converts OHM amount to gOHM\"},\"burn(address,uint256)\":{\"notice\":\"burn gOHM\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"index()\":{\"notice\":\"pull index from sOHM token\"},\"migrate(address,address)\":{\"notice\":\"transfer mint rights from migrator to stakingcan only be done once, at the time of contract migration\"},\"mint(address,uint256)\":{\"notice\":\"mint gOHM\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gEXO/gOHM.sol\":\"gEXO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"gEXO/Address.sol\":{\"keccak256\":\"0xc2d8595504a985f53a5db9e6220ae614a7f8b4c5c1d35f55b07e08a21e40b2b9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1b8104a932321f4f8a89ca5265b7bca5fe9f5e51ccec01470931e5014be87fc9\",\"dweb:/ipfs/Qmb2ta7fADrRuXqjot4reKg63brweMH6jWocx534huYtCc\"]},\"gEXO/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"gEXO/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"gEXO/IgOHM.sol\":{\"keccak256\":\"0x6cac4e5000a7bf84a9fb175f38a3a85fdedf2401cca7c0f0d95e9f88c8929e0d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e313687e3a347191cbb05812b8bf6832ee47019912f066d3e5c68a7b9fc8ea3f\",\"dweb:/ipfs/QmX2si86fKKkP96jmWCc3D2qbLUiT5mN9mw5nL68CUcHwW\"]},\"gEXO/IsOHM.sol\":{\"keccak256\":\"0xe6853333a2d813d8ff0afce244cb92d4e1742a26ae2955d1d2cca221bfd4e675\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a3dd7d8b7d6421a74b3794e80174f7ee486c1391013c7a557859f75e30229d2\",\"dweb:/ipfs/QmeyMJhtEkL85vGk1e9BRd2AXmfq6Kivm4nTi1NeDTkoDr\"]},\"gEXO/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]},\"gEXO/gOHM.sol\":{\"keccak256\":\"0x1e3cf0747b6979ac302a5480eaef764c8e65f423f138fa34a25d69894cf23279\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdcb973548bd5632b0c60a31b4daf685242d36e164d25541c4478d724440520b\",\"dweb:/ipfs/QmPVL2iXeNjurXdiFjqrfzkDagFMJUYE9AEknjKnE8b2CY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 362,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 368,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 370,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 372,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 374,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1277,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "sEXO",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IsEXO)1006"
							},
							{
								"astId": 1279,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "approved",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1281,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "migrated",
								"offset": 20,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 1287,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "checkpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)1275_storage))"
							},
							{
								"astId": 1291,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1295,
								"contract": "gEXO/gOHM.sol:gEXO",
								"label": "delegates",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IsEXO)1006": {
								"encoding": "inplace",
								"label": "contract IsEXO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)1275_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Checkpoint)1275_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Checkpoint)1275_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct gEXO.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)1275_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)1275_storage": {
								"encoding": "inplace",
								"label": "struct gEXO.Checkpoint",
								"members": [
									{
										"astId": 1272,
										"contract": "gEXO/gOHM.sol:gEXO",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1274,
										"contract": "gEXO/gOHM.sol:gEXO",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceFrom(uint256)": {
								"notice": "converts gOHM amount to OHM"
							},
							"balanceTo(uint256)": {
								"notice": "converts OHM amount to gOHM"
							},
							"burn(address,uint256)": {
								"notice": "burn gOHM"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"index()": {
								"notice": "pull index from sOHM token"
							},
							"migrate(address,address)": {
								"notice": "transfer mint rights from migrator to stakingcan only be done once, at the time of contract migration"
							},
							"mint(address,uint256)": {
								"notice": "mint gOHM"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"gEXO/Address.sol": {
				"ast": {
					"absolutePath": "gEXO/Address.sol",
					"exportedSymbols": {
						"Address": [
							344
						]
					},
					"id": 345,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 344,
							"linearizedBaseContracts": [
								344
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "766:367:0",
										"statements": [
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 17,
														"src": "963:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 9,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"nodeType": "VariableDeclarationStatement",
												"src": "963:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1050:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1064:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1084:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1072:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1064:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "1084:7:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "1064:4:0",
														"valueSize": 1
													}
												],
												"id": 12,
												"nodeType": "InlineAssembly",
												"src": "1041:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1118:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1118:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 16,
												"nodeType": "Return",
												"src": "1111:15:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "130:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:6:0"
									},
									"scope": 344,
									"src": "700:433:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2121:318:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 29,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2147:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		],
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2139:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 27,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2139:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2139:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2139:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 32,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2164:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2139:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 26,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2131:73:0"
											},
											{
												"assignments": [
													38,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "2293:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 37,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2293:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 45,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 39,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2311:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2311:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 41,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2311:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2292:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 47,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "2362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1139:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2069:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:43:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:0:0"
									},
									"scope": 344,
									"src": "2050:389:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3269:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 63,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 64,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3313:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 62,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															69,
															89
														],
														"referencedDeclaration": 89,
														"src": "3286:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 61,
												"id": 67,
												"nodeType": "Return",
												"src": "3279:67:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 59,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:0"
									},
									"scope": 344,
									"src": "3180:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "3722:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3762:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "3770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3779:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3739:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "3732:60:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3359:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3606:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3630:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3657:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3596:93:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3708:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3707:14:0"
									},
									"scope": 344,
									"src": "3575:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4304:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4343:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															159
														],
														"referencedDeclaration": 159,
														"src": "4321:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4321:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4314:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3805:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4225:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4225:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4252:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4191:80:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4290:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:14:0"
									},
									"scope": 344,
									"src": "4161:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "5172:380:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5198:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5190:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5190:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5190:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5190:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5190:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5222:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5182:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 136,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "5292:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 135,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "5281:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5301:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "5273:60:0"
											},
											{
												"assignments": [
													142,
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 158,
														"src": "5404:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 141,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 158,
														"src": "5418:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 143,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"id": 149,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5471:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 145,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5445:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5445:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5464:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5445:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5445:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5403:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 154,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5520:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5532:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 152,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "5493:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5493:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 157,
												"nodeType": "Return",
												"src": "5486:59:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4421:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5033:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5057:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5084:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5107:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5107:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:116:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5158:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5158:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:14:0"
									},
									"scope": 344,
									"src": "4993:559:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5740:812:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 174,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "5769:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 173,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "5758:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5758:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5778:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5750:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "5750:60:0"
											},
											{
												"assignments": [
													180,
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "5881:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "5895:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"arguments": [
														{
															"id": 187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5951:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 183,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "5922:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5922:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 185,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "5941:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5922:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5880:76:0"
											},
											{
												"condition": {
													"id": 190,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "5970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 206,
													"nodeType": "Block",
													"src": "6027:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 194,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "6111:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6111:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6111:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 204,
																"nodeType": "Block",
																"src": "6483:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 201,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 167,
																					"src": "6508:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 200,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6501:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6501:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 203,
																		"nodeType": "ExpressionStatement",
																		"src": "6501:20:0"
																	}
																]
															},
															"id": 205,
															"nodeType": "IfStatement",
															"src": "6107:429:0",
															"trueBody": {
																"id": 199,
																"nodeType": "Block",
																"src": "6134:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6318:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6340:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6369:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6363:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6363:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6344:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6412:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6416:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6408:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6408:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6429:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6401:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6401:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6401:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 182,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6369:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 182,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6416:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 198,
																		"nodeType": "InlineAssembly",
																		"src": "6309:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 207,
												"nodeType": "IfStatement",
												"src": "5966:580:0",
												"trueBody": {
													"id": 193,
													"nodeType": "Block",
													"src": "5979:42:0",
													"statements": [
														{
															"expression": {
																"id": 191,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "6000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 171,
															"id": 192,
															"nodeType": "Return",
															"src": "5993:17:0"
														}
													]
												}
											}
										]
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5650:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5676:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5676:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5589:119:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5726:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:14:0"
									},
									"scope": 344,
									"src": "5558:994:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6829:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6873:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6879:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 219,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6846:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6846:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6839:80:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6558:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6773:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6815:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:14:0"
									},
									"scope": 344,
									"src": "6729:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7268:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7297:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "7286:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7286:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7306:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7278:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7278:67:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7416:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7430:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7457:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7457:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7415:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7524:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7536:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "7497:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7497:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7490:59:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6932:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7171:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7171:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7198:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7198:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7137:93:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7254:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7254:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7253:14:0"
									},
									"scope": 344,
									"src": "7110:446:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "7832:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "7870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "7878:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7884:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 271,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															313
														],
														"referencedDeclaration": 313,
														"src": "7849:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7849:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "7842:84:0"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7562:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7765:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7781:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7764:35:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7818:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7817:14:0"
									},
									"scope": 344,
									"src": "7735:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "8274:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 292,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "8303:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 291,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "8292:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8292:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8312:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8284:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "8284:69:0"
											},
											{
												"assignments": [
													298,
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "8424:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 297,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8424:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "8438:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8438:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "8485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 301,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "8465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8465:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8423:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "8525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 308,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "8534:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 309,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "8546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "8507:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8507:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 289,
												"id": 311,
												"nodeType": "Return",
												"src": "8500:59:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "7939:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8182:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8209:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8148:93:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8260:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:14:0"
									},
									"scope": 344,
									"src": "8119:447:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "8732:596:0",
										"statements": [
											{
												"condition": {
													"id": 324,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "8746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "8803:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 328,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "8887:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8887:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8887:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 338,
																"nodeType": "Block",
																"src": "9259:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 335,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "9284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 334,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 337,
																		"nodeType": "ExpressionStatement",
																		"src": "9277:20:0"
																	}
																]
															},
															"id": 339,
															"nodeType": "IfStatement",
															"src": "8883:429:0",
															"trueBody": {
																"id": 333,
																"nodeType": "Block",
																"src": "8910:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "9094:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "9116:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "9145:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "9139:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9139:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "9120:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9188:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "9192:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9184:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9184:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9205:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9177:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9177:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9177:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 317,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9145:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 317,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9192:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 332,
																		"nodeType": "InlineAssembly",
																		"src": "9085:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "8742:580:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "8755:42:0",
													"statements": [
														{
															"expression": {
																"id": 325,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "8776:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 323,
															"id": 326,
															"nodeType": "Return",
															"src": "8769:17:0"
														}
													]
												}
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8608:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8630:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8663:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8663:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8598:97:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8718:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8717:14:0"
									},
									"scope": 344,
									"src": "8572:756:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 345,
							"src": "108:9222:0"
						}
					],
					"src": "37:9294:0"
				},
				"id": 0
			},
			"gEXO/ERC20.sol": {
				"ast": {
					"absolutePath": "gEXO/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							822
						],
						"IERC20": [
							891
						],
						"SafeMath": [
							1225
						]
					},
					"id": 823,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 346,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:1"
						},
						{
							"absolutePath": "gEXO/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 347,
							"nodeType": "ImportDirective",
							"scope": 823,
							"sourceUnit": 1226,
							"src": "72:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "gEXO/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 348,
							"nodeType": "ImportDirective",
							"scope": 823,
							"sourceUnit": 892,
							"src": "98:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 349,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 891,
										"src": "149:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$891",
											"typeString": "contract IERC20"
										}
									},
									"id": 350,
									"nodeType": "InheritanceSpecifier",
									"src": "149:6:1"
								}
							],
							"contractDependencies": [
								891
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 822,
							"linearizedBaseContracts": [
								822,
								891
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 353,
									"libraryName": {
										"id": 351,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1225,
										"src": "168:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1225",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "162:27:1",
									"typeName": {
										"id": 352,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "181:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 358,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "234:82:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 354,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "234:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 356,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "303:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 355,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "293:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "293:23:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 362,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "323:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 361,
										"keyType": {
											"id": 359,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "331:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "323:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 368,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "376:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 367,
										"keyType": {
											"id": 363,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "384:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "376:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 366,
											"keyType": {
												"id": 364,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "403:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "395:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 365,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "414:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 370,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "451:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 369,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "487:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 371,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "487:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 374,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "515:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 373,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "515:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 376,
									"mutability": "immutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "545:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 375,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "545:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "689:88:1",
										"statements": [
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "699:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 386,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "707:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "699:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "699:13:1"
											},
											{
												"expression": {
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 389,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "722:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 390,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "732:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "722:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "722:17:1"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "749:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "761:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "749:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "749:21:1"
											}
										]
									},
									"id": 398,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "607:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "607:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 379,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "667:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 381,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "667:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:91:1"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:1"
									},
									"scope": 822,
									"src": "586:191:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "835:29:1",
										"statements": [
											{
												"expression": {
													"id": 403,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 372,
													"src": "852:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 402,
												"id": 404,
												"nodeType": "Return",
												"src": "845:12:1"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "820:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "820:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:15:1"
									},
									"scope": 822,
									"src": "783:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "924:31:1",
										"statements": [
											{
												"expression": {
													"id": 411,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 374,
													"src": "941:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 410,
												"id": 412,
												"nodeType": "Return",
												"src": "934:14:1"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:2:1"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "909:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "909:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:15:1"
									},
									"scope": 822,
									"src": "870:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1017:33:1",
										"statements": [
											{
												"expression": {
													"id": 419,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 376,
													"src": "1034:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 418,
												"id": 420,
												"nodeType": "Return",
												"src": "1027:16:1"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1010:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 416,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1010:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:7:1"
									},
									"scope": 822,
									"src": "961:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "1118:36:1",
										"statements": [
											{
												"expression": {
													"id": 428,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 370,
													"src": "1135:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 429,
												"nodeType": "Return",
												"src": "1128:19:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 424,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1091:8:1"
									},
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:2:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1109:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:1"
									},
									"scope": 822,
									"src": "1056:98:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										836
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1243:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 439,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1260:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 441,
													"indexExpression": {
														"id": 440,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "1270:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1260:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 442,
												"nodeType": "Return",
												"src": "1253:25:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1216:8:1"
									},
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1179:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:17:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1234:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:9:1"
									},
									"scope": 822,
									"src": "1160:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1383:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1403:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1403:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 457,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1415:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "1426:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1393:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "1393:40:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1450:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 453,
												"id": 462,
												"nodeType": "Return",
												"src": "1443:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1359:8:1"
									},
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1309:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1328:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:35:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1377:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:1"
									},
									"scope": 822,
									"src": "1291:170:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "1565:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 474,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "1582:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 476,
														"indexExpression": {
															"id": 475,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "1594:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1582:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 478,
													"indexExpression": {
														"id": 477,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "1601:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1582:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 473,
												"id": 479,
												"nodeType": "Return",
												"src": "1575:34:1"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1538:8:1"
									},
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1486:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1501:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:32:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1556:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:9:1"
									},
									"scope": 822,
									"src": "1467:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										863
									],
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "1711:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1730:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1730:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 494,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "1742:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1751:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1721:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "1721:37:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1775:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 490,
												"id": 499,
												"nodeType": "Return",
												"src": "1768:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1687:8:1"
									},
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1639:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1656:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:33:1"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1705:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1705:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:6:1"
									},
									"scope": 822,
									"src": "1622:164:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										874
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1934:247:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1954:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "1962:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "1973:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1944:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "1944:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2012:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 521,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2032:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2032:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "2092:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2100:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 523,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "2056:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 525,
																		"indexExpression": {
																			"id": 524,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "2068:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2056:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 528,
																	"indexExpression": {
																		"expression": {
																			"id": 526,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2076:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2076:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2056:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1076,
																"src": "2056:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2056:87:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 519,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1990:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:163:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "1990:163:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 512,
												"id": 536,
												"nodeType": "Return",
												"src": "2163:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 509,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1910:8:1"
									},
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1823:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1847:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1874:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:81:1"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1928:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1928:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:6:1"
									},
									"scope": 822,
									"src": "1792:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "2281:117:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 548,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2300:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2300:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 550,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "2312:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 558,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "2358:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 551,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "2321:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 554,
																		"indexExpression": {
																			"expression": {
																				"id": 552,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "2333:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2333:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2321:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 556,
																	"indexExpression": {
																		"id": 555,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "2345:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2321:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1033,
																"src": "2321:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 547,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "2291:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "2291:79:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2387:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 546,
												"id": 563,
												"nodeType": "Return",
												"src": "2380:11:1"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2214:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2231:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:37:1"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2275:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2275:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:6:1"
									},
									"scope": 822,
									"src": "2187:211:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "2503:209:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2535:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2535:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "2559:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 585,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "2617:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2634:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 578,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "2580:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 581,
																		"indexExpression": {
																			"expression": {
																				"id": 579,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "2592:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2592:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2580:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 583,
																	"indexExpression": {
																		"id": 582,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2604:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2580:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1076,
																"src": "2580:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2580:94:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "2513:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:171:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "2513:171:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2701:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 573,
												"id": 591,
												"nodeType": "Return",
												"src": "2694:11:1"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2448:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:42:1"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2497:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2497:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:6:1"
									},
									"scope": 822,
									"src": "2404:308:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "2835:443:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "2853:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2871:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2863:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 604,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2863:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2863:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2853:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2875:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2845:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "2845:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 613,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "2933:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2954:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2946:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 614,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2946:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2946:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2933:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2958:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2925:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "2925:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3028:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "3036:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3047:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "3007:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "3007:47:1"
											},
											{
												"expression": {
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 628,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3065:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 630,
														"indexExpression": {
															"id": 629,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3075:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3065:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 635,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "3107:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3115:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 631,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3085:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 633,
																"indexExpression": {
																	"id": 632,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "3095:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3085:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1076,
															"src": "3085:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3085:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3065:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "3065:91:1"
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 640,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3166:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 642,
														"indexExpression": {
															"id": 641,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "3176:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3166:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 647,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "3214:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 643,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3189:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 645,
																"indexExpression": {
																	"id": 644,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "3199:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3189:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1033,
															"src": "3189:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3189:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3166:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "3166:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 652,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3245:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "3253:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3264:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "3236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "EmitStatement",
												"src": "3231:40:1"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2746:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2770:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2797:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:81:1"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2835:0:1"
									},
									"scope": 822,
									"src": "2718:560:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "3349:303:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "3367:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3386:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3378:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3378:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3378:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3367:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3390:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3359:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "3359:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3463:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3455:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 676,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3455:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3455:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 680,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3467:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "3476:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "3434:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3434:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3434:49:1"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 684,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "3493:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 687,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "3525:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 685,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "3508:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1033,
															"src": "3508:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3493:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "3493:39:1"
											},
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 691,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3542:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 693,
														"indexExpression": {
															"id": 692,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3552:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3542:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 698,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "3586:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 694,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3563:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 696,
																"indexExpression": {
																	"id": 695,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "3573:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3563:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1033,
															"src": "3563:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3563:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3542:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "3542:51:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3625:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3617:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 703,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3617:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3617:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 707,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3629:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "3638:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 702,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "3608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3608:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "EmitStatement",
												"src": "3603:42:1"
											}
										]
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3299:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3316:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:33:1"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:1"
									},
									"scope": 822,
									"src": "3284:368:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "3723:345:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 720,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "3741:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3760:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3752:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 721,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3752:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3752:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3741:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3764:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3733:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "3733:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "3832:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3849:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3841:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 731,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3841:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3841:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 735,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "3853:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 729,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "3811:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3811:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "3811:49:1"
											},
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 738,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3871:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 740,
														"indexExpression": {
															"id": 739,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "3881:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3871:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 745,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "3915:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3923:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 741,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3892:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 743,
																"indexExpression": {
																	"id": 742,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "3902:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3892:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1076,
															"src": "3892:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3892:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3871:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "3871:89:1"
											},
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 750,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "3970:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 753,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "4002:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 751,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "3985:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1049,
															"src": "3985:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3985:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3970:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "3970:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 758,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4033:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4050:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4042:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 759,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4042:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4042:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 763,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4054:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4024:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "EmitStatement",
												"src": "4019:42:1"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3673:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3690:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3672:33:1"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:0:1"
									},
									"scope": 822,
									"src": "3658:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "4187:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 777,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "4205:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4222:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4214:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 778,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4214:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4214:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4205:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4197:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4197:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "4197:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 787,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "4283:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4302:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4294:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 788,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4294:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4283:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4306:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4275:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4275:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "4275:68:1"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 796,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "4354:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 799,
															"indexExpression": {
																"id": 797,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "4366:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4354:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 798,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "4373:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4354:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 801,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "4384:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4354:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "4354:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 805,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4414:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "4421:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "4430:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "4405:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4405:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "EmitStatement",
												"src": "4400:37:1"
											}
										]
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "4101:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "4124:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4124:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "4149:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:78:1"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4187:0:1"
									},
									"scope": 822,
									"src": "4074:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "4572:2:1",
										"statements": []
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4489:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4512:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4533:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4479:75:1"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4572:0:1"
									},
									"scope": 822,
									"src": "4450:124:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 823,
							"src": "122:4454:1"
						}
					],
					"src": "46:4531:1"
				},
				"id": 1
			},
			"gEXO/IERC20.sol": {
				"ast": {
					"absolutePath": "gEXO/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							891
						]
					},
					"id": 892,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 824,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 891,
							"linearizedBaseContracts": [
								891
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:2"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "132:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:2"
									},
									"scope": 891,
									"src": "86:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "166:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:17:2"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "206:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:2"
									},
									"scope": 891,
									"src": "147:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "239:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:35:2"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "292:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:2"
									},
									"scope": 891,
									"src": "221:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "323:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "338:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:2"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "378:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:2"
									},
									"scope": 891,
									"src": "304:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "410:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "427:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:33:2"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "461:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:6:2"
									},
									"scope": 891,
									"src": "393:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "555:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:81:2"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "594:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:2"
									},
									"scope": 891,
									"src": "473:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 882,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "621:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "643:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:57:2"
									},
									"src": "606:72:2"
								},
								{
									"anonymous": false,
									"id": 890,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "699:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "722:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "747:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:63:2"
									},
									"src": "684:78:2"
								}
							],
							"scope": 892,
							"src": "63:701:2"
						}
					],
					"src": "37:728:2"
				},
				"id": 2
			},
			"gEXO/IgOHM.sol": {
				"ast": {
					"absolutePath": "gEXO/IgOHM.sol",
					"exportedSymbols": {
						"IERC20": [
							891
						],
						"IgEXO": [
							937
						]
					},
					"id": 938,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 893,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:3"
						},
						{
							"absolutePath": "gEXO/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 894,
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 892,
							"src": "63:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 895,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 891,
										"src": "106:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$891",
											"typeString": "contract IERC20"
										}
									},
									"id": 896,
									"nodeType": "InheritanceSpecifier",
									"src": "106:6:3"
								}
							],
							"contractDependencies": [
								891
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 937,
							"linearizedBaseContracts": [
								937,
								891
							],
							"name": "IgEXO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "133:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "146:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:30:3"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:3"
									},
									"scope": 937,
									"src": "119:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "192:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "207:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:32:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:3"
									},
									"scope": 937,
									"src": "178:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2986c0e5",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:2:3"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "279:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:9:3"
									},
									"scope": 937,
									"src": "239:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8248768",
									"id": 922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "315:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:17:3"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "355:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:9:3"
									},
									"scope": 937,
									"src": "294:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66a5236c",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "389:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:3"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "429:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:9:3"
									},
									"scope": 937,
									"src": "370:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1068361f",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_staking",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "461:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_sOHM",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "479:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:33:3"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:0:3"
									},
									"scope": 937,
									"src": "444:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 938,
							"src": "87:418:3"
						}
					],
					"src": "37:469:3"
				},
				"id": 3
			},
			"gEXO/IsOHM.sol": {
				"ast": {
					"absolutePath": "gEXO/IsOHM.sol",
					"exportedSymbols": {
						"IERC20": [
							891
						],
						"IsEXO": [
							1006
						]
					},
					"id": 1007,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 939,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:4"
						},
						{
							"absolutePath": "gEXO/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 940,
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 892,
							"src": "63:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 941,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 891,
										"src": "106:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$891",
											"typeString": "contract IERC20"
										}
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "106:6:4"
								}
							],
							"contractDependencies": [
								891
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1006,
							"linearizedBaseContracts": [
								1006,
								891
							],
							"name": "IsEXO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "058ecdb4",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "ohmProfit_",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "135:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "155:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:36:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "189:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:4"
									},
									"scope": 1006,
									"src": "119:79:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9358928b",
									"id": 956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:4"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "256:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:9:4"
									},
									"scope": 1006,
									"src": "204:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1bd39674",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "295:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:16:4"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "334:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:4"
									},
									"scope": 1006,
									"src": "271:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7965d56d",
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "373:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:14:4"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "410:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:9:4"
									},
									"scope": 1006,
									"src": "349:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2986c0e5",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:4"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "465:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:4"
									},
									"scope": 1006,
									"src": "425:49:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095be818",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "toG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "493:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:16:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "532:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:9:4"
									},
									"scope": 1006,
									"src": "480:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8fbd533",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fromG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "562:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:16:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "601:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:9:4"
									},
									"scope": 1006,
									"src": "547:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae5c6cd3",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeDebt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "645:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "debtor",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "669:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "693:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "693:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:72:4"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "716:0:4"
									},
									"scope": 1006,
									"src": "616:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4ef1c4c",
									"id": 1005,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "debtBalances",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:18:4"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "786:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:9:4"
									},
									"scope": 1006,
									"src": "723:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1007,
							"src": "87:710:4"
						}
					],
					"src": "37:761:4"
				},
				"id": 4
			},
			"gEXO/SafeMath.sol": {
				"ast": {
					"absolutePath": "gEXO/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1225
						]
					},
					"id": 1226,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1008,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1225,
							"linearizedBaseContracts": [
								1225
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "222:109:5",
										"statements": [
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "232:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "232:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1019,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "244:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1020,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "248:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "244:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "232:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "267:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1025,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "272:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "267:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "275:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "259:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "259:46:5"
											},
											{
												"expression": {
													"id": 1030,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1018,
													"src": "323:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1016,
												"id": 1031,
												"nodeType": "Return",
												"src": "316:8:5"
											}
										]
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "168:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "179:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:22:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "213:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:9:5"
									},
									"scope": 1225,
									"src": "155:176:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "404:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "425:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1044,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "428:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "431:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1042,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1049,
															1076
														],
														"referencedDeclaration": 1076,
														"src": "421:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1047,
												"nodeType": "Return",
												"src": "414:50:5"
											}
										]
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "350:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "361:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:22:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "395:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:9:5"
									},
									"scope": 1225,
									"src": "337:134:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "602:92:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "620:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1062,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "625:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "620:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1064,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "628:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "612:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "612:29:5"
											},
											{
												"assignments": [
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1075,
														"src": "651:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "651:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1072,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "663:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1070,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "667:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "651:17:5"
											},
											{
												"expression": {
													"id": 1073,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1068,
													"src": "686:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1074,
												"nodeType": "Return",
												"src": "679:8:5"
											}
										]
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "499:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "518:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "537:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:80:5"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "593:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:5"
									},
									"scope": 1225,
									"src": "477:217:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "767:174:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1085,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "781:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "781:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "777:45:5",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "789:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "810:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1084,
															"id": 1089,
															"nodeType": "Return",
															"src": "803:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1109,
														"src": "832:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "832:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "844:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1095,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "848:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "844:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "832:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "867:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1100,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "871:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "867:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1102,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "876:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "867:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "879:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "859:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "859:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "859:56:5"
											},
											{
												"expression": {
													"id": 1107,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1093,
													"src": "933:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1108,
												"nodeType": "Return",
												"src": "926:8:5"
											}
										]
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "713:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "724:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:22:5"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "758:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:9:5"
									},
									"scope": 1225,
									"src": "700:241:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "1014:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "1035:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1121,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "1038:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1041:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1119,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1126,
															1166
														],
														"referencedDeclaration": 1166,
														"src": "1031:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1118,
												"id": 1124,
												"nodeType": "Return",
												"src": "1024:46:5"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "960:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "971:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:22:5"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1005:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:5"
									},
									"scope": 1225,
									"src": "947:130:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "1208:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "1226:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1230:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "1233:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1218:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "1218:28:5"
											},
											{
												"assignments": [
													1145
												],
												"declarations": [
													{
														"constant": false,
														"id": 1145,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "1256:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1256:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1149,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "1268:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "1272:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1256:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "1290:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1152,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "1295:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1153,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "1299:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1295:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1155,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "1304:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 1156,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "1308:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1304:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1303:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1295:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1290:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1150,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1283:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1283:28:5"
											},
											{
												"expression": {
													"id": 1163,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "1376:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1164,
												"nodeType": "Return",
												"src": "1369:8:5"
											}
										]
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1105:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1124:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1143:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1143:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:80:5"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1199:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:9:5"
									},
									"scope": 1225,
									"src": "1083:301:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "1497:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1173,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1511:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1511:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1213,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "1713:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1713:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1221,
													"nodeType": "IfStatement",
													"src": "1709:42:5",
													"trueBody": {
														"id": 1220,
														"nodeType": "Block",
														"src": "1721:30:5",
														"statements": [
															{
																"expression": {
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1216,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "1735:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1739:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1735:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1219,
																"nodeType": "ExpressionStatement",
																"src": "1735:5:5"
															}
														]
													}
												},
												"id": 1222,
												"nodeType": "IfStatement",
												"src": "1507:244:5",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "1518:185:5",
													"statements": [
														{
															"expression": {
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1176,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "1532:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1177,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "1536:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1532:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "1532:5:5"
														},
														{
															"assignments": [
																1181
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1181,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 1212,
																	"src": "1551:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1180,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1551:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1189,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1184,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "1571:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1574:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 1183,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1126,
																				1166
																			],
																			"referencedDeclaration": 1126,
																			"src": "1567:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1567:9:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1578:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1182,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "1563:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1563:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1551:29:5"
														},
														{
															"body": {
																"id": 1210,
																"nodeType": "Block",
																"src": "1608:85:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1193,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1171,
																				"src": "1626:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1194,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "1630:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1626:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1196,
																		"nodeType": "ExpressionStatement",
																		"src": "1626:5:5"
																	},
																	{
																		"expression": {
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1197,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "1649:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1201,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1168,
																										"src": "1665:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1202,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1181,
																										"src": "1668:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1200,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										1126,
																										1166
																									],
																									"referencedDeclaration": 1126,
																									"src": "1661:3:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1203,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1661:9:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1204,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1181,
																								"src": "1672:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1199,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1033,
																							"src": "1657:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1205,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1657:17:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 1206,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1676:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 1198,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1126,
																						1166
																					],
																					"referencedDeclaration": 1126,
																					"src": "1653:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1653:25:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1649:29:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1209,
																		"nodeType": "ExpressionStatement",
																		"src": "1649:29:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "1601:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1191,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "1605:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1211,
															"nodeType": "WhileStatement",
															"src": "1594:99:5"
														}
													]
												}
											}
										]
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "1452:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:11:5"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "1486:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:11:5"
									},
									"scope": 1225,
									"src": "1437:320:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1226,
							"src": "132:1627:5"
						}
					],
					"src": "37:1723:5"
				},
				"id": 5
			},
			"gEXO/gOHM.sol": {
				"ast": {
					"absolutePath": "gEXO/gOHM.sol",
					"exportedSymbols": {
						"Address": [
							344
						],
						"ERC20": [
							822
						],
						"IERC20": [
							891
						],
						"IgEXO": [
							937
						],
						"IsEXO": [
							1006
						],
						"SafeMath": [
							1225
						],
						"gEXO": [
							1896
						]
					},
					"id": 1897,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1227,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "gEXO/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1228,
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 1226,
							"src": "57:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "gEXO/Address.sol",
							"file": "./Address.sol",
							"id": 1229,
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 345,
							"src": "82:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "gEXO/IsOHM.sol",
							"file": "./IsOHM.sol",
							"id": 1230,
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 1007,
							"src": "107:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "gEXO/IgOHM.sol",
							"file": "./IgOHM.sol",
							"id": 1231,
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 938,
							"src": "129:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "gEXO/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1232,
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 823,
							"src": "151:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1233,
										"name": "IgEXO",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 937,
										"src": "191:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IgEXO_$937",
											"typeString": "contract IgEXO"
										}
									},
									"id": 1234,
									"nodeType": "InheritanceSpecifier",
									"src": "191:5:6"
								},
								{
									"baseName": {
										"id": 1235,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 822,
										"src": "198:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$822",
											"typeString": "contract ERC20"
										}
									},
									"id": 1236,
									"nodeType": "InheritanceSpecifier",
									"src": "198:5:6"
								}
							],
							"contractDependencies": [
								822,
								891,
								937
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1896,
							"linearizedBaseContracts": [
								1896,
								822,
								937,
								891
							],
							"name": "gEXO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1239,
									"libraryName": {
										"id": 1237,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 344,
										"src": "262:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$344",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 1238,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1242,
									"libraryName": {
										"id": 1240,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1225,
										"src": "293:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1225",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "287:27:6",
									"typeName": {
										"id": 1241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "387:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1245,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "405:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "405:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1247,
																"name": "approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "419:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "405:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920617070726f766564",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "429:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ff10ffb8da60a29525c4da29c56443e7298e9a624fe98c8feefdc7fc1d8f51",
																"typeString": "literal_string \"Only approved\""
															},
															"value": "Only approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ff10ffb8da60a29525c4da29c56443e7298e9a624fe98c8feefdc7fc1d8f51",
																"typeString": "literal_string \"Only approved\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "397:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "397:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "397:48:6"
											},
											{
												"id": 1252,
												"nodeType": "PlaceholderStatement",
												"src": "455:1:6"
											}
										]
									},
									"id": 1254,
									"name": "onlyApproved",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:2:6"
									},
									"src": "363:100:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1262,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "531:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "558:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "588:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:85:6"
									},
									"src": "509:107:6"
								},
								{
									"anonymous": false,
									"id": 1270,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "648:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "674:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "699:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:71:6"
									},
									"src": "621:98:6"
								},
								{
									"canonicalName": "gEXO.Checkpoint",
									"id": 1275,
									"members": [
										{
											"constant": false,
											"id": 1272,
											"mutability": "mutable",
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "878:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1271,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "878:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1274,
											"mutability": "mutable",
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "905:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1273,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "905:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1896,
									"src": "850:75:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06d9cea8",
									"id": 1277,
									"mutability": "mutable",
									"name": "sEXO",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "980:17:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IsEXO_$1006",
										"typeString": "contract IsEXO"
									},
									"typeName": {
										"id": 1276,
										"name": "IsEXO",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1006,
										"src": "980:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IsEXO_$1006",
											"typeString": "contract IsEXO"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19d40b08",
									"id": 1279,
									"mutability": "mutable",
									"name": "approved",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "1003:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1278,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1003:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c678c64",
									"id": 1281,
									"mutability": "mutable",
									"name": "migrated",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "1042:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1280,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1042:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cdfebfa",
									"id": 1287,
									"mutability": "mutable",
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "1069:69:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint))"
									},
									"typeName": {
										"id": 1286,
										"keyType": {
											"id": 1282,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1077:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1069:50:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint))"
										},
										"valueType": {
											"id": 1285,
											"keyType": {
												"id": 1283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1096:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1088:30:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
												"typeString": "mapping(uint256 => struct gEXO.Checkpoint)"
											},
											"valueType": {
												"id": 1284,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1275,
												"src": "1107:10:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$1275_storage_ptr",
													"typeString": "struct gEXO.Checkpoint"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6fcfff45",
									"id": 1291,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "1144:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1290,
										"keyType": {
											"id": 1288,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1152:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1144:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1289,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1163:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "587cde1e",
									"id": 1295,
									"mutability": "mutable",
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "1199:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1294,
										"keyType": {
											"id": 1292,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1293,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1218:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "1377:194:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "_migrator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "1395:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1408:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1408:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1408:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1395:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a204d69677261746f72",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1420:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ca9789299c8c5101c0881623fa524f16013e50d09e76e38991c8eb796cde474",
																"typeString": "literal_string \"Zero address: Migrator\""
															},
															"value": "Zero address: Migrator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ca9789299c8c5101c0881623fa524f16013e50d09e76e38991c8eb796cde474",
																"typeString": "literal_string \"Zero address: Migrator\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1387:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "1387:58:6"
											},
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1317,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "1455:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "1466:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1455:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "1455:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "_sEXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "1493:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1510:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1502:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1323,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1502:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1493:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a207345584f",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1514:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e82f983e6d63c3d2f7987096a9ed25616c14957a9124aa7a6b3ff376fd76613",
																"typeString": "literal_string \"Zero address: sEXO\""
															},
															"value": "Zero address: sEXO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e82f983e6d63c3d2f7987096a9ed25616c14957a9124aa7a6b3ff376fd76613",
																"typeString": "literal_string \"Zero address: sEXO\""
															}
														],
														"id": 1321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1485:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1485:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "1485:50:6"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1331,
														"name": "sEXO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "1545:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsEXO_$1006",
															"typeString": "contract IsEXO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1333,
																"name": "_sEXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "1558:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1332,
															"name": "IsEXO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "1552:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IsEXO_$1006_$",
																"typeString": "type(contract IsEXO)"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1552:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsEXO_$1006",
															"typeString": "contract IsEXO"
														}
													},
													"src": "1545:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IsEXO_$1006",
														"typeString": "contract IsEXO"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "1545:19:6"
											}
										]
									},
									"id": 1338,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "476f7665726e616e63652045584f",
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1347:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_105d0f7097f9437f8c4b3d364165f6ea9ad809398bae199781feb1b9f19dc9ea",
														"typeString": "literal_string \"Governance EXO\""
													},
													"value": "Governance EXO"
												},
												{
													"hexValue": "6745584f",
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1365:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_77f090dac59b54da1b0a96e11a54fe71a109a6c74c809ad941cce2e88fd8a75b",
														"typeString": "literal_string \"gEXO\""
													},
													"value": "gEXO"
												},
												{
													"hexValue": "3138",
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1373:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												}
											],
											"id": 1305,
											"modifierName": {
												"id": 1301,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 822,
												"src": "1341:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$822_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1341:35:6"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "_migrator",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1307:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_sEXO",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1326:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1306:34:6"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:6"
									},
									"scope": 1896,
									"src": "1295:276:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "1918:314:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1936:9:6",
															"subExpression": {
																"id": 1350,
																"name": "migrated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "1937:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69677261746564",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1947:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a23ad0b3e6d6da716bd56740546067dd07bfa97fecbe471c0b1c3c3511fd8f8",
																"typeString": "literal_string \"Migrated\""
															},
															"value": "Migrated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a23ad0b3e6d6da716bd56740546067dd07bfa97fecbe471c0b1c3c3511fd8f8",
																"typeString": "literal_string \"Migrated\""
															}
														],
														"id": 1349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1928:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1928:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "1928:30:6"
											},
											{
												"expression": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1355,
														"name": "migrated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "1968:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1979:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1968:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "1968:15:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1360,
																"name": "_staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "2002:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1361,
																"name": "approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "2014:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2002:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420617267756d656e74",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2024:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1192e0f5cd7d0bf2a1799e1224fc2feb220f2de0cf176153b2333fca971efc4",
																"typeString": "literal_string \"Invalid argument\""
															},
															"value": "Invalid argument"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1192e0f5cd7d0bf2a1799e1224fc2feb220f2de0cf176153b2333fca971efc4",
																"typeString": "literal_string \"Invalid argument\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1994:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1994:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "1994:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1367,
																"name": "_staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "2061:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2061:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206164647265737320666f756e64",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															},
															"value": "Zero address found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2053:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "2053:53:6"
											},
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "2116:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1377,
														"name": "_staking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2127:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2116:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "2116:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1381,
																"name": "_sEXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "2154:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2171:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2163:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1382,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2163:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2163:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2154:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206164647265737320666f756e64",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2175:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															},
															"value": "Zero address found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60358ec3fe893faf5f4d43b9e870ee9850732466bdae49b9352ebabed561effc",
																"typeString": "literal_string \"Zero address found\""
															}
														],
														"id": 1380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2146:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "2146:50:6"
											},
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1390,
														"name": "sEXO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2206:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsEXO_$1006",
															"typeString": "contract IsEXO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1392,
																"name": "_sEXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "2219:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1391,
															"name": "IsEXO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "2213:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IsEXO_$1006_$",
																"typeString": "type(contract IsEXO)"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2213:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IsEXO_$1006",
															"typeString": "contract IsEXO"
														}
													},
													"src": "2206:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IsEXO_$1006",
														"typeString": "contract IsEXO"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "2206:19:6"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "1629:203:6",
										"text": " @notice transfer mint rights from migrator to staking\n @notice can only be done once, at the time of contract migration\n @param _staking address\n @param _sEXO address"
									},
									"functionSelector": "1068361f",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"modifierName": {
												"id": 1346,
												"name": "onlyApproved",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1254,
												"src": "1905:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1905:12:6"
										}
									],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1896:8:6"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "_staking",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1854:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "_sEXO",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1872:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1853:33:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1918:0:6"
									},
									"scope": 1896,
									"src": "1837:395:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "2420:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2447:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2447:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1406,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "2459:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1403,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "2437:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2437:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1402,
												"id": 1408,
												"nodeType": "Return",
												"src": "2430:39:6"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2238:131:6",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2392:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:19:6"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:0:6"
									},
									"scope": 1896,
									"src": "2374:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										903
									],
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2654:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1422,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2670:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "2675:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1421,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "2664:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "2664:19:6"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "2482:92:6",
										"text": "@notice mint gOHM\n@param _to address\n@param _amount uint"
									},
									"functionSelector": "40c10f19",
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1419,
											"modifierName": {
												"id": 1418,
												"name": "onlyApproved",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1254,
												"src": "2641:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2641:12:6"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1417,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:6"
									},
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2593:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2606:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2606:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2592:30:6"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:0:6"
									},
									"scope": 1896,
									"src": "2579:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										910
									],
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "2872:38:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1439,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "2888:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1440,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "2895:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1438,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "2882:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2882:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "2882:21:6"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2696:94:6",
										"text": "@notice burn gOHM\n@param _from address\n@param _amount uint"
									},
									"functionSelector": "9dc29fac",
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1436,
											"modifierName": {
												"id": 1435,
												"name": "onlyApproved",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1254,
												"src": "2859:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2859:12:6"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1434,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2850:8:6"
									},
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "2809:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2809:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "2824:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2808:32:6"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2872:0:6"
									},
									"scope": 1896,
									"src": "2795:115:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										915
									],
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "3078:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1451,
															"name": "sEXO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "3095:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IsEXO_$1006",
																"typeString": "contract IsEXO"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "index",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 975,
														"src": "3095:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3095:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1450,
												"id": 1454,
												"nodeType": "Return",
												"src": "3088:19:6"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "2964:53:6",
										"text": " @notice pull index from sOHM token"
									},
									"functionSelector": "2986c0e5",
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3051:8:6"
									},
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3036:2:6"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:6"
									},
									"scope": 1896,
									"src": "3022:92:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										922
									],
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "3306:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3348:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1472,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "3352:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3352:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "3348:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1467,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1456,
																		"src": "3335:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3335:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1465,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "3323:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1110,
																"src": "3323:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3323:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1126,
														"src": "3323:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3323:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1464,
												"id": 1476,
												"nodeType": "Return",
												"src": "3316:47:6"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "3120:104:6",
										"text": "@notice converts gOHM amount to OHM\n@param _amount uint\n@return uint"
									},
									"functionSelector": "a8248768",
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3279:8:6"
									},
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3250:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3250:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3249:17:6"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3297:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:9:6"
									},
									"scope": 1896,
									"src": "3229:141:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "3560:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1495,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "3609:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3609:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3589:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1490,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "3593:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3593:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3589:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1487,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "3577:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1110,
																"src": "3577:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3577:27:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1126,
														"src": "3577:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3577:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1498,
												"nodeType": "Return",
												"src": "3570:47:6"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "3376:104:6",
										"text": "@notice converts OHM amount to gOHM\n@param _amount uint\n@return uint"
									},
									"functionSelector": "66a5236c",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceTo",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1483,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3533:8:6"
									},
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "3504:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:17:6"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "3551:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:9:6"
									},
									"scope": 1896,
									"src": "3485:139:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "3892:147:6",
										"statements": [
											{
												"assignments": [
													1509
												],
												"declarations": [
													{
														"constant": false,
														"id": 1509,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "3902:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3902:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1513,
												"initialValue": {
													"baseExpression": {
														"id": 1510,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "3925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1512,
													"indexExpression": {
														"id": 1511,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "3940:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3925:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3902:46:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1514,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "3965:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3980:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3965:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4031:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3965:67:6",
													"trueExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1517,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "3984:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																	}
																},
																"id": 1519,
																"indexExpression": {
																	"id": 1518,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "3996:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3984:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																	"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																}
															},
															"id": 1523,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1520,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "4005:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4005:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3984:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																"typeString": "struct gEXO.Checkpoint storage ref"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1274,
														"src": "3984:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1527,
												"nodeType": "Return",
												"src": "3958:74:6"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "3630:183:6",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "3843:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3842:17:6"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "3883:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3883:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:9:6"
									},
									"scope": 1896,
									"src": "3818:221:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "4554:1103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1540,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "4572:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1541,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "4586:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "4586:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4572:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6745584f3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4600:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ce14e62375391d57a10579fed6527dbae13153d5307491a336b206517515337",
																"typeString": "literal_string \"gEXO::getPriorVotes: not yet determined\""
															},
															"value": "gEXO::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ce14e62375391d57a10579fed6527dbae13153d5307491a336b206517515337",
																"typeString": "literal_string \"gEXO::getPriorVotes: not yet determined\""
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4564:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4564:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "4564:78:6"
											},
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "4653:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4653:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"baseExpression": {
														"id": 1549,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "4676:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1551,
													"indexExpression": {
														"id": 1550,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "4691:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4676:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4653:46:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "4713:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4729:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4713:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "4709:56:6",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "4732:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4753:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1538,
															"id": 1557,
															"nodeType": "Return",
															"src": "4746:8:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1560,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "4822:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																	}
																},
																"id": 1562,
																"indexExpression": {
																	"id": 1561,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "4834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4822:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																	"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																}
															},
															"id": 1566,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1563,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1548,
																	"src": "4843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4858:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4843:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4822:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																"typeString": "struct gEXO.Checkpoint storage ref"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1272,
														"src": "4822:48:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1568,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "4874:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4822:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"nodeType": "IfStatement",
												"src": "4818:145:6",
												"trueBody": {
													"id": 1579,
													"nodeType": "Block",
													"src": "4887:76:6",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1570,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "4908:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																			}
																		},
																		"id": 1572,
																		"indexExpression": {
																			"id": 1571,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "4920:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4908:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																			"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																		}
																	},
																	"id": 1576,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1573,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "4929:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4944:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4929:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4908:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																		"typeString": "struct gEXO.Checkpoint storage ref"
																	}
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1274,
																"src": "4908:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1538,
															"id": 1578,
															"nodeType": "Return",
															"src": "4901:51:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1581,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "5021:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																	}
																},
																"id": 1583,
																"indexExpression": {
																	"id": 1582,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "5033:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5021:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																	"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																}
															},
															"id": 1585,
															"indexExpression": {
																"hexValue": "30",
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5042:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5021:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																"typeString": "struct gEXO.Checkpoint storage ref"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1272,
														"src": "5021:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1587,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "5057:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5021:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "5017:86:6",
												"trueBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "5070:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5091:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1538,
															"id": 1590,
															"nodeType": "Return",
															"src": "5084:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "5113:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5113:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"hexValue": "30",
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5129:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5113:17:6"
											},
											{
												"assignments": [
													1598
												],
												"declarations": [
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "5140:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5140:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1599,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "5156:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5171:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5156:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5140:32:6"
											},
											{
												"body": {
													"id": 1651,
													"nodeType": "Block",
													"src": "5204:397:6",
													"statements": [
														{
															"assignments": [
																1607
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1607,
																	"mutability": "mutable",
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 1651,
																	"src": "5218:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1606,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5218:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1616,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1608,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "5235:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1609,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1598,
																					"src": "5244:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1610,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1594,
																					"src": "5252:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5244:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1612,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5243:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5261:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5243:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5235:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5218:44:6"
														},
														{
															"assignments": [
																1618
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1618,
																	"mutability": "mutable",
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 1651,
																	"src": "5303:20:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1275_memory_ptr",
																		"typeString": "struct gEXO.Checkpoint"
																	},
																	"typeName": {
																		"id": 1617,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1275,
																		"src": "5303:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1275_storage_ptr",
																			"typeString": "struct gEXO.Checkpoint"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1624,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1619,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5326:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																		}
																	},
																	"id": 1621,
																	"indexExpression": {
																		"id": 1620,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "5338:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5326:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																		"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																	}
																},
																"id": 1623,
																"indexExpression": {
																	"id": 1622,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "5347:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5326:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																	"typeString": "struct gEXO.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5303:51:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1625,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "5372:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1275_memory_ptr",
																			"typeString": "struct gEXO.Checkpoint memory"
																		}
																	},
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1272,
																	"src": "5372:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1627,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "5388:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5372:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1633,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "5459:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$1275_memory_ptr",
																				"typeString": "struct gEXO.Checkpoint memory"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1272,
																		"src": "5459:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1635,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "5474:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5459:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1648,
																	"nodeType": "Block",
																	"src": "5540:51:6",
																	"statements": [
																		{
																			"expression": {
																				"id": 1646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1642,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1598,
																					"src": "5558:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1645,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1643,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1607,
																						"src": "5566:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1644,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5575:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5566:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5558:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1647,
																			"nodeType": "ExpressionStatement",
																			"src": "5558:18:6"
																		}
																	]
																},
																"id": 1649,
																"nodeType": "IfStatement",
																"src": "5455:136:6",
																"trueBody": {
																	"id": 1641,
																	"nodeType": "Block",
																	"src": "5487:47:6",
																	"statements": [
																		{
																			"expression": {
																				"id": 1639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1637,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1594,
																					"src": "5505:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 1638,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1607,
																					"src": "5513:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5505:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1640,
																			"nodeType": "ExpressionStatement",
																			"src": "5505:14:6"
																		}
																	]
																}
															},
															"id": 1650,
															"nodeType": "IfStatement",
															"src": "5368:223:6",
															"trueBody": {
																"id": 1632,
																"nodeType": "Block",
																"src": "5401:48:6",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"id": 1629,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1618,
																				"src": "5426:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$1275_memory_ptr",
																					"typeString": "struct gEXO.Checkpoint memory"
																				}
																			},
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1274,
																			"src": "5426:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1538,
																		"id": 1631,
																		"nodeType": "Return",
																		"src": "5419:15:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1603,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "5189:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1604,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "5197:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5189:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "WhileStatement",
												"src": "5182:419:6"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1653,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "5617:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																}
															},
															"id": 1655,
															"indexExpression": {
																"id": 1654,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "5629:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5617:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
															}
														},
														"id": 1657,
														"indexExpression": {
															"id": 1656,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "5638:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5617:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
															"typeString": "struct gEXO.Checkpoint storage ref"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1274,
													"src": "5617:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1659,
												"nodeType": "Return",
												"src": "5610:40:6"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "4045:411:6",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4484:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4484:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4501:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4483:38:6"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4545:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4544:9:6"
									},
									"scope": 1896,
									"src": "4461:1196:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "5781:303:6",
										"statements": [
											{
												"assignments": [
													1669
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 1698,
														"src": "5791:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1668,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5791:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"initialValue": {
													"baseExpression": {
														"id": 1670,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "5817:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1672,
													"indexExpression": {
														"id": 1671,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "5827:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5817:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5791:46:6"
											},
											{
												"assignments": [
													1675
												],
												"declarations": [
													{
														"constant": false,
														"id": 1675,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1698,
														"src": "5847:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5847:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1679,
												"initialValue": {
													"baseExpression": {
														"id": 1676,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5874:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1678,
													"indexExpression": {
														"id": 1677,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "5884:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5874:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5847:47:6"
											},
											{
												"expression": {
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1680,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "5904:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1682,
														"indexExpression": {
															"id": 1681,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "5914:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5904:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1683,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "5927:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5904:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "5904:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1687,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "5968:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1688,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "5979:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1689,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "5996:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1686,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "5952:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5952:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1691,
												"nodeType": "EmitStatement",
												"src": "5947:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1693,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "6032:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1694,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "6049:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1695,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "6060:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1692,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "6017:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6017:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "6017:60:6"
											}
										]
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "5734:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "5753:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5753:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5733:38:6"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5781:0:6"
									},
									"scope": 1896,
									"src": "5715:369:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "6201:756:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1708,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "6215:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1709,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "6225:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6215:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1711,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "6235:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6244:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6235:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6215:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "6211:740:6",
												"trueBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "6247:704:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1715,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "6265:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6283:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6275:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1716,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6275:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6275:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "6265:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1758,
															"nodeType": "IfStatement",
															"src": "6261:333:6",
															"trueBody": {
																"id": 1757,
																"nodeType": "Block",
																"src": "6287:307:6",
																"statements": [
																	{
																		"assignments": [
																			1722
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1722,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1757,
																				"src": "6305:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1721,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6305:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1726,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1723,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "6325:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1725,
																			"indexExpression": {
																				"id": 1724,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1701,
																				"src": "6340:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6325:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6305:42:6"
																	},
																	{
																		"assignments": [
																			1728
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1728,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1757,
																				"src": "6365:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1727,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6365:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1742,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1729,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1722,
																					"src": "6385:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1730,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6397:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "6385:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 1740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6444:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "6385:60:6",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1732,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1287,
																							"src": "6401:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																								"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																							}
																						},
																						"id": 1734,
																						"indexExpression": {
																							"id": 1733,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1701,
																							"src": "6413:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6401:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																							"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																						}
																					},
																					"id": 1738,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1737,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1735,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1722,
																							"src": "6421:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1736,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6433:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6421:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6401:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																						"typeString": "struct gEXO.Checkpoint storage ref"
																					}
																				},
																				"id": 1739,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1274,
																				"src": "6401:40:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6365:80:6"
																	},
																	{
																		"assignments": [
																			1744
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1744,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1757,
																				"src": "6463:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1743,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6463:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1749,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1747,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "6497:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1745,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1728,
																					"src": "6483:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1049,
																				"src": "6483:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6483:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6463:41:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1751,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1701,
																					"src": "6539:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1752,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1722,
																					"src": "6547:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1753,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1728,
																					"src": "6558:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1754,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "6569:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1750,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "6522:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6522:57:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1756,
																		"nodeType": "ExpressionStatement",
																		"src": "6522:57:6"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1759,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "6612:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6630:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6622:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1760,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6622:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6622:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "6612:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1802,
															"nodeType": "IfStatement",
															"src": "6608:333:6",
															"trueBody": {
																"id": 1801,
																"nodeType": "Block",
																"src": "6634:307:6",
																"statements": [
																	{
																		"assignments": [
																			1766
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1766,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1801,
																				"src": "6652:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1765,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6652:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1770,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1767,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "6672:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1769,
																			"indexExpression": {
																				"id": 1768,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1703,
																				"src": "6687:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6672:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6652:42:6"
																	},
																	{
																		"assignments": [
																			1772
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1772,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1801,
																				"src": "6712:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1771,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6712:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1786,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1773,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "6732:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6744:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "6732:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 1784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6791:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "6732:60:6",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1776,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1287,
																							"src": "6748:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																								"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																							}
																						},
																						"id": 1778,
																						"indexExpression": {
																							"id": 1777,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1703,
																							"src": "6760:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6748:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																							"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																						}
																					},
																					"id": 1782,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1781,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1779,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1766,
																							"src": "6768:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1780,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6780:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6768:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6748:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																						"typeString": "struct gEXO.Checkpoint storage ref"
																					}
																				},
																				"id": 1783,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1274,
																				"src": "6748:40:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6712:80:6"
																	},
																	{
																		"assignments": [
																			1788
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1788,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1801,
																				"src": "6810:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1787,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6810:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1793,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1791,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "6844:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1789,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1772,
																					"src": "6830:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1033,
																				"src": "6830:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6830:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6810:41:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1795,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1703,
																					"src": "6886:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1796,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "6894:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1797,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1772,
																					"src": "6905:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1798,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1788,
																					"src": "6916:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1794,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "6869:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6869:57:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1800,
																		"nodeType": "ExpressionStatement",
																		"src": "6869:57:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "6123:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "6147:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "6171:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6113:78:6"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6201:0:6"
									},
									"scope": 1896,
									"src": "6090:867:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "7113:419:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1817,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "7127:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7142:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7127:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1820,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "7147:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																		}
																	},
																	"id": 1822,
																	"indexExpression": {
																		"id": 1821,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "7159:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7147:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																		"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																	}
																},
																"id": 1826,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1823,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "7170:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7185:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7170:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7147:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																	"typeString": "struct gEXO.Checkpoint storage ref"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1272,
															"src": "7147:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1828,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "7201:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "7201:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7147:66:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7127:86:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1864,
													"nodeType": "Block",
													"src": "7303:156:6",
													"statements": [
														{
															"expression": {
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1844,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "7317:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																			}
																		},
																		"id": 1847,
																		"indexExpression": {
																			"id": 1845,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1808,
																			"src": "7329:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7317:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																			"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																		}
																	},
																	"id": 1848,
																	"indexExpression": {
																		"id": 1846,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "7340:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7317:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																		"typeString": "struct gEXO.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1850,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "7367:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "7367:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1852,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "7381:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1849,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "7356:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$1275_storage_ptr_$",
																			"typeString": "type(struct gEXO.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7356:34:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1275_memory_ptr",
																		"typeString": "struct gEXO.Checkpoint memory"
																	}
																},
																"src": "7317:73:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																	"typeString": "struct gEXO.Checkpoint storage ref"
																}
															},
															"id": 1855,
															"nodeType": "ExpressionStatement",
															"src": "7317:73:6"
														},
														{
															"expression": {
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1856,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "7404:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1858,
																	"indexExpression": {
																		"id": 1857,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "7419:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7404:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1859,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "7432:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7447:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7432:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7404:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1863,
															"nodeType": "ExpressionStatement",
															"src": "7404:44:6"
														}
													]
												},
												"id": 1865,
												"nodeType": "IfStatement",
												"src": "7123:336:6",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "7215:82:6",
													"statements": [
														{
															"expression": {
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1832,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1287,
																				"src": "7229:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct gEXO.Checkpoint storage ref))"
																				}
																			},
																			"id": 1837,
																			"indexExpression": {
																				"id": 1833,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1808,
																				"src": "7241:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7229:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$1275_storage_$",
																				"typeString": "mapping(uint256 => struct gEXO.Checkpoint storage ref)"
																			}
																		},
																		"id": 1838,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1834,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1810,
																				"src": "7252:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7267:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7252:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7229:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1275_storage",
																			"typeString": "struct gEXO.Checkpoint storage ref"
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "7229:46:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1840,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "7278:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7229:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1842,
															"nodeType": "ExpressionStatement",
															"src": "7229:57:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1867,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "7495:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1868,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "7506:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1869,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "7516:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1866,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "7474:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "EmitStatement",
												"src": "7469:56:6"
											}
										]
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "6998:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6998:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "7025:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "7055:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7055:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "7081:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7081:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6988:115:6"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7113:0:6"
									},
									"scope": 1896,
									"src": "6963:569:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										821
									],
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "7741:71:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1885,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "7766:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1887,
															"indexExpression": {
																"id": 1886,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "7776:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7766:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1888,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "7783:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1890,
															"indexExpression": {
																"id": 1889,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "7793:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7783:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1891,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "7798:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1884,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "7751:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7751:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "7751:54:6"
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "7538:78:6",
										"text": "@notice Ensure delegation moves when token is transferred."
									},
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1882,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7732:8:6"
									},
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "7660:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "7682:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7682:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "7702:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7702:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7650:72:6"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7741:0:6"
									},
									"scope": 1896,
									"src": "7621:191:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1897,
							"src": "174:7640:6"
						}
					],
					"src": "32:7783:6"
				},
				"id": 6
			}
		}
	}
}