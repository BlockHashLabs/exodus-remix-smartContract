{
	"id": "10b5847b618859989698f083b13dc3a2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"frax/Frax.sol": {
				"content": "// SPDX-License-Identifier: Unlicensed\npragma solidity 0.7.5;\n\ncontract LibNote {\n    event LogNote(\n        bytes4 indexed sig,\n        address indexed usr,\n        bytes32 indexed arg1,\n        bytes32 indexed arg2,\n        bytes data\n    ) anonymous;\n\n    modifier note() {\n        _;\n        // assembly {\n        //     // log an 'anonymous' event with a constant 6 words of calldata\n        //     // and four indexed topics: selector, caller, arg1 and arg2\n        //     let mark := msize()                         // end of memory ensures zero\n        //     mstore(0x40, add(mark, 288))              // update free memory pointer\n        //     mstore(mark, 0x20)                        // bytes type data offset\n        //     mstore(add(mark, 0x20), 224)              // bytes size (padded)\n        //     calldatacopy(add(mark, 0x40), 0, 224)     // bytes payload\n        //     log4(mark, 288,                           // calldata\n        //          shl(224, shr(224, calldataload(0))), // msg.sig\n        //          caller(),                              // msg.sender\n        //          calldataload(4),                     // arg1\n        //          calldataload(36)                     // arg2\n        //         )\n        // }\n    }\n}\n\ninterface IFRAX {\n    // --- Auth ---\n    function wards() external returns (uint256);\n\n    function rely(address guy) external;\n\n    function deny(address guy) external;\n\n    // --- Token ---\n    function transfer(address dst, uint256 wad) external returns (bool);\n\n    function transferFrom(\n        address src,\n        address dst,\n        uint256 wad\n    ) external returns (bool);\n\n    function mint(address usr, uint256 wad) external;\n\n    function burn(address usr, uint256 wad) external;\n\n    function approve(address usr, uint256 wad) external returns (bool);\n\n    // --- Alias ---\n    function push(address usr, uint256 wad) external;\n\n    function pull(address usr, uint256 wad) external;\n\n    function move(\n        address src,\n        address dst,\n        uint256 wad\n    ) external;\n\n    // --- Approve by signature ---\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n\ncontract FRAX is LibNote {\n    event Approval(address indexed src, address indexed guy, uint256 wad);\n    event Transfer(address indexed src, address indexed dst, uint256 wad);\n\n    // --- Auth ---\n    mapping(address => uint256) public wards;\n\n    function rely(address guy) external note auth {\n        wards[guy] = 1;\n    }\n\n    function deny(address guy) external note auth {\n        wards[guy] = 0;\n    }\n\n    modifier auth() {\n        require(wards[msg.sender] == 1, \"Frax/not-authorized\");\n        _;\n    }\n\n    // --- ERC20 Data ---\n    string public constant name = \"FRAX TOKEN\";\n    string public constant symbol = \"FRAX\";\n    string public constant version = \"1\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    uint256 public dailyFraxLimit;\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) private allowances;\n    mapping(address => uint256) public nonces;\n    mapping(address => uint256) public lastMintRestart;\n    mapping(address => uint256) public fraxMintedToday;\n\n    // event Approval(address indexed src, address indexed guy, uint wad);\n    // event Transfer(address indexed src, address indexed dst, uint wad);\n\n    // --- Math ---\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    // --- EIP712 niceties ---\n    bytes32 public DOMAIN_SEPARATOR;\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\n\n    constructor(uint256 chainId_) {\n        wards[msg.sender] = 1;\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(name)),\n                keccak256(bytes(version)),\n                chainId_,\n                address(this)\n            )\n        );\n        dailyFraxLimit = 10000000000000000000000;\n    }\n\n    function allowance(address account_, address sender_) external view returns (uint256) {\n        return _allowance(account_, sender_);\n    }\n\n    function _allowance(address account_, address sender_) internal view returns (uint256) {\n        return allowances[account_][sender_];\n    }\n\n    // --- Token ---\n    function transfer(address dst, uint256 wad) external returns (bool) {\n        return transferFrom(msg.sender, dst, wad);\n    }\n\n    function transferFrom(\n        address src,\n        address dst,\n        uint256 wad\n    ) public returns (bool) {\n        require(balanceOf[src] >= wad, \"Frax/insufficient-balance\");\n        if (src != msg.sender && _allowance(src, msg.sender) != uint256(-1)) {\n            require(_allowance(src, msg.sender) >= wad, \"Frax/insufficient-allowance\");\n            allowances[src][msg.sender] = sub(_allowance(src, msg.sender), wad);\n        }\n        balanceOf[src] = sub(balanceOf[src], wad);\n        balanceOf[dst] = add(balanceOf[dst], wad);\n        emit Transfer(src, dst, wad);\n        return true;\n    }\n\n    function addAuth(address usr) external auth {\n        wards[usr] = 1;\n    }\n\n    function adjustDailyFraxLimit(uint256 _limit) external auth {\n        dailyFraxLimit = _limit;\n    }\n\n    function mint(address usr, uint256 wad) external {\n        if (wards[msg.sender] == 0) {\n            require(\n                add(wad, fraxMintedToday[msg.sender]) <= dailyFraxLimit ||\n                    (sub(block.number, lastMintRestart[msg.sender]) >= 6500 && wad <= dailyFraxLimit),\n                \"Over daily Frax Limit\"\n            );\n            if (sub(block.number, lastMintRestart[msg.sender]) >= 6500) {\n                fraxMintedToday[msg.sender] = wad;\n                lastMintRestart[msg.sender] = block.number;\n            } else {\n                fraxMintedToday[msg.sender] = add(fraxMintedToday[msg.sender], wad);\n            }\n        }\n\n        balanceOf[usr] = add(balanceOf[usr], wad);\n\n        totalSupply = add(totalSupply, wad);\n\n        emit Transfer(address(0), usr, wad);\n    }\n\n    function burn(address usr, uint256 wad) external {\n        require(balanceOf[usr] >= wad, \"Frax/insufficient-balance\");\n        if (usr != msg.sender && _allowance(usr, msg.sender) != uint256(-1)) {\n            require(_allowance(usr, msg.sender) >= wad, \"Frax/insufficient-allowance\");\n            allowances[usr][msg.sender] = sub(_allowance(usr, msg.sender), wad);\n        }\n        balanceOf[usr] = sub(balanceOf[usr], wad);\n        totalSupply = sub(totalSupply, wad);\n        emit Transfer(usr, address(0), wad);\n    }\n\n    function _approve(address usr, uint256 wad) internal returns (bool) {\n        allowances[msg.sender][usr] = wad;\n\n        emit Approval(msg.sender, usr, wad);\n        return true;\n    }\n\n    function approve(address usr_, uint256 wad_) external returns (bool) {\n        return _approve(usr_, wad_);\n    }\n\n    // --- Alias ---\n    function push(address usr, uint256 wad) external {\n        transferFrom(msg.sender, usr, wad);\n    }\n\n    function pull(address usr, uint256 wad) external {\n        transferFrom(usr, msg.sender, wad);\n    }\n\n    function move(\n        address src,\n        address dst,\n        uint256 wad\n    ) external {\n        transferFrom(src, dst, wad);\n    }\n\n    // --- Approve by signature ---\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed))\n            )\n        );\n\n        require(holder != address(0), \"Frax/invalid-address-0\");\n        require(holder == ecrecover(digest, v, r, s), \"Frax/invalid-permit\");\n        require(expiry == 0 || block.timestamp <= expiry, \"Frax/permit-expired\");\n        require(nonce == nonces[holder]++, \"Frax/invalid-nonce\");\n        uint256 wad = allowed ? uint256(-1) : 0;\n        allowances[holder][spender] = wad;\n        emit Approval(holder, spender, wad);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"frax/Frax.sol": {
				"FRAX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "chainId_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg1",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg2",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								}
							],
							"name": "addAuth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_limit",
									"type": "uint256"
								}
							],
							"name": "adjustDailyFraxLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender_",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad_",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dailyFraxLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								}
							],
							"name": "deny",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "fraxMintedToday",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastMintRestart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "move",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "pull",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "push",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								}
							],
							"name": "rely",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "wards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"frax/Frax.sol\":2308:8773  contract FRAX is LibNote {... */\n  mstore(0x40, 0x80)\n    /* \"frax/Frax.sol\":4110:4567  constructor(uint256 chainId_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"frax/Frax.sol\":4156:4166  msg.sender */\n  caller\n    /* \"frax/Frax.sol\":4150:4155  wards */\n  0x00\n    /* \"frax/Frax.sol\":4150:4167  wards[msg.sender] */\n  swap1\n  dup2\n  mstore\n    /* \"frax/Frax.sol\":4110:4567  constructor(uint256 chainId_) {... */\n  0x20\n    /* \"frax/Frax.sol\":4150:4167  wards[msg.sender] */\n  dup2\n  dup2\n  mstore\n  0x40\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"frax/Frax.sol\":4170:4171  1 */\n  0x01\n    /* \"frax/Frax.sol\":4150:4171  wards[msg.sender] = 1 */\n  swap1\n  dup2\n  swap1\n  sstore\n    /* \"frax/Frax.sol\":4380:4384  name */\n  dup3\n  mload\n  dup1\n  dup5\n  add\n  dup5\n  mstore\n  0x0a\n  dup2\n  mstore\n  shl(0xb1, 0x232920ac102a27a5a2a7)\n  swap1\n  dup4\n  add\n  mstore\n    /* \"frax/Frax.sol\":4420:4427  version */\n  dup3\n  mload\n  dup1\n  dup5\n  add\n  dup5\n  mstore\n  swap1\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup3\n  add\n  mstore\n    /* \"frax/Frax.sol\":4223:4500  abi.encode(... */\n  dup2\n  mload\n    /* \"frax/Frax.sol\":4251:4346  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"frax/Frax.sol\":4223:4500  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"frax/Frax.sol\":4364:4386  keccak256(bytes(name)) */\n  0x0b5e63856806857c7af67a3841d8148fce118228c7167c9e8705ab68578b5d9f\n    /* \"frax/Frax.sol\":4223:4500  abi.encode(... */\n  dup2\n  dup5\n  add\n  mstore\n    /* \"frax/Frax.sol\":4404:4429  keccak256(bytes(version)) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"frax/Frax.sol\":4223:4500  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"frax/Frax.sol\":4481:4485  this */\n  address\n    /* \"frax/Frax.sol\":4223:4500  abi.encode(... */\n  0xa0\n  dup1\n  dup6\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n  dup1\n  dup6\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0xc0\n  swap1\n  swap4\n  add\n  swap1\n  swap2\n  mstore\n    /* \"frax/Frax.sol\":4200:4510  keccak256(... */\n  dup2\n  mload\n  swap2\n  add\n  keccak256\n    /* \"frax/Frax.sol\":4181:4197  DOMAIN_SEPARATOR */\n  0x08\n    /* \"frax/Frax.sol\":4181:4510  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n    /* \"frax/Frax.sol\":4537:4560  10000000000000000000000 */\n  0x021e19e0c9bab2400000\n    /* \"frax/Frax.sol\":4520:4534  dailyFraxLimit */\n  0x02\n    /* \"frax/Frax.sol\":4520:4560  dailyFraxLimit = 10000000000000000000000 */\n  sstore\n    /* \"frax/Frax.sol\":2308:8773  contract FRAX is LibNote {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"frax/Frax.sol\":2308:8773  contract FRAX is LibNote {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ecebe00\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb753a98c\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd3fd35ec\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd3fd35ec\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd7f1bf12\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2d5d56b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xb753a98c\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbb35783b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbf353dbb\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x9c52a7f1\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x9c52a7f1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9e16de34\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x7ecebe00\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8fcbaf0c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x3644e515\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x54fd4d50\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x65fae35e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x798247ae\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5422224e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"frax/Frax.sol\":2853:2895  string public constant name = \"FRAX TOKEN\" */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_38:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_38)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_41:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"frax/Frax.sol\":7352:7465  function approve(address usr_, uint256 wad_) external returns (bool) {... */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_44\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"frax/Frax.sol\":3028:3054  uint256 public totalSupply */\n    tag_5:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"frax/Frax.sol\":5017:5625  function transferFrom(... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_49\n      jump\t// in\n        /* \"frax/Frax.sol\":3995:4103  bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n    tag_7:\n      tag_45\n      tag_51\n      jump\t// in\n        /* \"frax/Frax.sol\":2987:3022  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"frax/Frax.sol\":3814:3845  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_45\n      tag_55\n      jump\t// in\n        /* \"frax/Frax.sol\":5818:6625  function mint(address usr, uint256 wad) external {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"frax/Frax.sol\":5631:5706  function addAuth(address usr) external auth {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_61\n      jump\t// in\n        /* \"frax/Frax.sol\":2945:2981  string public constant version = \"1\" */\n    tag_12:\n      tag_36\n      tag_63\n      jump\t// in\n        /* \"frax/Frax.sol\":3096:3140  mapping(address => uint256) public balanceOf */\n    tag_14:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_73\n      jump\t// in\n        /* \"frax/Frax.sol\":3265:3315  mapping(address => uint256) public lastMintRestart */\n    tag_15:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_76\n      jump\t// in\n        /* \"frax/Frax.sol\":3218:3259  mapping(address => uint256) public nonces */\n    tag_16:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_79\n      jump\t// in\n        /* \"frax/Frax.sol\":7882:8771  function permit(... */\n    tag_17:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x0100\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      iszero\n      iszero\n      swap1\n      0xff\n      0xa0\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xc0\n      dup2\n      add\n      calldataload\n      swap1\n      0xe0\n      add\n      calldataload\n      tag_82\n      jump\t// in\n        /* \"frax/Frax.sol\":2901:2939  string public constant symbol = \"FRAX\" */\n    tag_18:\n      tag_36\n      tag_84\n      jump\t// in\n        /* \"frax/Frax.sol\":2640:2717  function deny(address guy) external note auth {... */\n    tag_19:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_91\n      jump\t// in\n        /* \"frax/Frax.sol\":6631:7155  function burn(address usr, uint256 wad) external {... */\n    tag_20:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_94\n      jump\t// in\n        /* \"frax/Frax.sol\":3321:3371  mapping(address => uint256) public fraxMintedToday */\n    tag_21:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_97\n      jump\t// in\n        /* \"frax/Frax.sol\":4885:5011  function transfer(address dst, uint256 wad) external returns (bool) {... */\n    tag_22:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_100\n      jump\t// in\n        /* \"frax/Frax.sol\":7492:7592  function push(address usr, uint256 wad) external {... */\n    tag_23:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_103\n      jump\t// in\n        /* \"frax/Frax.sol\":7704:7840  function move(... */\n    tag_24:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_106\n      jump\t// in\n        /* \"frax/Frax.sol\":2510:2550  mapping(address => uint256) public wards */\n    tag_25:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_109\n      jump\t// in\n        /* \"frax/Frax.sol\":5712:5812  function adjustDailyFraxLimit(uint256 _limit) external auth {... */\n    tag_26:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      calldataload\n      tag_112\n      jump\t// in\n        /* \"frax/Frax.sol\":3060:3089  uint256 public dailyFraxLimit */\n    tag_27:\n      tag_45\n      tag_114\n      jump\t// in\n        /* \"frax/Frax.sol\":4573:4712  function allowance(address account_, address sender_) external view returns (uint256) {... */\n    tag_28:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_117\n      jump\t// in\n        /* \"frax/Frax.sol\":7598:7698  function pull(address usr, uint256 wad) external {... */\n    tag_29:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_120\n      jump\t// in\n        /* \"frax/Frax.sol\":2853:2895  string public constant name = \"FRAX TOKEN\" */\n    tag_37:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xb1, 0x232920ac102a27a5a2a7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":7352:7465  function approve(address usr_, uint256 wad_) external returns (bool) {... */\n    tag_44:\n        /* \"frax/Frax.sol\":7415:7419  bool */\n      0x00\n        /* \"frax/Frax.sol\":7438:7458  _approve(usr_, wad_) */\n      tag_122\n        /* \"frax/Frax.sol\":7447:7451  usr_ */\n      dup4\n        /* \"frax/Frax.sol\":7453:7457  wad_ */\n      dup4\n        /* \"frax/Frax.sol\":7438:7446  _approve */\n      tag_123\n        /* \"frax/Frax.sol\":7438:7458  _approve(usr_, wad_) */\n      jump\t// in\n    tag_122:\n        /* \"frax/Frax.sol\":7431:7458  return _approve(usr_, wad_) */\n      swap1\n      pop\n        /* \"frax/Frax.sol\":7352:7465  function approve(address usr_, uint256 wad_) external returns (bool) {... */\n    tag_121:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":3028:3054  uint256 public totalSupply */\n    tag_46:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":5017:5625  function transferFrom(... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":5148:5162  balanceOf[src] */\n      dup4\n      and\n        /* \"frax/Frax.sol\":5124:5128  bool */\n      0x00\n        /* \"frax/Frax.sol\":5148:5162  balanceOf[src] */\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":5148:5157  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":5148:5162  balanceOf[src] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":5148:5169  balanceOf[src] >= wad */\n      dup3\n      gt\n      iszero\n        /* \"frax/Frax.sol\":5140:5199  require(balanceOf[src] >= wad, \"Frax/insufficient-balance\") */\n      tag_125\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x38, 0x467261782f696e73756666696369656e742d62616c616e6365)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":5213:5230  src != msg.sender */\n      dup5\n      and\n        /* \"frax/Frax.sol\":5220:5230  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":5213:5230  src != msg.sender */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"frax/Frax.sol\":5213:5276  src != msg.sender && _allowance(src, msg.sender) != uint256(-1) */\n      tag_126\n      jumpi\n      pop\n      not(0x00)\n        /* \"frax/Frax.sol\":5234:5261  _allowance(src, msg.sender) */\n      tag_127\n        /* \"frax/Frax.sol\":5245:5248  src */\n      dup6\n        /* \"frax/Frax.sol\":5250:5260  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":5234:5244  _allowance */\n      tag_128\n        /* \"frax/Frax.sol\":5234:5261  _allowance(src, msg.sender) */\n      jump\t// in\n    tag_127:\n        /* \"frax/Frax.sol\":5234:5276  _allowance(src, msg.sender) != uint256(-1) */\n      eq\n      iszero\n        /* \"frax/Frax.sol\":5213:5276  src != msg.sender && _allowance(src, msg.sender) != uint256(-1) */\n    tag_126:\n        /* \"frax/Frax.sol\":5209:5458  if (src != msg.sender && _allowance(src, msg.sender) != uint256(-1)) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"frax/Frax.sol\":5331:5334  wad */\n      dup2\n        /* \"frax/Frax.sol\":5300:5327  _allowance(src, msg.sender) */\n      tag_130\n        /* \"frax/Frax.sol\":5311:5314  src */\n      dup6\n        /* \"frax/Frax.sol\":5316:5326  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":5300:5310  _allowance */\n      tag_128\n        /* \"frax/Frax.sol\":5300:5327  _allowance(src, msg.sender) */\n      jump\t// in\n    tag_130:\n        /* \"frax/Frax.sol\":5300:5334  _allowance(src, msg.sender) >= wad */\n      lt\n      iszero\n        /* \"frax/Frax.sol\":5292:5366  require(_allowance(src, msg.sender) >= wad, \"Frax/insufficient-allowance\") */\n      tag_131\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x467261782f696e73756666696369656e742d616c6c6f77616e63650000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_131:\n        /* \"frax/Frax.sol\":5410:5447  sub(_allowance(src, msg.sender), wad) */\n      tag_132\n        /* \"frax/Frax.sol\":5414:5441  _allowance(src, msg.sender) */\n      tag_133\n        /* \"frax/Frax.sol\":5425:5428  src */\n      dup6\n        /* \"frax/Frax.sol\":5430:5440  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":5414:5424  _allowance */\n      tag_128\n        /* \"frax/Frax.sol\":5414:5441  _allowance(src, msg.sender) */\n      jump\t// in\n    tag_133:\n        /* \"frax/Frax.sol\":5443:5446  wad */\n      dup4\n        /* \"frax/Frax.sol\":5410:5413  sub */\n      tag_134\n        /* \"frax/Frax.sol\":5410:5447  sub(_allowance(src, msg.sender), wad) */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":5380:5395  allowances[src] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":5380:5390  allowances */\n      0x04\n        /* \"frax/Frax.sol\":5380:5395  allowances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"frax/Frax.sol\":5396:5406  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":5380:5407  allowances[src][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":5380:5447  allowances[src][msg.sender] = sub(_allowance(src, msg.sender), wad) */\n      sstore\n        /* \"frax/Frax.sol\":5209:5458  if (src != msg.sender && _allowance(src, msg.sender) != uint256(-1)) {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":5488:5502  balanceOf[src] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":5488:5497  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":5488:5502  balanceOf[src] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":5484:5508  sub(balanceOf[src], wad) */\n      tag_135\n      swap1\n        /* \"frax/Frax.sol\":5504:5507  wad */\n      dup4\n        /* \"frax/Frax.sol\":5484:5487  sub */\n      tag_134\n        /* \"frax/Frax.sol\":5484:5508  sub(balanceOf[src], wad) */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":5467:5481  balanceOf[src] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":5467:5476  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":5467:5481  balanceOf[src] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"frax/Frax.sol\":5467:5508  balanceOf[src] = sub(balanceOf[src], wad) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"frax/Frax.sol\":5539:5553  balanceOf[dst] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":5535:5559  add(balanceOf[dst], wad) */\n      tag_136\n      swap1\n        /* \"frax/Frax.sol\":5555:5558  wad */\n      dup4\n        /* \"frax/Frax.sol\":5535:5538  add */\n      tag_137\n        /* \"frax/Frax.sol\":5535:5559  add(balanceOf[dst], wad) */\n      jump\t// in\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":5518:5532  balanceOf[dst] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":5518:5527  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":5518:5532  balanceOf[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":5518:5559  balanceOf[dst] = add(balanceOf[dst], wad) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"frax/Frax.sol\":5574:5597  Transfer(src, dst, wad) */\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"frax/Frax.sol\":5518:5532  balanceOf[dst] */\n      swap2\n      swap4\n        /* \"frax/Frax.sol\":5574:5597  Transfer(src, dst, wad) */\n      swap3\n      dup9\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      pop\n        /* \"frax/Frax.sol\":5614:5618  true */\n      0x01\n        /* \"frax/Frax.sol\":5017:5625  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":3995:4103  bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n    tag_51:\n        /* \"frax/Frax.sol\":4037:4103  0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n      0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb\n        /* \"frax/Frax.sol\":3995:4103  bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":2987:3022  uint8 public constant decimals = 18 */\n    tag_53:\n        /* \"frax/Frax.sol\":3020:3022  18 */\n      0x12\n        /* \"frax/Frax.sol\":2987:3022  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":3814:3845  bytes32 public DOMAIN_SEPARATOR */\n    tag_55:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":5818:6625  function mint(address usr, uint256 wad) external {... */\n    tag_58:\n        /* \"frax/Frax.sol\":5887:5897  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":5881:5886  wards */\n      0x00\n        /* \"frax/Frax.sol\":5881:5898  wards[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":5877:6475  if (wards[msg.sender] == 0) {... */\n      tag_147\n      jumpi\n        /* \"frax/Frax.sol\":5985:5999  dailyFraxLimit */\n      sload(0x02)\n        /* \"frax/Frax.sol\":5969:5979  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":5953:5980  fraxMintedToday[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":5953:5968  fraxMintedToday */\n      0x07\n        /* \"frax/Frax.sol\":5953:5980  fraxMintedToday[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":5944:5981  add(wad, fraxMintedToday[msg.sender]) */\n      tag_140\n      swap1\n        /* \"frax/Frax.sol\":5948:5951  wad */\n      dup4\n      swap1\n        /* \"frax/Frax.sol\":5944:5947  add */\n      tag_137\n        /* \"frax/Frax.sol\":5944:5981  add(wad, fraxMintedToday[msg.sender]) */\n      jump\t// in\n    tag_140:\n        /* \"frax/Frax.sol\":5944:5999  add(wad, fraxMintedToday[msg.sender]) <= dailyFraxLimit */\n      gt\n      iszero\n        /* \"frax/Frax.sol\":5944:6104  add(wad, fraxMintedToday[msg.sender]) <= dailyFraxLimit ||... */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"frax/Frax.sol\":6058:6068  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6042:6069  lastMintRestart[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6042:6057  lastMintRestart */\n      0x06\n        /* \"frax/Frax.sol\":6042:6069  lastMintRestart[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":6074:6078  6500 */\n      0x1964\n      swap1\n        /* \"frax/Frax.sol\":6024:6070  sub(block.number, lastMintRestart[msg.sender]) */\n      tag_142\n      swap1\n        /* \"frax/Frax.sol\":6028:6040  block.number */\n      number\n      swap1\n        /* \"frax/Frax.sol\":6024:6027  sub */\n      tag_134\n        /* \"frax/Frax.sol\":6024:6070  sub(block.number, lastMintRestart[msg.sender]) */\n      jump\t// in\n    tag_142:\n        /* \"frax/Frax.sol\":6024:6078  sub(block.number, lastMintRestart[msg.sender]) >= 6500 */\n      lt\n      iszero\n        /* \"frax/Frax.sol\":6024:6103  sub(block.number, lastMintRestart[msg.sender]) >= 6500 && wad <= dailyFraxLimit */\n      dup1\n      iszero\n      tag_143\n      jumpi\n      pop\n        /* \"frax/Frax.sol\":6089:6103  dailyFraxLimit */\n      sload(0x02)\n        /* \"frax/Frax.sol\":6082:6085  wad */\n      dup2\n        /* \"frax/Frax.sol\":6082:6103  wad <= dailyFraxLimit */\n      gt\n      iszero\n        /* \"frax/Frax.sol\":6024:6103  sub(block.number, lastMintRestart[msg.sender]) >= 6500 && wad <= dailyFraxLimit */\n    tag_143:\n        /* \"frax/Frax.sol\":5919:6159  require(... */\n      tag_144\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x13dd995c8819185a5b1e48119c985e08131a5b5a5d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_144:\n        /* \"frax/Frax.sol\":6211:6221  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6195:6222  lastMintRestart[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6195:6210  lastMintRestart */\n      0x06\n        /* \"frax/Frax.sol\":6195:6222  lastMintRestart[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":6227:6231  6500 */\n      0x1964\n      swap1\n        /* \"frax/Frax.sol\":6177:6223  sub(block.number, lastMintRestart[msg.sender]) */\n      tag_145\n      swap1\n        /* \"frax/Frax.sol\":6181:6193  block.number */\n      number\n      swap1\n        /* \"frax/Frax.sol\":6177:6180  sub */\n      tag_134\n        /* \"frax/Frax.sol\":6177:6223  sub(block.number, lastMintRestart[msg.sender]) */\n      jump\t// in\n    tag_145:\n        /* \"frax/Frax.sol\":6177:6231  sub(block.number, lastMintRestart[msg.sender]) >= 6500 */\n      lt\n        /* \"frax/Frax.sol\":6173:6465  if (sub(block.number, lastMintRestart[msg.sender]) >= 6500) {... */\n      tag_146\n      jumpi\n        /* \"frax/Frax.sol\":6267:6277  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6251:6278  fraxMintedToday[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6251:6266  fraxMintedToday */\n      0x07\n        /* \"frax/Frax.sol\":6251:6278  fraxMintedToday[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"frax/Frax.sol\":6251:6284  fraxMintedToday[msg.sender] = wad */\n      dup5\n      swap1\n      sstore\n        /* \"frax/Frax.sol\":6302:6317  lastMintRestart */\n      0x06\n        /* \"frax/Frax.sol\":6302:6329  lastMintRestart[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":6332:6344  block.number */\n      number\n        /* \"frax/Frax.sol\":6302:6344  lastMintRestart[msg.sender] = block.number */\n      swap1\n      sstore\n        /* \"frax/Frax.sol\":6173:6465  if (sub(block.number, lastMintRestart[msg.sender]) >= 6500) {... */\n      jump(tag_147)\n    tag_146:\n        /* \"frax/Frax.sol\":6433:6443  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6417:6444  fraxMintedToday[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6417:6432  fraxMintedToday */\n      0x07\n        /* \"frax/Frax.sol\":6417:6444  fraxMintedToday[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":6413:6450  add(fraxMintedToday[msg.sender], wad) */\n      tag_148\n      swap1\n        /* \"frax/Frax.sol\":6446:6449  wad */\n      dup3\n        /* \"frax/Frax.sol\":6413:6416  add */\n      tag_137\n        /* \"frax/Frax.sol\":6413:6450  add(fraxMintedToday[msg.sender], wad) */\n      jump\t// in\n    tag_148:\n        /* \"frax/Frax.sol\":6399:6409  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6383:6410  fraxMintedToday[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6383:6398  fraxMintedToday */\n      0x07\n        /* \"frax/Frax.sol\":6383:6410  fraxMintedToday[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":6383:6450  fraxMintedToday[msg.sender] = add(fraxMintedToday[msg.sender], wad) */\n      sstore\n        /* \"frax/Frax.sol\":6173:6465  if (sub(block.number, lastMintRestart[msg.sender]) >= 6500) {... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":6506:6520  balanceOf[usr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6506:6515  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":6506:6520  balanceOf[usr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":6502:6526  add(balanceOf[usr], wad) */\n      tag_149\n      swap1\n        /* \"frax/Frax.sol\":6522:6525  wad */\n      dup3\n        /* \"frax/Frax.sol\":6502:6505  add */\n      tag_137\n        /* \"frax/Frax.sol\":6502:6526  add(balanceOf[usr], wad) */\n      jump\t// in\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":6485:6499  balanceOf[usr] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6485:6494  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":6485:6499  balanceOf[usr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":6485:6526  balanceOf[usr] = add(balanceOf[usr], wad) */\n      sstore\n        /* \"frax/Frax.sol\":6555:6566  totalSupply */\n      sload(0x01)\n        /* \"frax/Frax.sol\":6551:6572  add(totalSupply, wad) */\n      tag_150\n      swap1\n        /* \"frax/Frax.sol\":6568:6571  wad */\n      dup3\n        /* \"frax/Frax.sol\":6551:6554  add */\n      tag_137\n        /* \"frax/Frax.sol\":6551:6572  add(totalSupply, wad) */\n      jump\t// in\n    tag_150:\n        /* \"frax/Frax.sol\":6537:6548  totalSupply */\n      0x01\n        /* \"frax/Frax.sol\":6537:6572  totalSupply = add(totalSupply, wad) */\n      sstore\n        /* \"frax/Frax.sol\":6588:6618  Transfer(address(0), usr, wad) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap2\n        /* \"frax/Frax.sol\":6605:6606  0 */\n      0x00\n      swap2\n        /* \"frax/Frax.sol\":6588:6618  Transfer(address(0), usr, wad) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"frax/Frax.sol\":5818:6625  function mint(address usr, uint256 wad) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":5631:5706  function addAuth(address usr) external auth {... */\n    tag_61:\n        /* \"frax/Frax.sol\":2763:2773  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":2757:2762  wards */\n      0x00\n        /* \"frax/Frax.sol\":2757:2774  wards[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":2778:2779  1 */\n      0x01\n        /* \"frax/Frax.sol\":2757:2779  wards[msg.sender] == 1 */\n      eq\n        /* \"frax/Frax.sol\":2749:2803  require(wards[msg.sender] == 1, \"Frax/not-authorized\") */\n      tag_152\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":5685:5695  wards[usr] */\n      and\n        /* \"frax/Frax.sol\":5685:5690  wards */\n      0x00\n        /* \"frax/Frax.sol\":5685:5695  wards[usr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":5698:5699  1 */\n      0x01\n        /* \"frax/Frax.sol\":5685:5699  wards[usr] = 1 */\n      swap1\n      sstore\n        /* \"frax/Frax.sol\":5631:5706  function addAuth(address usr) external auth {... */\n      jump\t// out\n        /* \"frax/Frax.sol\":2945:2981  string public constant version = \"1\" */\n    tag_63:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x31)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":3096:3140  mapping(address => uint256) public balanceOf */\n    tag_73:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":3265:3315  mapping(address => uint256) public lastMintRestart */\n    tag_76:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":3218:3259  mapping(address => uint256) public nonces */\n    tag_79:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":7882:8771  function permit(... */\n    tag_82:\n        /* \"frax/Frax.sol\":8198:8214  DOMAIN_SEPARATOR */\n      sload(0x08)\n        /* \"frax/Frax.sol\":8242:8310  abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed) */\n      0x40\n      dup1\n      mload\n        /* \"frax/Frax.sol\":4037:4103  0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n      0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb\n        /* \"frax/Frax.sol\":8242:8310  abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed) */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup14\n      and\n      dup4\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      dup13\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      dup12\n      swap1\n      mstore\n      0xa0\n      dup4\n      add\n      dup11\n      swap1\n      mstore\n      dup9\n      iszero\n      iszero\n      0xc0\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup5\n      mload\n      dup1\n      dup6\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0xe0\n      dup5\n      add\n      dup6\n      mstore\n        /* \"frax/Frax.sol\":8232:8311  keccak256(abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"frax/Frax.sol\":8136:8325  abi.encodePacked(... */\n      0x0100\n      dup6\n      add\n      mstore\n      0x0102\n      dup5\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0x0122\n      dup1\n      dup5\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap6\n      add\n      dup6\n      mstore\n      0x0142\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"frax/Frax.sol\":8113:8335  keccak256(... */\n      dup3\n      mload\n      swap3\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      swap1\n        /* \"frax/Frax.sol\":8346:8401  require(holder != address(0), \"Frax/invalid-address-0\") */\n      tag_159\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x54, 0x0467261782f696e76616c69642d616464726573732d3)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_159:\n        /* \"frax/Frax.sol\":8429:8455  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"frax/Frax.sol\":8439:8445  digest */\n      dup2\n        /* \"frax/Frax.sol\":8447:8448  v */\n      dup6\n        /* \"frax/Frax.sol\":8450:8451  r */\n      dup6\n        /* \"frax/Frax.sol\":8453:8454  s */\n      dup6\n        /* \"frax/Frax.sol\":8429:8455  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":8419:8455  holder == ecrecover(digest, v, r, s) */\n      and\n        /* \"frax/Frax.sol\":8419:8425  holder */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":8419:8455  holder == ecrecover(digest, v, r, s) */\n      and\n      eq\n        /* \"frax/Frax.sol\":8411:8479  require(holder == ecrecover(digest, v, r, s), \"Frax/invalid-permit\") */\n      tag_162\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x119c985e0bda5b9d985b1a590b5c195c9b5a5d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_162:\n        /* \"frax/Frax.sol\":8497:8508  expiry == 0 */\n      dup6\n      iszero\n      dup1\n        /* \"frax/Frax.sol\":8497:8537  expiry == 0 || block.timestamp <= expiry */\n      tag_163\n      jumpi\n      pop\n        /* \"frax/Frax.sol\":8531:8537  expiry */\n      dup6\n        /* \"frax/Frax.sol\":8512:8527  block.timestamp */\n      timestamp\n        /* \"frax/Frax.sol\":8512:8537  block.timestamp <= expiry */\n      gt\n      iszero\n        /* \"frax/Frax.sol\":8497:8537  expiry == 0 || block.timestamp <= expiry */\n    tag_163:\n        /* \"frax/Frax.sol\":8489:8561  require(expiry == 0 || block.timestamp <= expiry, \"Frax/permit-expired\") */\n      tag_164\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x119c985e0bdc195c9b5a5d0b595e1c1a5c9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":8588:8602  nonces[holder] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":8588:8594  nonces */\n      0x05\n        /* \"frax/Frax.sol\":8588:8602  nonces[holder] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":8588:8604  nonces[holder]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"frax/Frax.sol\":8579:8604  nonce == nonces[holder]++ */\n      dup8\n      eq\n        /* \"frax/Frax.sol\":8571:8627  require(nonce == nonces[holder]++, \"Frax/invalid-nonce\") */\n      tag_165\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x70, 0x467261782f696e76616c69642d6e6f6e6365)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_165:\n        /* \"frax/Frax.sol\":8637:8648  uint256 wad */\n      0x00\n        /* \"frax/Frax.sol\":8651:8658  allowed */\n      dup6\n        /* \"frax/Frax.sol\":8651:8676  allowed ? uint256(-1) : 0 */\n      tag_166\n      jumpi\n        /* \"frax/Frax.sol\":8675:8676  0 */\n      0x00\n        /* \"frax/Frax.sol\":8651:8676  allowed ? uint256(-1) : 0 */\n      jump(tag_167)\n    tag_166:\n      not(0x00)\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":8686:8704  allowances[holder] */\n      dup1\n      dup13\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":8686:8696  allowances */\n      0x04\n        /* \"frax/Frax.sol\":8686:8704  allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"frax/Frax.sol\":8686:8713  allowances[holder][spender] */\n      swap5\n      dup16\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":8686:8719  allowances[holder][spender] = wad */\n      dup6\n      swap1\n      sstore\n        /* \"frax/Frax.sol\":8734:8764  Approval(holder, spender, wad) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"frax/Frax.sol\":8637:8676  uint256 wad = allowed ? uint256(-1) : 0 */\n      swap5\n      swap6\n      pop\n        /* \"frax/Frax.sol\":8686:8713  allowances[holder][spender] */\n      swap3\n      swap4\n        /* \"frax/Frax.sol\":8686:8704  allowances[holder] */\n      swap2\n      swap3\n        /* \"frax/Frax.sol\":8734:8764  Approval(holder, spender, wad) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"frax/Frax.sol\":7882:8771  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":2901:2939  string public constant symbol = \"FRAX\" */\n    tag_84:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe3, 0x08ca482b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":2640:2717  function deny(address guy) external note auth {... */\n    tag_91:\n        /* \"frax/Frax.sol\":2763:2773  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":2757:2762  wards */\n      0x00\n        /* \"frax/Frax.sol\":2757:2774  wards[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":2778:2779  1 */\n      0x01\n        /* \"frax/Frax.sol\":2757:2779  wards[msg.sender] == 1 */\n      eq\n        /* \"frax/Frax.sol\":2749:2803  require(wards[msg.sender] == 1, \"Frax/not-authorized\") */\n      tag_170\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":2696:2706  wards[guy] */\n      and\n        /* \"frax/Frax.sol\":2709:2710  0 */\n      0x00\n        /* \"frax/Frax.sol\":2696:2706  wards[guy] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"frax/Frax.sol\":2696:2710  wards[guy] = 0 */\n      sstore\n        /* \"frax/Frax.sol\":2640:2717  function deny(address guy) external note auth {... */\n      jump\t// out\n        /* \"frax/Frax.sol\":6631:7155  function burn(address usr, uint256 wad) external {... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":6698:6712  balanceOf[usr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6698:6707  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":6698:6712  balanceOf[usr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":6698:6719  balanceOf[usr] >= wad */\n      dup2\n      gt\n      iszero\n        /* \"frax/Frax.sol\":6690:6749  require(balanceOf[usr] >= wad, \"Frax/insufficient-balance\") */\n      tag_173\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x38, 0x467261782f696e73756666696369656e742d62616c616e6365)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":6763:6780  usr != msg.sender */\n      dup3\n      and\n        /* \"frax/Frax.sol\":6770:6780  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6763:6780  usr != msg.sender */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"frax/Frax.sol\":6763:6826  usr != msg.sender && _allowance(usr, msg.sender) != uint256(-1) */\n      tag_174\n      jumpi\n      pop\n      not(0x00)\n        /* \"frax/Frax.sol\":6784:6811  _allowance(usr, msg.sender) */\n      tag_175\n        /* \"frax/Frax.sol\":6795:6798  usr */\n      dup4\n        /* \"frax/Frax.sol\":6800:6810  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6784:6794  _allowance */\n      tag_128\n        /* \"frax/Frax.sol\":6784:6811  _allowance(usr, msg.sender) */\n      jump\t// in\n    tag_175:\n        /* \"frax/Frax.sol\":6784:6826  _allowance(usr, msg.sender) != uint256(-1) */\n      eq\n      iszero\n        /* \"frax/Frax.sol\":6763:6826  usr != msg.sender && _allowance(usr, msg.sender) != uint256(-1) */\n    tag_174:\n        /* \"frax/Frax.sol\":6759:7008  if (usr != msg.sender && _allowance(usr, msg.sender) != uint256(-1)) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"frax/Frax.sol\":6881:6884  wad */\n      dup1\n        /* \"frax/Frax.sol\":6850:6877  _allowance(usr, msg.sender) */\n      tag_177\n        /* \"frax/Frax.sol\":6861:6864  usr */\n      dup4\n        /* \"frax/Frax.sol\":6866:6876  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6850:6860  _allowance */\n      tag_128\n        /* \"frax/Frax.sol\":6850:6877  _allowance(usr, msg.sender) */\n      jump\t// in\n    tag_177:\n        /* \"frax/Frax.sol\":6850:6884  _allowance(usr, msg.sender) >= wad */\n      lt\n      iszero\n        /* \"frax/Frax.sol\":6842:6916  require(_allowance(usr, msg.sender) >= wad, \"Frax/insufficient-allowance\") */\n      tag_178\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x467261782f696e73756666696369656e742d616c6c6f77616e63650000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_178:\n        /* \"frax/Frax.sol\":6960:6997  sub(_allowance(usr, msg.sender), wad) */\n      tag_179\n        /* \"frax/Frax.sol\":6964:6991  _allowance(usr, msg.sender) */\n      tag_180\n        /* \"frax/Frax.sol\":6975:6978  usr */\n      dup4\n        /* \"frax/Frax.sol\":6980:6990  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6964:6974  _allowance */\n      tag_128\n        /* \"frax/Frax.sol\":6964:6991  _allowance(usr, msg.sender) */\n      jump\t// in\n    tag_180:\n        /* \"frax/Frax.sol\":6993:6996  wad */\n      dup3\n        /* \"frax/Frax.sol\":6960:6963  sub */\n      tag_134\n        /* \"frax/Frax.sol\":6960:6997  sub(_allowance(usr, msg.sender), wad) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":6930:6945  allowances[usr] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":6930:6940  allowances */\n      0x04\n        /* \"frax/Frax.sol\":6930:6945  allowances[usr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"frax/Frax.sol\":6946:6956  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":6930:6957  allowances[usr][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":6930:6997  allowances[usr][msg.sender] = sub(_allowance(usr, msg.sender), wad) */\n      sstore\n        /* \"frax/Frax.sol\":6759:7008  if (usr != msg.sender && _allowance(usr, msg.sender) != uint256(-1)) {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":7038:7052  balanceOf[usr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":7038:7047  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":7038:7052  balanceOf[usr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":7034:7058  sub(balanceOf[usr], wad) */\n      tag_181\n      swap1\n        /* \"frax/Frax.sol\":7054:7057  wad */\n      dup3\n        /* \"frax/Frax.sol\":7034:7037  sub */\n      tag_134\n        /* \"frax/Frax.sol\":7034:7058  sub(balanceOf[usr], wad) */\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":7017:7031  balanceOf[usr] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":7017:7026  balanceOf */\n      0x03\n        /* \"frax/Frax.sol\":7017:7031  balanceOf[usr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"frax/Frax.sol\":7017:7058  balanceOf[usr] = sub(balanceOf[usr], wad) */\n      sstore\n        /* \"frax/Frax.sol\":7086:7097  totalSupply */\n      sload(0x01)\n        /* \"frax/Frax.sol\":7082:7103  sub(totalSupply, wad) */\n      tag_182\n      swap1\n        /* \"frax/Frax.sol\":7099:7102  wad */\n      dup3\n        /* \"frax/Frax.sol\":7082:7085  sub */\n      tag_134\n        /* \"frax/Frax.sol\":7082:7103  sub(totalSupply, wad) */\n      jump\t// in\n    tag_182:\n        /* \"frax/Frax.sol\":7068:7079  totalSupply */\n      0x01\n        /* \"frax/Frax.sol\":7068:7103  totalSupply = sub(totalSupply, wad) */\n      sstore\n        /* \"frax/Frax.sol\":7118:7148  Transfer(usr, address(0), wad) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"frax/Frax.sol\":7140:7141  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":7118:7148  Transfer(usr, address(0), wad) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"frax/Frax.sol\":6631:7155  function burn(address usr, uint256 wad) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":3321:3371  mapping(address => uint256) public fraxMintedToday */\n    tag_97:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":4885:5011  function transfer(address dst, uint256 wad) external returns (bool) {... */\n    tag_100:\n        /* \"frax/Frax.sol\":4947:4951  bool */\n      0x00\n        /* \"frax/Frax.sol\":4970:5004  transferFrom(msg.sender, dst, wad) */\n      tag_122\n        /* \"frax/Frax.sol\":4983:4993  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":4995:4998  dst */\n      dup5\n        /* \"frax/Frax.sol\":5000:5003  wad */\n      dup5\n        /* \"frax/Frax.sol\":4970:4982  transferFrom */\n      tag_49\n        /* \"frax/Frax.sol\":4970:5004  transferFrom(msg.sender, dst, wad) */\n      jump\t// in\n        /* \"frax/Frax.sol\":7492:7592  function push(address usr, uint256 wad) external {... */\n    tag_103:\n        /* \"frax/Frax.sol\":7551:7585  transferFrom(msg.sender, usr, wad) */\n      tag_186\n        /* \"frax/Frax.sol\":7564:7574  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":7576:7579  usr */\n      dup4\n        /* \"frax/Frax.sol\":7581:7584  wad */\n      dup4\n        /* \"frax/Frax.sol\":7551:7563  transferFrom */\n      tag_49\n        /* \"frax/Frax.sol\":7551:7585  transferFrom(msg.sender, usr, wad) */\n      jump\t// in\n    tag_186:\n      pop\n        /* \"frax/Frax.sol\":7492:7592  function push(address usr, uint256 wad) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":7704:7840  function move(... */\n    tag_106:\n        /* \"frax/Frax.sol\":7806:7833  transferFrom(src, dst, wad) */\n      tag_188\n        /* \"frax/Frax.sol\":7819:7822  src */\n      dup4\n        /* \"frax/Frax.sol\":7824:7827  dst */\n      dup4\n        /* \"frax/Frax.sol\":7829:7832  wad */\n      dup4\n        /* \"frax/Frax.sol\":7806:7818  transferFrom */\n      tag_49\n        /* \"frax/Frax.sol\":7806:7833  transferFrom(src, dst, wad) */\n      jump\t// in\n    tag_188:\n      pop\n        /* \"frax/Frax.sol\":7704:7840  function move(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":2510:2550  mapping(address => uint256) public wards */\n    tag_109:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":5712:5812  function adjustDailyFraxLimit(uint256 _limit) external auth {... */\n    tag_112:\n        /* \"frax/Frax.sol\":2763:2773  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":2757:2762  wards */\n      0x00\n        /* \"frax/Frax.sol\":2757:2774  wards[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"frax/Frax.sol\":2778:2779  1 */\n      0x01\n        /* \"frax/Frax.sol\":2757:2779  wards[msg.sender] == 1 */\n      eq\n        /* \"frax/Frax.sol\":2749:2803  require(wards[msg.sender] == 1, \"Frax/not-authorized\") */\n      tag_190\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_190:\n        /* \"frax/Frax.sol\":5782:5796  dailyFraxLimit */\n      0x02\n        /* \"frax/Frax.sol\":5782:5805  dailyFraxLimit = _limit */\n      sstore\n        /* \"frax/Frax.sol\":5712:5812  function adjustDailyFraxLimit(uint256 _limit) external auth {... */\n      jump\t// out\n        /* \"frax/Frax.sol\":3060:3089  uint256 public dailyFraxLimit */\n    tag_114:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"frax/Frax.sol\":4573:4712  function allowance(address account_, address sender_) external view returns (uint256) {... */\n    tag_117:\n        /* \"frax/Frax.sol\":4650:4657  uint256 */\n      0x00\n        /* \"frax/Frax.sol\":4676:4705  _allowance(account_, sender_) */\n      tag_122\n        /* \"frax/Frax.sol\":4687:4695  account_ */\n      dup4\n        /* \"frax/Frax.sol\":4697:4704  sender_ */\n      dup4\n        /* \"frax/Frax.sol\":4676:4686  _allowance */\n      tag_128\n        /* \"frax/Frax.sol\":4676:4705  _allowance(account_, sender_) */\n      jump\t// in\n        /* \"frax/Frax.sol\":7598:7698  function pull(address usr, uint256 wad) external {... */\n    tag_120:\n        /* \"frax/Frax.sol\":7657:7691  transferFrom(usr, msg.sender, wad) */\n      tag_186\n        /* \"frax/Frax.sol\":7670:7673  usr */\n      dup3\n        /* \"frax/Frax.sol\":7675:7685  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":7687:7690  wad */\n      dup4\n        /* \"frax/Frax.sol\":7657:7669  transferFrom */\n      tag_49\n        /* \"frax/Frax.sol\":7657:7691  transferFrom(usr, msg.sender, wad) */\n      jump\t// in\n        /* \"frax/Frax.sol\":7161:7346  function _approve(address usr, uint256 wad) internal returns (bool) {... */\n    tag_123:\n        /* \"frax/Frax.sol\":7250:7260  msg.sender */\n      caller\n        /* \"frax/Frax.sol\":7223:7227  bool */\n      0x00\n        /* \"frax/Frax.sol\":7239:7261  allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":7239:7249  allowances */\n      0x04\n        /* \"frax/Frax.sol\":7239:7261  allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":7239:7266  allowances[msg.sender][usr] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"frax/Frax.sol\":7239:7272  allowances[msg.sender][usr] = wad */\n      dup7\n      swap1\n      sstore\n        /* \"frax/Frax.sol\":7288:7318  Approval(msg.sender, usr, wad) */\n      dup2\n      mload\n      dup7\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"frax/Frax.sol\":7223:7227  bool */\n      swap4\n      swap5\n        /* \"frax/Frax.sol\":7239:7266  allowances[msg.sender][usr] */\n      swap1\n      swap4\n        /* \"frax/Frax.sol\":7250:7260  msg.sender */\n      swap1\n      swap3\n        /* \"frax/Frax.sol\":7288:7318  Approval(msg.sender, usr, wad) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      pop\n        /* \"frax/Frax.sol\":7335:7339  true */\n      0x01\n        /* \"frax/Frax.sol\":7161:7346  function _approve(address usr, uint256 wad) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"frax/Frax.sol\":4718:4858  function _allowance(address account_, address sender_) internal view returns (uint256) {... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"frax/Frax.sol\":4822:4842  allowances[account_] */\n      swap2\n      dup3\n      and\n        /* \"frax/Frax.sol\":4796:4803  uint256 */\n      0x00\n        /* \"frax/Frax.sol\":4822:4842  allowances[account_] */\n      swap1\n      dup2\n      mstore\n        /* \"frax/Frax.sol\":4822:4832  allowances */\n      0x04\n        /* \"frax/Frax.sol\":4822:4842  allowances[account_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"frax/Frax.sol\":4822:4851  allowances[account_][sender_] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"frax/Frax.sol\":4718:4858  function _allowance(address account_, address sender_) internal view returns (uint256) {... */\n      jump\t// out\n        /* \"frax/Frax.sol\":3666:3777  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_134:\n        /* \"frax/Frax.sol\":3758:3763  x - y */\n      dup1\n      dup3\n      sub\n        /* \"frax/Frax.sol\":3753:3769  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"frax/Frax.sol\":3745:3770  require((z = x - y) <= x) */\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"frax/Frax.sol\":3549:3660  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_137:\n        /* \"frax/Frax.sol\":3641:3646  x + y */\n      dup1\n      dup3\n      add\n        /* \"frax/Frax.sol\":3636:3652  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"frax/Frax.sol\":3628:3653  require((z = x + y) >= x) */\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207fa7ee403c62a577f017f805fb12e951ea23b35413022bbbb97e57dc193dcbe064736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516112c63803806112c68339818101604052602081101561003357600080fd5b5051336000908152602081815260409182902060019081905582518084018452600a815269232920ac102a27a5a2a760b11b9083015282518084018452908152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0b5e63856806857c7af67a3841d8148fce118228c7167c9e8705ab68578b5d9f818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101939093523060a0808501919091528251808503909101815260c0909301909152815191012060085569021e19e0c9bab240000060025561118f806101376000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80637ecebe00116100f9578063b753a98c11610097578063d3fd35ec11610071578063d3fd35ec14610545578063d7f1bf1214610562578063dd62ed3e1461056a578063f2d5d56b14610598576101a9565b8063b753a98c146104bd578063bb35783b146104e9578063bf353dbb1461051f576101a9565b80639c52a7f1116100d35780639c52a7f1146104195780639dc29fac1461043f5780639e16de341461046b578063a9059cbb14610491576101a9565b80637ecebe00146103915780638fcbaf0c146103b757806395d89b4114610411576101a9565b80633644e5151161016657806354fd4d501161014057806354fd4d501461033d57806365fae35e1461031757806370a0823114610345578063798247ae1461036b576101a9565b80633644e515146102e157806340c10f19146102e95780635422224e14610317576101a9565b806306fdde03146101ae578063095ea7b31461022b57806318160ddd1461026b57806323b872dd1461028557806330adf81f146102bb578063313ce567146102c3575b600080fd5b6101b66105c4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f05781810151838201526020016101d8565b50505050905090810190601f16801561021d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102576004803603604081101561024157600080fd5b506001600160a01b0381351690602001356105ea565b604080519115158252519081900360200190f35b6102736105ff565b60408051918252519081900360200190f35b6102576004803603606081101561029b57600080fd5b506001600160a01b03813581169160208101359091169060400135610605565b6102736107e0565b6102cb610804565b6040805160ff9092168252519081900360200190f35b610273610809565b610315600480360360408110156102ff57600080fd5b506001600160a01b03813516906020013561080f565b005b6103156004803603602081101561032d57600080fd5b50356001600160a01b03166109c5565b6101b6610a3c565b6102736004803603602081101561035b57600080fd5b50356001600160a01b0316610a59565b6102736004803603602081101561038157600080fd5b50356001600160a01b0316610a6b565b610273600480360360208110156103a757600080fd5b50356001600160a01b0316610a7d565b61031560048036036101008110156103ce57600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610a8f565b6101b6610d8d565b6103156004803603602081101561042f57600080fd5b50356001600160a01b0316610dad565b6103156004803603604081101561045557600080fd5b506001600160a01b038135169060200135610e21565b6102736004803603602081101561048157600080fd5b50356001600160a01b0316610fda565b610257600480360360408110156104a757600080fd5b506001600160a01b038135169060200135610fec565b610315600480360360408110156104d357600080fd5b506001600160a01b038135169060200135610ff9565b610315600480360360608110156104ff57600080fd5b506001600160a01b03813581169160208101359091169060400135611009565b6102736004803603602081101561053557600080fd5b50356001600160a01b031661101a565b6103156004803603602081101561055b57600080fd5b503561102c565b61027361108b565b6102736004803603604081101561058057600080fd5b506001600160a01b0381358116916020013516611091565b610315600480360360408110156105ae57600080fd5b506001600160a01b03813516906020013561109d565b6040518060400160405280600a815260200169232920ac102a27a5a2a760b11b81525081565b60006105f683836110a8565b90505b92915050565b60015481565b6001600160a01b03831660009081526003602052604081205482111561066e576040805162461bcd60e51b8152602060048201526019602482015278467261782f696e73756666696369656e742d62616c616e636560381b604482015290519081900360640190fd5b6001600160a01b0384163314801590610692575060001961068f853361110e565b14155b1561072d57816106a2853361110e565b10156106f5576040805162461bcd60e51b815260206004820152601b60248201527f467261782f696e73756666696369656e742d616c6c6f77616e63650000000000604482015290519081900360640190fd5b610708610702853361110e565b83611139565b6001600160a01b03851660009081526004602090815260408083203384529091529020555b6001600160a01b0384166000908152600360205260409020546107509083611139565b6001600160a01b03808616600090815260036020526040808220939093559085168152205461077f9083611149565b6001600160a01b0380851660008181526003602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601281565b60085481565b336000908152602081905260409020546109345760025433600090815260076020526040902054610841908390611149565b11158061087857503360009081526006602052604090205461196490610868904390611139565b1015801561087857506002548111155b6108c1576040805162461bcd60e51b815260206004820152601560248201527413dd995c8819185a5b1e48119c985e08131a5b5a5d605a1b604482015290519081900360640190fd5b33600090815260066020526040902054611964906108e0904390611139565b106109095733600090815260076020908152604080832084905560069091529020439055610934565b336000908152600760205260409020546109239082611149565b336000908152600760205260409020555b6001600160a01b0382166000908152600360205260409020546109579082611149565b6001600160a01b03831660009081526003602052604090205560015461097d9082611149565b6001556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b33600090815260208190526040902054600114610a1f576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959606a1b604482015290519081900360640190fd5b6001600160a01b0316600090815260208190526040902060019055565b604051806040016040528060018152602001603160f81b81525081565b60036020526000908152604090205481565b60066020526000908152604090205481565b60056020526000908152604090205481565b600854604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610b90576040805162461bcd60e51b81526020600482015260166024820152750467261782f696e76616c69642d616464726573732d360541b604482015290519081900360640190fd5b60018185858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610bea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610c4f576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bda5b9d985b1a590b5c195c9b5a5d606a1b604482015290519081900360640190fd5b851580610c5c5750854211155b610ca3576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdc195c9b5a5d0b595e1c1a5c9959606a1b604482015290519081900360640190fd5b6001600160a01b03891660009081526005602052604090208054600181019091558714610d0c576040805162461bcd60e51b8152602060048201526012602482015271467261782f696e76616c69642d6e6f6e636560701b604482015290519081900360640190fd5b600085610d1a576000610d1e565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600481526020016308ca482b60e31b81525081565b33600090815260208190526040902054600114610e07576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959606a1b604482015290519081900360640190fd5b6001600160a01b0316600090815260208190526040812055565b6001600160a01b038216600090815260036020526040902054811115610e8a576040805162461bcd60e51b8152602060048201526019602482015278467261782f696e73756666696369656e742d62616c616e636560381b604482015290519081900360640190fd5b6001600160a01b0382163314801590610eae5750600019610eab833361110e565b14155b15610f495780610ebe833361110e565b1015610f11576040805162461bcd60e51b815260206004820152601b60248201527f467261782f696e73756666696369656e742d616c6c6f77616e63650000000000604482015290519081900360640190fd5b610f24610f1e833361110e565b82611139565b6001600160a01b03831660009081526004602090815260408083203384529091529020555b6001600160a01b038216600090815260036020526040902054610f6c9082611139565b6001600160a01b038316600090815260036020526040902055600154610f929082611139565b6001556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60076020526000908152604090205481565b60006105f6338484610605565b611004338383610605565b505050565b611014838383610605565b50505050565b60006020819052908152604090205481565b33600090815260208190526040902054600114611086576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959606a1b604482015290519081900360640190fd5b600255565b60025481565b60006105f6838361110e565b611004823383610605565b3360008181526004602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b808203828111156105f957600080fd5b808201828110156105f957600080fdfea26469706673582212207fa7ee403c62a577f017f805fb12e951ea23b35413022bbbb97e57dc193dcbe064736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12C6 CODESIZE SUB DUP1 PUSH2 0x12C6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x232920AC102A27A5A2A7 PUSH1 0xB1 SHL SWAP1 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 DUP4 ADD MSTORE PUSH32 0xB5E63856806857C7AF67A3841D8148FCE118228C7167C9E8705AB68578B5D9F DUP2 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SSTORE PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x2 SSTORE PUSH2 0x118F DUP1 PUSH2 0x137 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB753A98C GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3FD35EC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD3FD35EC EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xD7F1BF12 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xF2D5D56B EQ PUSH2 0x598 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xB753A98C EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xBB35783B EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xBF353DBB EQ PUSH2 0x51F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x9C52A7F1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9C52A7F1 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x9E16DE34 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x491 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x411 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x65FAE35E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x798247AE EQ PUSH2 0x36B JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x5422224E EQ PUSH2 0x317 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x605 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x101A JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x273 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x232920AC102A27A5A2A7 PUSH1 0xB1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x467261782F696E73756666696369656E742D62616C616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x692 JUMPI POP PUSH1 0x0 NOT PUSH2 0x68F DUP6 CALLER PUSH2 0x110E JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x72D JUMPI DUP2 PUSH2 0x6A2 DUP6 CALLER PUSH2 0x110E JUMP JUMPDEST LT ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x467261782F696E73756666696369656E742D616C6C6F77616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x708 PUSH2 0x702 DUP6 CALLER PUSH2 0x110E JUMP JUMPDEST DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x750 SWAP1 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x77F SWAP1 DUP4 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP9 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x934 JUMPI PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x841 SWAP1 DUP4 SWAP1 PUSH2 0x1149 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0x878 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1964 SWAP1 PUSH2 0x868 SWAP1 NUMBER SWAP1 PUSH2 0x1139 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI POP PUSH1 0x2 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x8C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DD995C8819185A5B1E48119C985E08131A5B5A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1964 SWAP1 PUSH2 0x8E0 SWAP1 NUMBER SWAP1 PUSH2 0x1139 JUMP JUMPDEST LT PUSH2 0x909 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 NUMBER SWAP1 SSTORE PUSH2 0x934 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x923 SWAP1 DUP3 PUSH2 0x1149 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x957 SWAP1 DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0x97D SWAP1 DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xA1F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0xB90 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x467261782F696E76616C69642D616464726573732D3 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC4F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0xC5C JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xCA3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP8 EQ PUSH2 0xD0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x467261782F696E76616C69642D6E6F6E6365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0xD1A JUMPI PUSH1 0x0 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x8CA482B PUSH1 0xE3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xE07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x467261782F696E73756666696369656E742D62616C616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xEAE JUMPI POP PUSH1 0x0 NOT PUSH2 0xEAB DUP4 CALLER PUSH2 0x110E JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0xF49 JUMPI DUP1 PUSH2 0xEBE DUP4 CALLER PUSH2 0x110E JUMP JUMPDEST LT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x467261782F696E73756666696369656E742D616C6C6F77616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF24 PUSH2 0xF1E DUP4 CALLER PUSH2 0x110E JUMP JUMPDEST DUP3 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF6C SWAP1 DUP3 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0xF92 SWAP1 DUP3 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 CALLER DUP5 DUP5 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x1004 CALLER DUP4 DUP4 PUSH2 0x605 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1014 DUP4 DUP4 DUP4 PUSH2 0x605 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x1086 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 DUP4 DUP4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x1004 DUP3 CALLER DUP4 PUSH2 0x605 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xA7EE403C62A577F017F805FB12E951EA23B35413022BBBB97E57DC193DCBE064 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "2308:6465:0:-:0;;;4110:457;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4110:457:0;4156:10;4150:5;:17;;;4110:457;4150:17;;;;;;;;4170:1;4150:21;;;;4380:4;;;;;;;;;;-1:-1:-1;;;4380:4:0;;;;4420:7;;;;;;;;;;-1:-1:-1;;;4420:7:0;;;;4223:277;;4251:95;4223:277;;;;4364:22;4223:277;;;;4404:25;4223:277;;;;;;;;;;;4481:4;4223:277;;;;;;;;;;;;;;;;;;;;;;;;;4200:310;;;;;4181:16;:329;4537:23;4520:14;:40;2308:6465;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80637ecebe00116100f9578063b753a98c11610097578063d3fd35ec11610071578063d3fd35ec14610545578063d7f1bf1214610562578063dd62ed3e1461056a578063f2d5d56b14610598576101a9565b8063b753a98c146104bd578063bb35783b146104e9578063bf353dbb1461051f576101a9565b80639c52a7f1116100d35780639c52a7f1146104195780639dc29fac1461043f5780639e16de341461046b578063a9059cbb14610491576101a9565b80637ecebe00146103915780638fcbaf0c146103b757806395d89b4114610411576101a9565b80633644e5151161016657806354fd4d501161014057806354fd4d501461033d57806365fae35e1461031757806370a0823114610345578063798247ae1461036b576101a9565b80633644e515146102e157806340c10f19146102e95780635422224e14610317576101a9565b806306fdde03146101ae578063095ea7b31461022b57806318160ddd1461026b57806323b872dd1461028557806330adf81f146102bb578063313ce567146102c3575b600080fd5b6101b66105c4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f05781810151838201526020016101d8565b50505050905090810190601f16801561021d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102576004803603604081101561024157600080fd5b506001600160a01b0381351690602001356105ea565b604080519115158252519081900360200190f35b6102736105ff565b60408051918252519081900360200190f35b6102576004803603606081101561029b57600080fd5b506001600160a01b03813581169160208101359091169060400135610605565b6102736107e0565b6102cb610804565b6040805160ff9092168252519081900360200190f35b610273610809565b610315600480360360408110156102ff57600080fd5b506001600160a01b03813516906020013561080f565b005b6103156004803603602081101561032d57600080fd5b50356001600160a01b03166109c5565b6101b6610a3c565b6102736004803603602081101561035b57600080fd5b50356001600160a01b0316610a59565b6102736004803603602081101561038157600080fd5b50356001600160a01b0316610a6b565b610273600480360360208110156103a757600080fd5b50356001600160a01b0316610a7d565b61031560048036036101008110156103ce57600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610a8f565b6101b6610d8d565b6103156004803603602081101561042f57600080fd5b50356001600160a01b0316610dad565b6103156004803603604081101561045557600080fd5b506001600160a01b038135169060200135610e21565b6102736004803603602081101561048157600080fd5b50356001600160a01b0316610fda565b610257600480360360408110156104a757600080fd5b506001600160a01b038135169060200135610fec565b610315600480360360408110156104d357600080fd5b506001600160a01b038135169060200135610ff9565b610315600480360360608110156104ff57600080fd5b506001600160a01b03813581169160208101359091169060400135611009565b6102736004803603602081101561053557600080fd5b50356001600160a01b031661101a565b6103156004803603602081101561055b57600080fd5b503561102c565b61027361108b565b6102736004803603604081101561058057600080fd5b506001600160a01b0381358116916020013516611091565b610315600480360360408110156105ae57600080fd5b506001600160a01b03813516906020013561109d565b6040518060400160405280600a815260200169232920ac102a27a5a2a760b11b81525081565b60006105f683836110a8565b90505b92915050565b60015481565b6001600160a01b03831660009081526003602052604081205482111561066e576040805162461bcd60e51b8152602060048201526019602482015278467261782f696e73756666696369656e742d62616c616e636560381b604482015290519081900360640190fd5b6001600160a01b0384163314801590610692575060001961068f853361110e565b14155b1561072d57816106a2853361110e565b10156106f5576040805162461bcd60e51b815260206004820152601b60248201527f467261782f696e73756666696369656e742d616c6c6f77616e63650000000000604482015290519081900360640190fd5b610708610702853361110e565b83611139565b6001600160a01b03851660009081526004602090815260408083203384529091529020555b6001600160a01b0384166000908152600360205260409020546107509083611139565b6001600160a01b03808616600090815260036020526040808220939093559085168152205461077f9083611149565b6001600160a01b0380851660008181526003602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601281565b60085481565b336000908152602081905260409020546109345760025433600090815260076020526040902054610841908390611149565b11158061087857503360009081526006602052604090205461196490610868904390611139565b1015801561087857506002548111155b6108c1576040805162461bcd60e51b815260206004820152601560248201527413dd995c8819185a5b1e48119c985e08131a5b5a5d605a1b604482015290519081900360640190fd5b33600090815260066020526040902054611964906108e0904390611139565b106109095733600090815260076020908152604080832084905560069091529020439055610934565b336000908152600760205260409020546109239082611149565b336000908152600760205260409020555b6001600160a01b0382166000908152600360205260409020546109579082611149565b6001600160a01b03831660009081526003602052604090205560015461097d9082611149565b6001556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b33600090815260208190526040902054600114610a1f576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959606a1b604482015290519081900360640190fd5b6001600160a01b0316600090815260208190526040902060019055565b604051806040016040528060018152602001603160f81b81525081565b60036020526000908152604090205481565b60066020526000908152604090205481565b60056020526000908152604090205481565b600854604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610b90576040805162461bcd60e51b81526020600482015260166024820152750467261782f696e76616c69642d616464726573732d360541b604482015290519081900360640190fd5b60018185858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610bea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610c4f576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bda5b9d985b1a590b5c195c9b5a5d606a1b604482015290519081900360640190fd5b851580610c5c5750854211155b610ca3576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdc195c9b5a5d0b595e1c1a5c9959606a1b604482015290519081900360640190fd5b6001600160a01b03891660009081526005602052604090208054600181019091558714610d0c576040805162461bcd60e51b8152602060048201526012602482015271467261782f696e76616c69642d6e6f6e636560701b604482015290519081900360640190fd5b600085610d1a576000610d1e565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600481526020016308ca482b60e31b81525081565b33600090815260208190526040902054600114610e07576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959606a1b604482015290519081900360640190fd5b6001600160a01b0316600090815260208190526040812055565b6001600160a01b038216600090815260036020526040902054811115610e8a576040805162461bcd60e51b8152602060048201526019602482015278467261782f696e73756666696369656e742d62616c616e636560381b604482015290519081900360640190fd5b6001600160a01b0382163314801590610eae5750600019610eab833361110e565b14155b15610f495780610ebe833361110e565b1015610f11576040805162461bcd60e51b815260206004820152601b60248201527f467261782f696e73756666696369656e742d616c6c6f77616e63650000000000604482015290519081900360640190fd5b610f24610f1e833361110e565b82611139565b6001600160a01b03831660009081526004602090815260408083203384529091529020555b6001600160a01b038216600090815260036020526040902054610f6c9082611139565b6001600160a01b038316600090815260036020526040902055600154610f929082611139565b6001556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60076020526000908152604090205481565b60006105f6338484610605565b611004338383610605565b505050565b611014838383610605565b50505050565b60006020819052908152604090205481565b33600090815260208190526040902054600114611086576040805162461bcd60e51b8152602060048201526013602482015272119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959606a1b604482015290519081900360640190fd5b600255565b60025481565b60006105f6838361110e565b611004823383610605565b3360008181526004602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b808203828111156105f957600080fd5b808201828110156105f957600080fdfea26469706673582212207fa7ee403c62a577f017f805fb12e951ea23b35413022bbbb97e57dc193dcbe064736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB753A98C GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3FD35EC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD3FD35EC EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xD7F1BF12 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xF2D5D56B EQ PUSH2 0x598 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xB753A98C EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xBB35783B EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xBF353DBB EQ PUSH2 0x51F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x9C52A7F1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9C52A7F1 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x9E16DE34 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x491 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x411 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x65FAE35E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x798247AE EQ PUSH2 0x36B JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x5422224E EQ PUSH2 0x317 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x605 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x101A JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x273 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x232920AC102A27A5A2A7 PUSH1 0xB1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x467261782F696E73756666696369656E742D62616C616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x692 JUMPI POP PUSH1 0x0 NOT PUSH2 0x68F DUP6 CALLER PUSH2 0x110E JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x72D JUMPI DUP2 PUSH2 0x6A2 DUP6 CALLER PUSH2 0x110E JUMP JUMPDEST LT ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x467261782F696E73756666696369656E742D616C6C6F77616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x708 PUSH2 0x702 DUP6 CALLER PUSH2 0x110E JUMP JUMPDEST DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x750 SWAP1 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x77F SWAP1 DUP4 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP9 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x934 JUMPI PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x841 SWAP1 DUP4 SWAP1 PUSH2 0x1149 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0x878 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1964 SWAP1 PUSH2 0x868 SWAP1 NUMBER SWAP1 PUSH2 0x1139 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI POP PUSH1 0x2 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x8C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DD995C8819185A5B1E48119C985E08131A5B5A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1964 SWAP1 PUSH2 0x8E0 SWAP1 NUMBER SWAP1 PUSH2 0x1139 JUMP JUMPDEST LT PUSH2 0x909 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 NUMBER SWAP1 SSTORE PUSH2 0x934 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x923 SWAP1 DUP3 PUSH2 0x1149 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x957 SWAP1 DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0x97D SWAP1 DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xA1F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0xB90 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x467261782F696E76616C69642D616464726573732D3 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC4F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0xC5C JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xCA3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP8 EQ PUSH2 0xD0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x467261782F696E76616C69642D6E6F6E6365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0xD1A JUMPI PUSH1 0x0 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x8CA482B PUSH1 0xE3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xE07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x467261782F696E73756666696369656E742D62616C616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xEAE JUMPI POP PUSH1 0x0 NOT PUSH2 0xEAB DUP4 CALLER PUSH2 0x110E JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0xF49 JUMPI DUP1 PUSH2 0xEBE DUP4 CALLER PUSH2 0x110E JUMP JUMPDEST LT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x467261782F696E73756666696369656E742D616C6C6F77616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF24 PUSH2 0xF1E DUP4 CALLER PUSH2 0x110E JUMP JUMPDEST DUP3 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF6C SWAP1 DUP3 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH2 0xF92 SWAP1 DUP3 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 CALLER DUP5 DUP5 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x1004 CALLER DUP4 DUP4 PUSH2 0x605 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1014 DUP4 DUP4 DUP4 PUSH2 0x605 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x1086 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 DUP4 DUP4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x1004 DUP3 CALLER DUP4 PUSH2 0x605 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xA7EE403C62A577F017F805FB12E951EA23B35413022BBBB97E57DC193DCBE064 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "2308:6465:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2853:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7352:113;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7352:113:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3028:26;;;:::i;:::-;;;;;;;;;;;;;;;;5017:608;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5017:608:0;;;;;;;;;;;;;;;;;:::i;3995:108::-;;;:::i;2987:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3814:31;;;:::i;5818:807::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5818:807:0;;;;;;;;:::i;:::-;;5631:75;;;;;;;;;;;;;;;;-1:-1:-1;5631:75:0;-1:-1:-1;;;;;5631:75:0;;:::i;2945:36::-;;;:::i;3096:44::-;;;;;;;;;;;;;;;;-1:-1:-1;3096:44:0;-1:-1:-1;;;;;3096:44:0;;:::i;3265:50::-;;;;;;;;;;;;;;;;-1:-1:-1;3265:50:0;-1:-1:-1;;;;;3265:50:0;;:::i;3218:41::-;;;;;;;;;;;;;;;;-1:-1:-1;3218:41:0;-1:-1:-1;;;;;3218:41:0;;:::i;7882:889::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7882:889:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2901:38::-;;;:::i;2640:77::-;;;;;;;;;;;;;;;;-1:-1:-1;2640:77:0;-1:-1:-1;;;;;2640:77:0;;:::i;6631:524::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6631:524:0;;;;;;;;:::i;3321:50::-;;;;;;;;;;;;;;;;-1:-1:-1;3321:50:0;-1:-1:-1;;;;;3321:50:0;;:::i;4885:126::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4885:126:0;;;;;;;;:::i;7492:100::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7492:100:0;;;;;;;;:::i;7704:136::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7704:136:0;;;;;;;;;;;;;;;;;:::i;2510:40::-;;;;;;;;;;;;;;;;-1:-1:-1;2510:40:0;-1:-1:-1;;;;;2510:40:0;;:::i;5712:100::-;;;;;;;;;;;;;;;;-1:-1:-1;5712:100:0;;:::i;3060:29::-;;;:::i;4573:139::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4573:139:0;;;;;;;;;;:::i;7598:100::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7598:100:0;;;;;;;;:::i;2853:42::-;;;;;;;;;;;;;;-1:-1:-1;;;2853:42:0;;;;:::o;7352:113::-;7415:4;7438:20;7447:4;7453;7438:8;:20::i;:::-;7431:27;;7352:113;;;;;:::o;3028:26::-;;;;:::o;5017:608::-;-1:-1:-1;;;;;5148:14:0;;5124:4;5148:14;;;:9;:14;;;;;;:21;-1:-1:-1;5148:21:0;5140:59;;;;;-1:-1:-1;;;5140:59:0;;;;;;;;;;;;-1:-1:-1;;;5140:59:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;5213:17:0;;5220:10;5213:17;;;;:63;;;-1:-1:-1;;5234:27:0;5245:3;5250:10;5234;:27::i;:::-;:42;;5213:63;5209:249;;;5331:3;5300:27;5311:3;5316:10;5300;:27::i;:::-;:34;;5292:74;;;;;-1:-1:-1;;;5292:74:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;5410:37;5414:27;5425:3;5430:10;5414;:27::i;:::-;5443:3;5410;:37::i;:::-;-1:-1:-1;;;;;5380:15:0;;;;;;:10;:15;;;;;;;;5396:10;5380:27;;;;;;;:67;5209:249;-1:-1:-1;;;;;5488:14:0;;;;;;:9;:14;;;;;;5484:24;;5504:3;5484;:24::i;:::-;-1:-1:-1;;;;;5467:14:0;;;;;;;:9;:14;;;;;;:41;;;;5539:14;;;;;;;5535:24;;5555:3;5535;:24::i;:::-;-1:-1:-1;;;;;5518:14:0;;;;;;;:9;:14;;;;;;;;;:41;;;;5574:23;;;;;;;5518:14;;5574:23;;;;;;;;;;;;;-1:-1:-1;5614:4:0;5017:608;;;;;:::o;3995:108::-;4037:66;3995:108;:::o;2987:35::-;3020:2;2987:35;:::o;3814:31::-;;;;:::o;5818:807::-;5887:10;5881:5;:17;;;;;;;;;;;5877:598;;5985:14;;5969:10;5953:27;;;;:15;:27;;;;;;5944:37;;5948:3;;5944;:37::i;:::-;:55;;:160;;;-1:-1:-1;6058:10:0;6042:27;;;;:15;:27;;;;;;6074:4;;6024:46;;6028:12;;6024:3;:46::i;:::-;:54;;:79;;;;;6089:14;;6082:3;:21;;6024:79;5919:240;;;;;-1:-1:-1;;;5919:240:0;;;;;;;;;;;;-1:-1:-1;;;5919:240:0;;;;;;;;;;;;;;;6211:10;6195:27;;;;:15;:27;;;;;;6227:4;;6177:46;;6181:12;;6177:3;:46::i;:::-;:54;6173:292;;6267:10;6251:27;;;;:15;:27;;;;;;;;:33;;;6302:15;:27;;;;;6332:12;6302:42;;6173:292;;;6433:10;6417:27;;;;:15;:27;;;;;;6413:37;;6446:3;6413;:37::i;:::-;6399:10;6383:27;;;;:15;:27;;;;;:67;6173:292;-1:-1:-1;;;;;6506:14:0;;;;;;:9;:14;;;;;;6502:24;;6522:3;6502;:24::i;:::-;-1:-1:-1;;;;;6485:14:0;;;;;;:9;:14;;;;;:41;6555:11;;6551:21;;6568:3;6551;:21::i;:::-;6537:11;:35;6588:30;;;;;;;;-1:-1:-1;;;;;6588:30:0;;;6605:1;;6588:30;;;;;;;;;5818:807;;:::o;5631:75::-;2763:10;2757:5;:17;;;;;;;;;;;2778:1;2757:22;2749:54;;;;;-1:-1:-1;;;2749:54:0;;;;;;;;;;;;-1:-1:-1;;;2749:54:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;5685:10:0::1;:5;:10:::0;;;::::1;::::0;;;;;;5698:1:::1;5685:14:::0;;5631:75::o;2945:36::-;;;;;;;;;;;;;;-1:-1:-1;;;2945:36:0;;;;:::o;3096:44::-;;;;;;;;;;;;;:::o;3265:50::-;;;;;;;;;;;;;:::o;3218:41::-;;;;;;;;;;;;;:::o;7882:889::-;8198:16;;8242:68;;;4037:66;8242:68;;;;;;;;-1:-1:-1;;;;;8242:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8232:79;;;;;;-1:-1:-1;;;8136:189:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8113:222;;;;;;;;;;;8346:55;;;;;-1:-1:-1;;;8346:55:0;;;;;;;;;;;;-1:-1:-1;;;8346:55:0;;;;;;;;;;;;;;;8429:26;8439:6;8447:1;8450;8453;8429:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8419:36:0;:6;-1:-1:-1;;;;;8419:36:0;;8411:68;;;;;-1:-1:-1;;;8411:68:0;;;;;;;;;;;;-1:-1:-1;;;8411:68:0;;;;;;;;;;;;;;;8497:11;;;:40;;;8531:6;8512:15;:25;;8497:40;8489:72;;;;;-1:-1:-1;;;8489:72:0;;;;;;;;;;;;-1:-1:-1;;;8489:72:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;8588:14:0;;;;;;:6;:14;;;;;:16;;;;;;;;8579:25;;8571:56;;;;;-1:-1:-1;;;8571:56:0;;;;;;;;;;;;-1:-1:-1;;;8571:56:0;;;;;;;;;;;;;;;8637:11;8651:7;:25;;8675:1;8651:25;;;-1:-1:-1;;8651:25:0;-1:-1:-1;;;;;8686:18:0;;;;;;;:10;:18;;;;;;;;:27;;;;;;;;;;;;;:33;;;8734:30;;;;;;;8637:39;;-1:-1:-1;8686:27:0;;:18;;8734:30;;;;;;;;;7882:889;;;;;;;;;;:::o;2901:38::-;;;;;;;;;;;;;;-1:-1:-1;;;2901:38:0;;;;:::o;2640:77::-;2763:10:::1;2757:5;:17:::0;;;::::1;::::0;;;;;;;2778:1:::1;2757:22;2749:54;;;::::0;;-1:-1:-1;;;2749:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2749:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;2696:10:0::2;2709:1;2696:10:::0;;;::::2;::::0;;;;;;:14;2640:77::o;6631:524::-;-1:-1:-1;;;;;6698:14:0;;;;;;:9;:14;;;;;;:21;-1:-1:-1;6698:21:0;6690:59;;;;;-1:-1:-1;;;6690:59:0;;;;;;;;;;;;-1:-1:-1;;;6690:59:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;6763:17:0;;6770:10;6763:17;;;;:63;;;-1:-1:-1;;6784:27:0;6795:3;6800:10;6784;:27::i;:::-;:42;;6763:63;6759:249;;;6881:3;6850:27;6861:3;6866:10;6850;:27::i;:::-;:34;;6842:74;;;;;-1:-1:-1;;;6842:74:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6960:37;6964:27;6975:3;6980:10;6964;:27::i;:::-;6993:3;6960;:37::i;:::-;-1:-1:-1;;;;;6930:15:0;;;;;;:10;:15;;;;;;;;6946:10;6930:27;;;;;;;:67;6759:249;-1:-1:-1;;;;;7038:14:0;;;;;;:9;:14;;;;;;7034:24;;7054:3;7034;:24::i;:::-;-1:-1:-1;;;;;7017:14:0;;;;;;:9;:14;;;;;:41;7086:11;;7082:21;;7099:3;7082;:21::i;:::-;7068:11;:35;7118:30;;;;;;;;7140:1;;-1:-1:-1;;;;;7118:30:0;;;;;;;;;;;;6631:524;;:::o;3321:50::-;;;;;;;;;;;;;:::o;4885:126::-;4947:4;4970:34;4983:10;4995:3;5000;4970:12;:34::i;7492:100::-;7551:34;7564:10;7576:3;7581;7551:12;:34::i;:::-;;7492:100;;:::o;7704:136::-;7806:27;7819:3;7824;7829;7806:12;:27::i;:::-;;7704:136;;;:::o;2510:40::-;;;;;;;;;;;;;;:::o;5712:100::-;2763:10;2757:5;:17;;;;;;;;;;;2778:1;2757:22;2749:54;;;;;-1:-1:-1;;;2749:54:0;;;;;;;;;;;;-1:-1:-1;;;2749:54:0;;;;;;;;;;;;;;;5782:14:::1;:23:::0;5712:100::o;3060:29::-;;;;:::o;4573:139::-;4650:7;4676:29;4687:8;4697:7;4676:10;:29::i;7598:100::-;7657:34;7670:3;7675:10;7687:3;7657:12;:34::i;7161:185::-;7250:10;7223:4;7239:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;7239:27:0;;;;;;;;;;;:33;;;7288:30;;;;;;;7223:4;;7239:27;;7250:10;;7288:30;;;;;;;;-1:-1:-1;7335:4:0;7161:185;;;;:::o;4718:140::-;-1:-1:-1;;;;;4822:20:0;;;4796:7;4822:20;;;:10;:20;;;;;;;;:29;;;;;;;;;;;;;4718:140::o;3666:111::-;3758:5;;;3753:16;;;;3745:25;;;;;3549:111;3641:5;;;3636:16;;;;3628:25;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "899000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1044",
								"PERMIT_TYPEHASH()": "310",
								"addAuth(address)": "21284",
								"adjustDailyFraxLimit(uint256)": "21127",
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "22372",
								"balanceOf(address)": "1213",
								"burn(address,uint256)": "infinite",
								"dailyFraxLimit()": "1064",
								"decimals()": "341",
								"deny(address)": "6233",
								"fraxMintedToday(address)": "1213",
								"lastMintRestart(address)": "1235",
								"mint(address,uint256)": "infinite",
								"move(address,address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1170",
								"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "infinite",
								"pull(address,uint256)": "infinite",
								"push(address,uint256)": "infinite",
								"rely(address)": "21261",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"version()": "infinite",
								"wards(address)": "1216"
							},
							"internal": {
								"_allowance(address,address)": "992",
								"_approve(address,uint256)": "infinite",
								"add(uint256,uint256)": "54",
								"sub(uint256,uint256)": "54"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2308,
									"end": 8773,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4156,
									"end": 4166,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4110,
									"end": 4567,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4167,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 4170,
									"end": 4171,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4150,
									"end": 4171,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4171,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4171,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4150,
									"end": 4171,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "232920AC102A27A5A2A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4251,
									"end": 4346,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4364,
									"end": 4386,
									"name": "PUSH",
									"source": 0,
									"value": "B5E63856806857C7AF67A3841D8148FCE118228C7167C9E8705AB68578B5D9F"
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4404,
									"end": 4429,
									"name": "PUSH",
									"source": 0,
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4481,
									"end": 4485,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4223,
									"end": 4500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4200,
									"end": 4510,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4200,
									"end": 4510,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4200,
									"end": 4510,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4200,
									"end": 4510,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4200,
									"end": 4510,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 4181,
									"end": 4197,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4181,
									"end": 4510,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4537,
									"end": 4560,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 4520,
									"end": 4534,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4520,
									"end": 4560,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2308,
									"end": 8773,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207fa7ee403c62a577f017f805fb12e951ea23b35413022bbbb97e57dc193dcbe064736f6c63430007050033",
									".code": [
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "B753A98C"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "D3FD35EC"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "D3FD35EC"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "D7F1BF12"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "F2D5D56B"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "B753A98C"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "BB35783B"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "BF353DBB"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "9C52A7F1"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "9C52A7F1"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "9E16DE34"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "8FCBAF0C"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "65FAE35E"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "798247AE"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "5422224E"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "30ADF81F"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 8773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "232920AC102A27A5A2A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2853,
											"end": 2895,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7415,
											"end": 7419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7447,
											"end": 7451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7431,
											"end": 7458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7431,
											"end": 7458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 7465,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5157,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "467261782F696E73756666696369656E742D62616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5140,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5213,
											"end": 5276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5234,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5245,
											"end": 5248,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5260,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5234,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5234,
											"end": 5261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5234,
											"end": 5261,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5234,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5234,
											"end": 5276,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5234,
											"end": 5276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5276,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5213,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5209,
											"end": 5458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5209,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5209,
											"end": 5458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5311,
											"end": 5314,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5326,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5300,
											"end": 5327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5327,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5300,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "467261782F696E73756666696369656E742D616C6C6F77616E63650000000000"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5292,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5414,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5425,
											"end": 5428,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5440,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5414,
											"end": 5441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5414,
											"end": 5441,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5414,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5410,
											"end": 5447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5410,
											"end": 5447,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5410,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5396,
											"end": 5406,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5447,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5209,
											"end": 5458,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5209,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5504,
											"end": 5507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5535,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5559,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5559,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5559,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5597,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5625,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4103,
											"name": "PUSH",
											"source": 0,
											"value": "EA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB"
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4103,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5877,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5877,
											"end": 6475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5985,
											"end": 5999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5985,
											"end": 5999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5979,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5968,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5944,
											"end": 5981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5944,
											"end": 5981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5944,
											"end": 5981,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5944,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5999,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5944,
											"end": 6104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6058,
											"end": 6068,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6057,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6074,
											"end": 6078,
											"name": "PUSH",
											"source": 0,
											"value": "1964"
										},
										{
											"begin": 6074,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6024,
											"end": 6070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6028,
											"end": 6040,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 6028,
											"end": 6040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6024,
											"end": 6070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6070,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6024,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6024,
											"end": 6103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6089,
											"end": 6103,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6089,
											"end": 6103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6082,
											"end": 6103,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6082,
											"end": 6103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6103,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6024,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DD995C8819185A5B1E48119C985E08131A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5919,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6221,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6227,
											"end": 6231,
											"name": "PUSH",
											"source": 0,
											"value": "1964"
										},
										{
											"begin": 6227,
											"end": 6231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6177,
											"end": 6223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6193,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6177,
											"end": 6223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6177,
											"end": 6223,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6177,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6231,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6277,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6266,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6284,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6251,
											"end": 6284,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6317,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6302,
											"end": 6329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6332,
											"end": 6344,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6344,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6443,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6432,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6413,
											"end": 6450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6446,
											"end": 6449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6413,
											"end": 6450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6413,
											"end": 6450,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6413,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6409,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6173,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6515,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6494,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6526,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6566,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6555,
											"end": 6566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6551,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6551,
											"end": 6572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6551,
											"end": 6572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6551,
											"end": 6572,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6551,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6537,
											"end": 6572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6618,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6625,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2773,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5685,
											"end": 5699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5706,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2981,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3140,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3315,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3259,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4103,
											"name": "PUSH",
											"source": 0,
											"value": "EA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8232,
											"end": 8311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8232,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8232,
											"end": 8311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8232,
											"end": 8311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8232,
											"end": 8311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8232,
											"end": 8311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "PUSH",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "PUSH",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "PUSH",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8113,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "467261782F696E76616C69642D616464726573732D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8439,
											"end": 8445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8450,
											"end": 8451,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 8454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8419,
											"end": 8455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8419,
											"end": 8455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8419,
											"end": 8455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119C985E0BDA5B9D985B1A590B5C195C9B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8411,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8508,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8497,
											"end": 8537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8527,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8537,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8497,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119C985E0BDC195C9B5A5D0B595E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8489,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8602,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8604,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8604,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "467261782F696E76616C69642D6E6F6E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8571,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8637,
											"end": 8648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8651,
											"end": 8658,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8651,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8719,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8637,
											"end": 8676,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8637,
											"end": 8676,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8764,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8771,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8CA482B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2939,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2773,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2717,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6707,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6698,
											"end": 6719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "467261782F696E73756666696369656E742D62616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6690,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6770,
											"end": 6780,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6810,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6784,
											"end": 6811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6811,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6784,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6763,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 7008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6759,
											"end": 7008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6881,
											"end": 6884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6861,
											"end": 6864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6876,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6850,
											"end": 6877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6850,
											"end": 6877,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6850,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6884,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "467261782F696E73756666696369656E742D616C6C6F77616E63650000000000"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6960,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6964,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6980,
											"end": 6990,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6964,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6964,
											"end": 6991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6964,
											"end": 6991,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6964,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 6996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6960,
											"end": 6997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6960,
											"end": 6997,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6960,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 6956,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 7008,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6759,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7047,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 7034,
											"end": 7058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 7057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7034,
											"end": 7058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7034,
											"end": 7058,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 7034,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7058,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7097,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7086,
											"end": 7097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7079,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7068,
											"end": 7103,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 7155,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4885,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4947,
											"end": 4951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4995,
											"end": 4998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4970,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4970,
											"end": 5004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7564,
											"end": 7574,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7592,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7806,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 7819,
											"end": 7822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7829,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7806,
											"end": 7833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7806,
											"end": 7833,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 7806,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7806,
											"end": 7833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2550,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2773,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119C985E0BDB9BDD0B585D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2749,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5782,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5782,
											"end": 5805,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4573,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4650,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4687,
											"end": 4695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4676,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7598,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7670,
											"end": 7673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7685,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7657,
											"end": 7691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7346,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7161,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7260,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7272,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7272,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7227,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7227,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7260,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7161,
											"end": 7346,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7346,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4718,
											"end": 4858,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4718,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4796,
											"end": 4803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4718,
											"end": 4858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3666,
											"end": 3777,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3666,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3758,
											"end": 3763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3758,
											"end": 3763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3758,
											"end": 3763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3769,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3660,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3549,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3628,
											"end": 3653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3653,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"addAuth(address)": "5422224e",
							"adjustDailyFraxLimit(uint256)": "d3fd35ec",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"dailyFraxLimit()": "d7f1bf12",
							"decimals()": "313ce567",
							"deny(address)": "9c52a7f1",
							"fraxMintedToday(address)": "9e16de34",
							"lastMintRestart(address)": "798247ae",
							"mint(address,uint256)": "40c10f19",
							"move(address,address,uint256)": "bb35783b",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
							"pull(address,uint256)": "f2d5d56b",
							"push(address,uint256)": "b753a98c",
							"rely(address)": "65fae35e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"version()": "54fd4d50",
							"wards(address)": "bf353dbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"addAuth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"adjustDailyFraxLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad_\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyFraxLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fraxMintedToday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastMintRestart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"frax/Frax.sol\":\"FRAX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"frax/Frax.sol\":{\"keccak256\":\"0xb625407ee4f973c562fea8fde18d7712c92ea2d9e931817860ee51691281b1c6\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://8137d5568e404f80818d5e962f0c84962959f1cff0ff70f2d4b8a2489853c8a3\",\"dweb:/ipfs/Qmdk1Xug89aTp8huGqzBczppDq8vky93ADL5LRw3oC8NZC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 141,
								"contract": "frax/Frax.sol:FRAX",
								"label": "wards",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 201,
								"contract": "frax/Frax.sol:FRAX",
								"label": "totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 203,
								"contract": "frax/Frax.sol:FRAX",
								"label": "dailyFraxLimit",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 207,
								"contract": "frax/Frax.sol:FRAX",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 213,
								"contract": "frax/Frax.sol:FRAX",
								"label": "allowances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 217,
								"contract": "frax/Frax.sol:FRAX",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 221,
								"contract": "frax/Frax.sol:FRAX",
								"label": "lastMintRestart",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 225,
								"contract": "frax/Frax.sol:FRAX",
								"label": "fraxMintedToday",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 269,
								"contract": "frax/Frax.sol:FRAX",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "8",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFRAX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								}
							],
							"name": "deny",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "move",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "pull",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "push",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								}
							],
							"name": "rely",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"burn(address,uint256)": "9dc29fac",
							"deny(address)": "9c52a7f1",
							"mint(address,uint256)": "40c10f19",
							"move(address,address,uint256)": "bb35783b",
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
							"pull(address,uint256)": "f2d5d56b",
							"push(address,uint256)": "b753a98c",
							"rely(address)": "65fae35e",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"wards()": "3797fb6e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"frax/Frax.sol\":\"IFRAX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"frax/Frax.sol\":{\"keccak256\":\"0xb625407ee4f973c562fea8fde18d7712c92ea2d9e931817860ee51691281b1c6\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://8137d5568e404f80818d5e962f0c84962959f1cff0ff70f2d4b8a2489853c8a3\",\"dweb:/ipfs/Qmdk1Xug89aTp8huGqzBczppDq8vky93ADL5LRw3oC8NZC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibNote": {
					"abi": [
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg1",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg2",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"frax/Frax.sol\":63:1258  contract LibNote {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"frax/Frax.sol\":63:1258  contract LibNote {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d919355548cbf5a16d557e57812a3c3f986861b8b03d0b3b67e0ae1337b4b5064736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200d919355548cbf5a16d557e57812a3c3f986861b8b03d0b3b67e0ae1337b4b5064736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 SWAP4 SSTORE SLOAD DUP13 0xBF GAS AND 0xD5 JUMPI 0xE5 PUSH25 0x12A3C3F986861B8B03D0B3B67E0AE1337B4B5064736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "63:1195:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200d919355548cbf5a16d557e57812a3c3f986861b8b03d0b3b67e0ae1337b4b5064736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 SWAP4 SSTORE SLOAD DUP13 0xBF GAS AND 0xD5 JUMPI 0xE5 PUSH25 0x12A3C3F986861B8B03D0B3B67E0AE1337B4B5064736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "63:1195:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1258,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d919355548cbf5a16d557e57812a3c3f986861b8b03d0b3b67e0ae1337b4b5064736f6c63430007050033",
									".code": [
										{
											"begin": 63,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 1258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1258,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"frax/Frax.sol\":\"LibNote\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"frax/Frax.sol\":{\"keccak256\":\"0xb625407ee4f973c562fea8fde18d7712c92ea2d9e931817860ee51691281b1c6\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://8137d5568e404f80818d5e962f0c84962959f1cff0ff70f2d4b8a2489853c8a3\",\"dweb:/ipfs/Qmdk1Xug89aTp8huGqzBczppDq8vky93ADL5LRw3oC8NZC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"frax/Frax.sol": {
				"ast": {
					"absolutePath": "frax/Frax.sol",
					"exportedSymbols": {
						"FRAX": [
							889
						],
						"IFRAX": [
							119
						],
						"LibNote": [
							18
						]
					},
					"id": 890,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "39:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "LibNote",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": true,
									"id": 13,
									"name": "LogNote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "109:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "109:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "137:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "arg1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "166:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "arg2",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "196:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "226:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "99:143:0"
									},
									"src": "86:167:0"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "275:981:0",
										"statements": [
											{
												"id": 15,
												"nodeType": "PlaceholderStatement",
												"src": "285:1:0"
											}
										]
									},
									"id": 17,
									"name": "note",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "259:997:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 890,
							"src": "63:1195:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 119,
							"linearizedBaseContracts": [
								119
							],
							"name": "IFRAX",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3797fb6e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:9:0"
									},
									"scope": 119,
									"src": "1302:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65fae35e",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rely",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1366:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:13:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:0:0"
									},
									"scope": 119,
									"src": "1352:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9c52a7f1",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deny",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1408:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:13:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:0:0"
									},
									"scope": 119,
									"src": "1394:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1475:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1488:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:26:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1519:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1519:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:6:0"
									},
									"scope": 119,
									"src": "1457:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1562:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1583:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1604:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:69:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:6:0"
									},
									"scope": 119,
									"src": "1531:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1666:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1679:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:26:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1700:0:0"
									},
									"scope": 119,
									"src": "1652:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1721:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1734:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:26:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:0:0"
									},
									"scope": 119,
									"src": "1707:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1779:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1792:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:26:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1823:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1823:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:6:0"
									},
									"scope": 119,
									"src": "1762:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b753a98c",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "push",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1870:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1883:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:26:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:0:0"
									},
									"scope": 119,
									"src": "1856:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2d5d56b",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pull",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1925:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1938:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:26:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:0"
									},
									"scope": 119,
									"src": "1911:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bb35783b",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "move",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1989:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2010:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2031:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:69:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:0"
									},
									"scope": 119,
									"src": "1966:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8fcbaf0c",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2125:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2149:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2174:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2197:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "allowed",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2221:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2243:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 110,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2243:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2260:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2279:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:179:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:0:0"
									},
									"scope": 119,
									"src": "2100:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 890,
							"src": "1260:1046:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 120,
										"name": "LibNote",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 18,
										"src": "2325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LibNote_$18",
											"typeString": "contract LibNote"
										}
									},
									"id": 121,
									"nodeType": "InheritanceSpecifier",
									"src": "2325:7:0"
								}
							],
							"contractDependencies": [
								18
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889,
								18
							],
							"name": "FRAX",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 129,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2354:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2375:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2396:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:55:0"
									},
									"src": "2339:70:0"
								},
								{
									"anonymous": false,
									"id": 137,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2429:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2450:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2471:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:55:0"
									},
									"src": "2414:70:0"
								},
								{
									"constant": false,
									"functionSelector": "bf353dbb",
									"id": 141,
									"mutability": "mutable",
									"name": "wards",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "2510:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 140,
										"keyType": {
											"id": 138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2518:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2510:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 139,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2529:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2603:31:0",
										"statements": [
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 150,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2613:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 152,
														"indexExpression": {
															"id": 151,
															"name": "guy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2619:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2613:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2626:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2613:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2613:14:0"
											}
										]
									},
									"functionSelector": "65fae35e",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 146,
											"modifierName": {
												"id": 145,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 17,
												"src": "2593:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2593:4:0"
										},
										{
											"id": 148,
											"modifierName": {
												"id": 147,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 187,
												"src": "2598:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2598:4:0"
										}
									],
									"name": "rely",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2571:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:13:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:0:0"
									},
									"scope": 889,
									"src": "2557:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2686:31:0",
										"statements": [
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 166,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"id": 167,
															"name": "guy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2702:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2696:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2709:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2696:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2696:14:0"
											}
										]
									},
									"functionSelector": "9c52a7f1",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 162,
											"modifierName": {
												"id": 161,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 17,
												"src": "2676:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2676:4:0"
										},
										{
											"id": 164,
											"modifierName": {
												"id": 163,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 187,
												"src": "2681:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2681:4:0"
										}
									],
									"name": "deny",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2654:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:13:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2686:0:0"
									},
									"scope": 889,
									"src": "2640:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "2739:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 176,
																	"name": "wards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "2757:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 179,
																"indexExpression": {
																	"expression": {
																		"id": 177,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "2763:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2763:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2757:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2778:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2757:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "467261782f6e6f742d617574686f72697a6564",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2781:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cc603a485aa385c9ab65e70c9afd5081a9ae8ec663df1621f02ab3ec96aa2c6",
																"typeString": "literal_string \"Frax/not-authorized\""
															},
															"value": "Frax/not-authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cc603a485aa385c9ab65e70c9afd5081a9ae8ec663df1621f02ab3ec96aa2c6",
																"typeString": "literal_string \"Frax/not-authorized\""
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2749:54:0"
											},
											{
												"id": 185,
												"nodeType": "PlaceholderStatement",
												"src": "2813:1:0"
											}
										]
									},
									"id": 187,
									"name": "auth",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:2:0"
									},
									"src": "2723:98:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 190,
									"mutability": "constant",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "2853:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 188,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2853:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4652415820544f4b454e",
										"id": 189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2883:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0b5e63856806857c7af67a3841d8148fce118228c7167c9e8705ab68578b5d9f",
											"typeString": "literal_string \"FRAX TOKEN\""
										},
										"value": "FRAX TOKEN"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 193,
									"mutability": "constant",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "2901:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 191,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2901:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "46524158",
										"id": 192,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2933:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9171c8ee5d053a5cb4f89f254214c629dd22087419ac71a852ac36b733813444",
											"typeString": "literal_string \"FRAX\""
										},
										"value": "FRAX"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54fd4d50",
									"id": 196,
									"mutability": "constant",
									"name": "version",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "2945:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 194,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2945:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2978:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
											"typeString": "literal_string \"1\""
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 199,
									"mutability": "constant",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "2987:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 197,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2987:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 198,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3020:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 201,
									"mutability": "mutable",
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3028:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3028:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7f1bf12",
									"id": 203,
									"mutability": "mutable",
									"name": "dailyFraxLimit",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3060:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3060:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 207,
									"mutability": "mutable",
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3096:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 206,
										"keyType": {
											"id": 204,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3104:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3096:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 205,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3115:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 213,
									"mutability": "mutable",
									"name": "allowances",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3146:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 212,
										"keyType": {
											"id": 208,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3146:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 211,
											"keyType": {
												"id": 209,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3173:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3165:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 210,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3184:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 217,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3218:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 216,
										"keyType": {
											"id": 214,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3226:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3218:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 215,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3237:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "798247ae",
									"id": 221,
									"mutability": "mutable",
									"name": "lastMintRestart",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3265:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 220,
										"keyType": {
											"id": 218,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3273:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3265:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 219,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3284:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e16de34",
									"id": 225,
									"mutability": "mutable",
									"name": "fraxMintedToday",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3321:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 224,
										"keyType": {
											"id": 222,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3329:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3321:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 223,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3340:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "3618:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 235,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "3637:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 236,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "3641:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 237,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "3645:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3641:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3637:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 240,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3636:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 241,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "3651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3636:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3628:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "3628:25:0"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3573:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3561:22:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3607:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:11:0"
									},
									"scope": 889,
									"src": "3549:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3735:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 256,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "3754:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 257,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 248,
																				"src": "3758:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 258,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "3762:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3758:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3754:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3753:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 262,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "3768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3753:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3745:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "3745:25:0"
											}
										]
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3679:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3690:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:22:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:11:0"
									},
									"scope": 889,
									"src": "3666:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 269,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3814:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 268,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3814:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 272,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "3995:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 270,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3995:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865613261613061316265313161303765643836643735356339333436376634663832333632623435323337316431626139346431373135313233353131616362",
										"id": 271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4037:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_105916522785188513640362517802612480037966763957092682311465172263008277174987_by_1",
											"typeString": "int_const 1059...(70 digits omitted)...4987"
										},
										"value": "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "4140:427:0",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 277,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 280,
														"indexExpression": {
															"expression": {
																"id": 278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4156:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4156:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4150:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4150:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "4150:21:0"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "4181:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4261:84:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 288,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "4251:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4251:95:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 294,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 190,
																						"src": "4380:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4374:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 292,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "4374:5:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4374:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 291,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "4364:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4364:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 300,
																						"name": "version",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 196,
																						"src": "4420:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 299,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4414:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 298,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "4414:5:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4414:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 297,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "4404:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4404:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 303,
																		"name": "chainId_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "4447:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 306,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "4481:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FRAX_$889",
																					"typeString": "contract FRAX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FRAX_$889",
																					"typeString": "contract FRAX"
																				}
																			],
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4473:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 304,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4473:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4473:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 286,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "4223:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "4223:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4223:277:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 285,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "4200:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4200:310:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4181:329:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "4181:329:0"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "dailyFraxLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4520:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030303030303030303030303030303030303030",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4537:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000"
														},
														"value": "10000000000000000000000"
													},
													"src": "4520:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "4520:40:0"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "chainId_",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "4122:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4121:18:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4140:0:0"
									},
									"scope": 889,
									"src": "4110:457:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "4659:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4687:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "sender_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4697:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 326,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "4676:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4676:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 330,
												"nodeType": "Return",
												"src": "4669:36:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "4592:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "sender_",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "4610:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:35:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "4650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:9:0"
									},
									"scope": 889,
									"src": "4573:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4805:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 341,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4822:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 343,
														"indexExpression": {
															"id": 342,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4833:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4822:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 345,
													"indexExpression": {
														"id": 344,
														"name": "sender_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4843:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4822:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 346,
												"nodeType": "Return",
												"src": "4815:36:0"
											}
										]
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4738:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "sender_",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4756:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4737:35:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4796:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4795:9:0"
									},
									"scope": 889,
									"src": "4718:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "4953:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4983:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4983:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 360,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4995:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5000:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 357,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4970:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4970:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 356,
												"id": 363,
												"nodeType": "Return",
												"src": "4963:41:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4903:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4916:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4902:26:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4947:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4946:6:0"
									},
									"scope": 889,
									"src": "4885:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "5130:495:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 377,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "5148:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"id": 378,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "5158:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5148:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 380,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "5166:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5148:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "467261782f696e73756666696369656e742d62616c616e6365",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5171:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_153adef1d406e126370e4e1b09e0cebd86dcde47e05c2c92067d5e0987f56097",
																"typeString": "literal_string \"Frax/insufficient-balance\""
															},
															"value": "Frax/insufficient-balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_153adef1d406e126370e4e1b09e0cebd86dcde47e05c2c92067d5e0987f56097",
																"typeString": "literal_string \"Frax/insufficient-balance\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "5140:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 385,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "5213:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 386,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5220:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5220:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "5213:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 390,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "5245:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 391,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5250:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5250:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 389,
																"name": "_allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "5234:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5234:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "5273:2:0",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5274:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5265:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 394,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5265:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5265:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5234:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5213:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5209:249:0",
												"trueBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "5278:180:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 403,
																					"name": "src",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "5311:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 404,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "5316:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "5316:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 402,
																				"name": "_allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "5300:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view returns (uint256)"
																				}
																			},
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5300:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 407,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 371,
																			"src": "5331:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5300:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "467261782f696e73756666696369656e742d616c6c6f77616e6365",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5336:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_348bb89e830a0232e9f68b7008b061d4d629d309ed13af37157999828e46518b",
																			"typeString": "literal_string \"Frax/insufficient-allowance\""
																		},
																		"value": "Frax/insufficient-allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_348bb89e830a0232e9f68b7008b061d4d629d309ed13af37157999828e46518b",
																			"typeString": "literal_string \"Frax/insufficient-allowance\""
																		}
																	],
																	"id": 401,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "5292:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5292:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5292:74:0"
														},
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 412,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "5380:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 416,
																		"indexExpression": {
																			"id": 413,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "5391:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5380:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 417,
																	"indexExpression": {
																		"expression": {
																			"id": 414,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "5396:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5396:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5380:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 420,
																					"name": "src",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "5425:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 421,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "5430:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "5430:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 419,
																				"name": "_allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "5414:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view returns (uint256)"
																				}
																			},
																			"id": 423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 424,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 371,
																			"src": "5443:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 418,
																		"name": "sub",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "5410:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5410:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5380:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "5380:67:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 430,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "5467:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 432,
														"indexExpression": {
															"id": 431,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "5477:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5467:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 434,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "5488:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 436,
																"indexExpression": {
																	"id": 435,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "5498:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5488:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 437,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "5504:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 433,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "5484:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5467:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "5467:41:0"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 441,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "5518:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 443,
														"indexExpression": {
															"id": 442,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "5528:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5518:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 445,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "5539:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 447,
																"indexExpression": {
																	"id": 446,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5549:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5539:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 448,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "5555:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 444,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "5535:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5535:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5518:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "5518:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 453,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "5583:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "5588:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "5593:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "5574:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "EmitStatement",
												"src": "5569:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 375,
												"id": 459,
												"nodeType": "Return",
												"src": "5607:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5048:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5069:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5090:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5038:69:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:6:0"
									},
									"scope": 889,
									"src": "5017:608:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "5675:31:0",
										"statements": [
											{
												"expression": {
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 468,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 470,
														"indexExpression": {
															"id": 469,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5691:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5685:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5698:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5685:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "5685:14:0"
											}
										]
									},
									"functionSelector": "5422224e",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"modifierName": {
												"id": 465,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 187,
												"src": "5670:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5670:4:0"
										}
									],
									"name": "addAuth",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5648:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5647:13:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5675:0:0"
									},
									"scope": 889,
									"src": "5631:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "5772:40:0",
										"statements": [
											{
												"expression": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 482,
														"name": "dailyFraxLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5782:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 483,
														"name": "_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "5799:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5782:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "5782:23:0"
											}
										]
									},
									"functionSelector": "d3fd35ec",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 480,
											"modifierName": {
												"id": 479,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 187,
												"src": "5767:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5767:4:0"
										}
									],
									"name": "adjustDailyFraxLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "_limit",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "5742:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5741:16:0"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5772:0:0"
									},
									"scope": 889,
									"src": "5712:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "5867:758:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 494,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 497,
														"indexExpression": {
															"expression": {
																"id": 495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5887:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5887:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5881:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5902:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5881:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5877:598:0",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5905:570:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 502,
																						"name": "wad",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 491,
																						"src": "5948:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 503,
																							"name": "fraxMintedToday",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 225,
																							"src": "5953:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 506,
																						"indexExpression": {
																							"expression": {
																								"id": 504,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -15,
																								"src": "5969:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 505,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "5969:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5953:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 501,
																					"name": "add",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 246,
																					"src": "5944:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5944:37:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 508,
																				"name": "dailyFraxLimit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 203,
																				"src": "5985:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5944:55:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 519,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 511,
																										"name": "block",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -4,
																										"src": "6028:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_block",
																											"typeString": "block"
																										}
																									},
																									"id": 512,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "number",
																									"nodeType": "MemberAccess",
																									"src": "6028:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"baseExpression": {
																										"id": 513,
																										"name": "lastMintRestart",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 221,
																										"src": "6042:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 516,
																									"indexExpression": {
																										"expression": {
																											"id": 514,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": -15,
																											"src": "6058:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 515,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "6058:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address_payable",
																											"typeString": "address payable"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6042:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 510,
																								"name": "sub",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 267,
																								"src": "6024:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 517,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6024:46:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"hexValue": "36353030",
																							"id": 518,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6074:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_6500_by_1",
																								"typeString": "int_const 6500"
																							},
																							"value": "6500"
																						},
																						"src": "6024:54:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 522,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 520,
																							"name": "wad",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 491,
																							"src": "6082:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"id": 521,
																							"name": "dailyFraxLimit",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 203,
																							"src": "6089:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6082:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "6024:79:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 524,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6023:81:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5944:160:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f766572206461696c792046726178204c696d6974",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6122:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_551c49aa045770f0c55000037b99081a129a28a5625182d132bedc4a428ec387",
																			"typeString": "literal_string \"Over daily Frax Limit\""
																		},
																		"value": "Over daily Frax Limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_551c49aa045770f0c55000037b99081a129a28a5625182d132bedc4a428ec387",
																			"typeString": "literal_string \"Over daily Frax Limit\""
																		}
																	],
																	"id": 500,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "5919:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5919:240:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "5919:240:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 530,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "6181:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "6181:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 532,
																				"name": "lastMintRestart",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6195:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 535,
																			"indexExpression": {
																				"expression": {
																					"id": 533,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "6211:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6211:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6195:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 529,
																		"name": "sub",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "6177:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6177:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "36353030",
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6227:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6500_by_1",
																		"typeString": "int_const 6500"
																	},
																	"value": "6500"
																},
																"src": "6177:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 568,
																"nodeType": "Block",
																"src": "6365:100:0",
																"statements": [
																	{
																		"expression": {
																			"id": 566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 555,
																					"name": "fraxMintedToday",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 225,
																					"src": "6383:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 558,
																				"indexExpression": {
																					"expression": {
																						"id": 556,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "6399:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 557,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6399:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6383:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 560,
																							"name": "fraxMintedToday",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 225,
																							"src": "6417:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 563,
																						"indexExpression": {
																							"expression": {
																								"id": 561,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -15,
																								"src": "6433:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 562,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "6433:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6417:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 564,
																						"name": "wad",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 491,
																						"src": "6446:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 559,
																					"name": "add",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 246,
																					"src": "6413:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6413:37:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6383:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 567,
																		"nodeType": "ExpressionStatement",
																		"src": "6383:67:0"
																	}
																]
															},
															"id": 569,
															"nodeType": "IfStatement",
															"src": "6173:292:0",
															"trueBody": {
																"id": 554,
																"nodeType": "Block",
																"src": "6233:126:0",
																"statements": [
																	{
																		"expression": {
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 539,
																					"name": "fraxMintedToday",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 225,
																					"src": "6251:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 542,
																				"indexExpression": {
																					"expression": {
																						"id": 540,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "6267:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6267:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6251:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 543,
																				"name": "wad",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "6281:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6251:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 545,
																		"nodeType": "ExpressionStatement",
																		"src": "6251:33:0"
																	},
																	{
																		"expression": {
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 546,
																					"name": "lastMintRestart",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 221,
																					"src": "6302:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 549,
																				"indexExpression": {
																					"expression": {
																						"id": 547,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "6318:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6318:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6302:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 550,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -4,
																					"src": "6332:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"src": "6332:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6302:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 553,
																		"nodeType": "ExpressionStatement",
																		"src": "6302:42:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 572,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6485:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 574,
														"indexExpression": {
															"id": 573,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "6495:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6485:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 576,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "6506:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 578,
																"indexExpression": {
																	"id": 577,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "6516:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6506:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 579,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "6522:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 575,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "6502:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6502:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6485:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "6485:41:0"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 583,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "6537:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 585,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "6555:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 586,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "6568:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 584,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "6551:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6551:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6537:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "6537:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6605:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6597:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 591,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6597:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6597:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 595,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "6609:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 596,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "6614:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "6588:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6588:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "EmitStatement",
												"src": "6583:35:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5832:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5845:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:26:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5867:0:0"
									},
									"scope": 889,
									"src": "5818:807:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "6680:475:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 608,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "6698:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 610,
																"indexExpression": {
																	"id": 609,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6708:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6698:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 611,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "6716:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6698:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "467261782f696e73756666696369656e742d62616c616e6365",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6721:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_153adef1d406e126370e4e1b09e0cebd86dcde47e05c2c92067d5e0987f56097",
																"typeString": "literal_string \"Frax/insufficient-balance\""
															},
															"value": "Frax/insufficient-balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_153adef1d406e126370e4e1b09e0cebd86dcde47e05c2c92067d5e0987f56097",
																"typeString": "literal_string \"Frax/insufficient-balance\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6690:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6690:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "6690:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 616,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "6763:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 617,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6770:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "6763:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 621,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6795:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 622,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6800:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6800:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 620,
																"name": "_allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "6784:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6784:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "6823:2:0",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6824:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6815:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6815:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6815:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6784:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6763:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"nodeType": "IfStatement",
												"src": "6759:249:0",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "6828:180:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 634,
																					"name": "usr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6861:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 635,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "6866:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 636,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6866:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 633,
																				"name": "_allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "6850:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view returns (uint256)"
																				}
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6850:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 638,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "6881:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6850:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "467261782f696e73756666696369656e742d616c6c6f77616e6365",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6886:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_348bb89e830a0232e9f68b7008b061d4d629d309ed13af37157999828e46518b",
																			"typeString": "literal_string \"Frax/insufficient-allowance\""
																		},
																		"value": "Frax/insufficient-allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_348bb89e830a0232e9f68b7008b061d4d629d309ed13af37157999828e46518b",
																			"typeString": "literal_string \"Frax/insufficient-allowance\""
																		}
																	],
																	"id": 632,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "6842:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6842:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6842:74:0"
														},
														{
															"expression": {
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 643,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "6930:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 647,
																		"indexExpression": {
																			"id": 644,
																			"name": "usr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "6941:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6930:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 648,
																	"indexExpression": {
																		"expression": {
																			"id": 645,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "6946:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6946:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6930:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 651,
																					"name": "usr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6975:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 652,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "6980:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6980:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 650,
																				"name": "_allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "6964:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view returns (uint256)"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6964:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 655,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "6993:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 649,
																		"name": "sub",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "6960:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6960:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6930:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "6930:67:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 661,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "7017:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 663,
														"indexExpression": {
															"id": 662,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "7027:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7017:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 665,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "7038:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 667,
																"indexExpression": {
																	"id": 666,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "7048:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7038:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 668,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "7054:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 664,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7034:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7034:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7017:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "7017:41:0"
											},
											{
												"expression": {
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 672,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "7068:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 674,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "7086:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 675,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "7099:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 673,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7082:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7082:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7068:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "7068:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 680,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "7127:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7140:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7132:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 681,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7132:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7132:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 685,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "7144:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 679,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "7118:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7118:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "EmitStatement",
												"src": "7113:35:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6645:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6658:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6644:26:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6680:0:0"
									},
									"scope": 889,
									"src": "6631:524:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "7229:117:0",
										"statements": [
											{
												"expression": {
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 698,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "7239:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 702,
															"indexExpression": {
																"expression": {
																	"id": 699,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7250:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7250:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7239:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 703,
														"indexExpression": {
															"id": 701,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "7262:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7239:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 704,
														"name": "wad",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "7269:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7239:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "7239:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7297:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 710,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "7309:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "7314:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "7288:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7288:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "EmitStatement",
												"src": "7283:35:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 697,
												"id": 715,
												"nodeType": "Return",
												"src": "7328:11:0"
											}
										]
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "7179:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "7192:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7178:26:0"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "7223:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7223:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7222:6:0"
									},
									"scope": 889,
									"src": "7161:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "7421:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "usr_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7447:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "wad_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "7453:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 726,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7438:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7438:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 725,
												"id": 730,
												"nodeType": "Return",
												"src": "7431:27:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "usr_",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "7369:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "wad_",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "7383:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7368:28:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "7415:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7414:6:0"
									},
									"scope": 889,
									"src": "7352:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7541:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 740,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7564:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7564:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 742,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7576:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "7581:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7551:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7551:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7551:34:0"
											}
										]
									},
									"functionSelector": "b753a98c",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "push",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7506:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7519:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7505:26:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7541:0:0"
									},
									"scope": 889,
									"src": "7492:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "7647:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "7670:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 756,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7675:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7675:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 758,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "7687:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 754,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7657:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7657:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "7657:34:0"
											}
										]
									},
									"functionSelector": "f2d5d56b",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pull",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "7612:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "7625:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7611:26:0"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7647:0:0"
									},
									"scope": 889,
									"src": "7598:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "7796:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "7819:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "7824:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "7829:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 771,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7806:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7806:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "7806:27:0"
											}
										]
									},
									"functionSelector": "bb35783b",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "move",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "7727:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "7748:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "7769:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:69:0"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7796:0:0"
									},
									"scope": 889,
									"src": "7704:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "8086:685:0",
										"statements": [
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "8096:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 797,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8170:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 803,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "8198:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 807,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8253:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 808,
																					"name": "holder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "8270:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 809,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "8278:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 810,
																					"name": "nonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "8287:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 811,
																					"name": "expiry",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 786,
																					"src": "8294:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 812,
																					"name": "allowed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "8302:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 805,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "8242:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"src": "8242:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8242:68:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 804,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -8,
																		"src": "8232:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8232:79:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 800,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8136:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8136:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8136:189:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 799,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "8113:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8113:222:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8096:239:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 819,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "8354:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8372:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8364:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 820,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8364:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8364:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8354:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "467261782f696e76616c69642d616464726573732d30",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8376:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a909b2c26c1f6174dc6bb924c77f9a9888368b237bb37cfad4e2f121d2c7980",
																"typeString": "literal_string \"Frax/invalid-address-0\""
															},
															"value": "Frax/invalid-address-0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a909b2c26c1f6174dc6bb924c77f9a9888368b237bb37cfad4e2f121d2c7980",
																"typeString": "literal_string \"Frax/invalid-address-0\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8346:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "8346:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 829,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "8419:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 831,
																		"name": "digest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "8439:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 832,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "8447:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 833,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "8450:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 834,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "8453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 830,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -6,
																	"src": "8429:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8429:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8419:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "467261782f696e76616c69642d7065726d6974",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8457:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fb1ff28c6a33d99b442f4abeb82a2407b442cf4050afd34123fe8f222c81462",
																"typeString": "literal_string \"Frax/invalid-permit\""
															},
															"value": "Frax/invalid-permit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fb1ff28c6a33d99b442f4abeb82a2407b442cf4050afd34123fe8f222c81462",
																"typeString": "literal_string \"Frax/invalid-permit\""
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "8411:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 841,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "8497:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8507:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8497:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 844,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "8512:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8512:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 846,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "8531:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8512:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8497:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "467261782f7065726d69742d65787069726564",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8539:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a44113fc4719873626b0b7be880a7990312dd1a1ac7762596580c7661837b5dc",
																"typeString": "literal_string \"Frax/permit-expired\""
															},
															"value": "Frax/permit-expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a44113fc4719873626b0b7be880a7990312dd1a1ac7762596580c7661837b5dc",
																"typeString": "literal_string \"Frax/permit-expired\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8489:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "8489:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "8579:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8588:16:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 854,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "8588:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 856,
																	"indexExpression": {
																		"id": 855,
																		"name": "holder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "8595:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8588:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8579:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "467261782f696e76616c69642d6e6f6e6365",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8606:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac859db700514e837c71a4a60d31f1f31093558a1d4df2270811c81002c4352a",
																"typeString": "literal_string \"Frax/invalid-nonce\""
															},
															"value": "Frax/invalid-nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac859db700514e837c71a4a60d31f1f31093558a1d4df2270811c81002c4352a",
																"typeString": "literal_string \"Frax/invalid-nonce\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8571:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "8571:56:0"
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "wad",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "8637:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"condition": {
														"id": 864,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "8651:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8651:25:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "8669:2:0",
																"subExpression": {
																	"hexValue": "31",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8670:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 865,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8661:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8661:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8637:39:0"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 873,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "8686:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 876,
															"indexExpression": {
																"id": 874,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "8697:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8686:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 877,
														"indexExpression": {
															"id": 875,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8705:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8686:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 878,
														"name": "wad",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "8716:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8686:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "8686:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 882,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "8743:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "8760:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "8734:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8734:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "8729:35:0"
											}
										]
									},
									"functionSelector": "8fcbaf0c",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "7907:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "7931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "7956:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "7979:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "allowed",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8003:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 789,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8025:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8042:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 791,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8061:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 793,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7897:179:0"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8086:0:0"
									},
									"scope": 889,
									"src": "7882:889:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 890,
							"src": "2308:6465:0"
						}
					],
					"src": "39:8735:0"
				},
				"id": 0
			}
		}
	}
}