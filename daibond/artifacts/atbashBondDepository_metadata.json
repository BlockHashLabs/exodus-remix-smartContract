{
	"compiler": {
		"version": "0.7.5+commit.eb77ed08"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_bash",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_principle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_treasury",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_DAO",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_bondCalculator",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "expires",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "priceInUSD",
						"type": "uint256"
					}
				],
				"name": "BondCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "priceInUSD",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "internalPrice",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "debtRatio",
						"type": "uint256"
					}
				],
				"name": "BondPriceChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "remaining",
						"type": "uint256"
					}
				],
				"name": "BondRedeemed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "initialBCV",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBCV",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "adjustment",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "addition",
						"type": "bool"
					}
				],
				"name": "ControlVariableAdjustment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipPulled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipPushed",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "Bash",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DAO",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adjustment",
				"outputs": [
					{
						"internalType": "bool",
						"name": "add",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "rate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "target",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "buffer",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "lastTime",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bondCalculator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "bondInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pricePaid",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "lastTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "vesting",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bondPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bondPriceInUSD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentDebt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "debtDecay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "decay_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "debtRatio",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "debtRatio_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxPrice",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_depositor",
						"type": "address"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_controlVariable",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_minimumPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxPayout",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxDebt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_initialDebt",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_vestingTerm",
						"type": "uint32"
					}
				],
				"name": "initializeBondTerms",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isLiquidityBond",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastDecay",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxPayout",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "payoutFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_depositor",
						"type": "address"
					}
				],
				"name": "pendingPayoutFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "pendingPayout_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_depositor",
						"type": "address"
					}
				],
				"name": "percentVestedFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "percentVested_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "policy",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "principle",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pullManagement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner_",
						"type": "address"
					}
				],
				"name": "pushManagement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "recoverLostToken",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_stake",
						"type": "bool"
					}
				],
				"name": "redeem",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceManagement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_addition",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_increment",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_target",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_buffer",
						"type": "uint32"
					}
				],
				"name": "setAdjustment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum atbashBondDepository.PARAMETER",
						"name": "_parameter",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "_input",
						"type": "uint256"
					}
				],
				"name": "setBondTerms",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_staking",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_helper",
						"type": "bool"
					}
				],
				"name": "setStaking",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "staking",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakingHelper",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "standardizedDebtRatio",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "terms",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "controlVariable",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minimumPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxPayout",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxDebt",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "vestingTerm",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDebt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "treasury",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "useHelper",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"bondPrice()": {
					"returns": {
						"price_": "uint"
					}
				},
				"bondPriceInUSD()": {
					"returns": {
						"price_": "uint"
					}
				},
				"currentDebt()": {
					"returns": {
						"_0": "uint"
					}
				},
				"debtDecay()": {
					"returns": {
						"decay_": "uint"
					}
				},
				"debtRatio()": {
					"returns": {
						"debtRatio_": "uint"
					}
				},
				"deposit(uint256,uint256,address)": {
					"params": {
						"_amount": "uint",
						"_depositor": "address",
						"_maxPrice": "uint"
					},
					"returns": {
						"_0": "uint"
					}
				},
				"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)": {
					"params": {
						"_controlVariable": "uint",
						"_fee": "uint",
						"_initialDebt": "uint",
						"_maxDebt": "uint",
						"_maxPayout": "uint",
						"_minimumPrice": "uint",
						"_vestingTerm": "uint32"
					}
				},
				"maxPayout()": {
					"returns": {
						"_0": "uint"
					}
				},
				"payoutFor(uint256)": {
					"params": {
						"_value": "uint"
					},
					"returns": {
						"_0": "uint"
					}
				},
				"pendingPayoutFor(address)": {
					"params": {
						"_depositor": "address"
					},
					"returns": {
						"pendingPayout_": "uint"
					}
				},
				"percentVestedFor(address)": {
					"params": {
						"_depositor": "address"
					},
					"returns": {
						"percentVested_": "uint"
					}
				},
				"recoverLostToken(address)": {
					"returns": {
						"_0": "bool"
					}
				},
				"redeem(address,bool)": {
					"params": {
						"_recipient": "address",
						"_stake": "bool"
					},
					"returns": {
						"_0": "uint"
					}
				},
				"setAdjustment(bool,uint256,uint256,uint32)": {
					"params": {
						"_addition": "bool",
						"_buffer": "uint",
						"_increment": "uint",
						"_target": "uint"
					}
				},
				"setBondTerms(uint8,uint256)": {
					"params": {
						"_input": "uint",
						"_parameter": "PARAMETER"
					}
				},
				"setStaking(address,bool)": {
					"params": {
						"_helper": "bool",
						"_staking": "address"
					}
				},
				"standardizedDebtRatio()": {
					"returns": {
						"_0": "uint"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"bondPrice()": {
					"notice": "calculate current bond premium"
				},
				"bondPriceInUSD()": {
					"notice": "converts bond price to DAI value"
				},
				"currentDebt()": {
					"notice": "calculate debt factoring in decay"
				},
				"debtDecay()": {
					"notice": "amount to decay total debt by"
				},
				"debtRatio()": {
					"notice": "calculate current ratio of debt to BASH supply"
				},
				"deposit(uint256,uint256,address)": {
					"notice": "deposit bond"
				},
				"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)": {
					"notice": "initializes bond parameters"
				},
				"maxPayout()": {
					"notice": "determine maximum bond size"
				},
				"payoutFor(uint256)": {
					"notice": "calculate interest due for new bond"
				},
				"pendingPayoutFor(address)": {
					"notice": "calculate amount of OHM available for claim by depositor"
				},
				"percentVestedFor(address)": {
					"notice": "calculate how far into vesting a depositor is"
				},
				"recoverLostToken(address)": {
					"notice": "allow anyone to send lost tokens (excluding principle or OHM) to the DAO"
				},
				"redeem(address,bool)": {
					"notice": "redeem bond for user"
				},
				"setAdjustment(bool,uint256,uint256,uint32)": {
					"notice": "set control variable adjustment"
				},
				"setBondTerms(uint8,uint256)": {
					"notice": "set parameters for new bonds"
				},
				"setStaking(address,bool)": {
					"notice": "set contract for auto stake"
				},
				"standardizedDebtRatio()": {
					"notice": "debt ratio in same terms for reserve or liquidity bonds"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"daibond/BondDepository.sol": "atbashBondDepository"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 1000
		},
		"remappings": []
	},
	"sources": {
		"daibond/BondDepository.sol": {
			"keccak256": "0x9f51f65cf05862e783a4c858748505a178c87296491c8d7842659ea81a70321e",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://b201dcf0bc5658d2a5307155585be0ed18e5c92c5bc06eb9aa99a547666eb666",
				"dweb:/ipfs/Qmbqj5LCgWQarBMvEAv46Ggr4eky2SPzfG1a7ZRvfi9tR3"
			]
		},
		"daibond/ITreasury.sol": {
			"keccak256": "0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f",
				"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB"
			]
		}
	},
	"version": 1
}