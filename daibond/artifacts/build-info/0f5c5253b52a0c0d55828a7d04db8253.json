{
	"id": "0f5c5253b52a0c0d55828a7d04db8253",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"daibond/BondDepository.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity 0.7.5;\n\nimport { ITreasury } from \"./ITreasury.sol\";\n\ninterface IOwnable {\n    function policy() external view returns (address);\n\n    function renounceManagement() external;\n\n    function pushManagement(address newOwner_) external;\n\n    function pullManagement() external;\n}\n\ncontract Ownable is IOwnable {\n    address internal _owner;\n    address internal _newOwner;\n\n    event OwnershipPushed(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n    event OwnershipPulled(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    constructor() {\n        _owner = msg.sender;\n        emit OwnershipPushed(address(0), _owner);\n    }\n\n    function policy() public view override returns (address) {\n        return _owner;\n    }\n\n    modifier onlyPolicy() {\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    function renounceManagement() public virtual override onlyPolicy {\n        emit OwnershipPushed(_owner, address(0));\n        _owner = address(0);\n    }\n\n    function pushManagement(address newOwner_)\n        public\n        virtual\n        override\n        onlyPolicy\n    {\n        require(\n            newOwner_ != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        emit OwnershipPushed(_owner, newOwner_);\n        _newOwner = newOwner_;\n    }\n\n    function pullManagement() public virtual override {\n        require(msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n        emit OwnershipPulled(_owner, _newOwner);\n        _owner = _newOwner;\n    }\n}\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function sub32(uint32 a, uint32 b) internal pure returns (uint32) {\n        return sub32(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub32(\n        uint32 a,\n        uint32 b,\n        string memory errorMessage\n    ) internal pure returns (uint32) {\n        require(b <= a, errorMessage);\n        uint32 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        return c;\n    }\n\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\n        if (a > 3) {\n            c = a;\n            uint256 b = add(div(a, 2), 1);\n            while (b < c) {\n                c = b;\n                b = div(add(div(a, b), b), 2);\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }\n}\n\nlibrary Address {\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n\n    function functionCall(address target, bytes memory data)\n        internal\n        returns (bytes memory)\n    {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return\n            functionCallWithValue(\n                target,\n                data,\n                value,\n                \"Address: low-level call with value failed\"\n            );\n    }\n\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(\n            address(this).balance >= value,\n            \"Address: insufficient balance for call\"\n        );\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: value}(\n            data\n        );\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(\n            data\n        );\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    function functionStaticCall(address target, bytes memory data)\n        internal\n        view\n        returns (bytes memory)\n    {\n        return\n            functionStaticCall(\n                target,\n                data,\n                \"Address: low-level static call failed\"\n            );\n    }\n\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function functionDelegateCall(address target, bytes memory data)\n        internal\n        returns (bytes memory)\n    {\n        return\n            functionDelegateCall(\n                target,\n                data,\n                \"Address: low-level delegate call failed\"\n            );\n    }\n\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            if (returndata.length > 0) {\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    function addressToString(address _address)\n        internal\n        pure\n        returns (string memory)\n    {\n        bytes32 _bytes = bytes32(uint256(_address));\n        bytes memory HEX = \"0123456789abcdef\";\n        bytes memory _addr = new bytes(42);\n\n        _addr[0] = \"0\";\n        _addr[1] = \"x\";\n\n        for (uint256 i = 0; i < 20; i++) {\n            _addr[2 + i * 2] = HEX[uint8(_bytes[i + 12] >> 4)];\n            _addr[3 + i * 2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\n        }\n\n        return string(_addr);\n    }\n}\n\ninterface IERC20 {\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\nabstract contract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    // TODO comment actual hash value.\n    bytes32 private constant ERC20TOKEN_ERC1820_INTERFACE_ID =\n        keccak256(\"ERC20Token\");\n\n    mapping(address => uint256) internal _balances;\n\n    mapping(address => mapping(address => uint256)) internal _allowances;\n\n    uint256 internal _totalSupply;\n\n    string internal _name;\n\n    string internal _symbol;\n\n    uint8 internal _decimals;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            msg.sender,\n            _allowances[sender][msg.sender].sub(\n                amount,\n                \"ERC20: transfer amount exceeds allowance\"\n            )\n        );\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender].add(addedValue)\n        );\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender].sub(\n                subtractedValue,\n                \"ERC20: decreased allowance below zero\"\n            )\n        );\n        return true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(\n            amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function _mint(address account_, uint256 ammount_) internal virtual {\n        require(account_ != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address(this), account_, ammount_);\n        _totalSupply = _totalSupply.add(ammount_);\n        _balances[account_] = _balances[account_].add(ammount_);\n        emit Transfer(address(this), account_, ammount_);\n    }\n\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(\n            amount,\n            \"ERC20: burn amount exceeds balance\"\n        );\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _beforeTokenTransfer(\n        address from_,\n        address to_,\n        uint256 amount_\n    ) internal virtual {}\n}\n\ninterface IERC2612Permit {\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    function nonces(address owner) external view returns (uint256);\n}\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n\nabstract contract ERC20Permit is ERC20, IERC2612Permit {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    bytes32 public DOMAIN_SEPARATOR;\n\n    constructor() {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(name())),\n                keccak256(bytes(\"1\")), // Version\n                chainID,\n                address(this)\n            )\n        );\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"Permit: expired deadline\");\n\n        bytes32 hashStruct = keccak256(\n            abi.encode(\n                PERMIT_TYPEHASH,\n                owner,\n                spender,\n                amount,\n                _nonces[owner].current(),\n                deadline\n            )\n        );\n\n        bytes32 _hash = keccak256(\n            abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)\n        );\n\n        address signer = ecrecover(_hash, v, r, s);\n        require(\n            signer != address(0) && signer == owner,\n            \"ZeroSwapPermit: Invalid signature\"\n        );\n\n        _nonces[owner].increment();\n        _approve(owner, spender, amount);\n    }\n\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n}\n\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transfer.selector, to, value)\n        );\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n        );\n    }\n\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, value)\n        );\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(\n            value\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\n            value,\n            \"SafeERC20: decreased allowance below zero\"\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(\n            data,\n            \"SafeERC20: low-level call failed\"\n        );\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(\n                abi.decode(returndata, (bool)),\n                \"SafeERC20: ERC20 operation did not succeed\"\n            );\n        }\n    }\n}\n\nlibrary FullMath {\n    function fullMul(uint256 x, uint256 y)\n        private\n        pure\n        returns (uint256 l, uint256 h)\n    {\n        uint256 mm = mulmod(x, y, uint256(-1));\n        l = x * y;\n        h = mm - l;\n        if (mm < l) h -= 1;\n    }\n\n    function fullDiv(\n        uint256 l,\n        uint256 h,\n        uint256 d\n    ) private pure returns (uint256) {\n        uint256 pow2 = d & -d;\n        d /= pow2;\n        l /= pow2;\n        l += h * ((-pow2) / pow2 + 1);\n        uint256 r = 1;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        return l * r;\n    }\n\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 d\n    ) internal pure returns (uint256) {\n        (uint256 l, uint256 h) = fullMul(x, y);\n        uint256 mm = mulmod(x, y, d);\n        if (mm > l) h -= 1;\n        l -= mm;\n        require(h < d, \"FullMath::mulDiv: overflow\");\n        return fullDiv(l, h, d);\n    }\n}\n\nlibrary FixedPoint {\n    struct uq112x112 {\n        uint224 _x;\n    }\n\n    struct uq144x112 {\n        uint256 _x;\n    }\n\n    uint8 private constant RESOLUTION = 112;\n    uint256 private constant Q112 = 0x10000000000000000000000000000;\n    uint256 private constant Q224 =\n        0x100000000000000000000000000000000000000000000000000000000;\n    uint256 private constant LOWER_MASK = 0xffffffffffffffffffffffffffff; // decimal of UQ*x112 (lower 112 bits)\n\n    function decode(uq112x112 memory self) internal pure returns (uint112) {\n        return uint112(self._x >> RESOLUTION);\n    }\n\n    function decode112with18(uq112x112 memory self)\n        internal\n        pure\n        returns (uint256)\n    {\n        return uint256(self._x) / 5192296858534827;\n    }\n\n    function fraction(uint256 numerator, uint256 denominator)\n        internal\n        pure\n        returns (uq112x112 memory)\n    {\n        require(denominator > 0, \"FixedPoint::fraction: division by zero\");\n        if (numerator == 0) return FixedPoint.uq112x112(0);\n\n        if (numerator <= uint144(-1)) {\n            uint256 result = (numerator << RESOLUTION) / denominator;\n            require(result <= uint224(-1), \"FixedPoint::fraction: overflow\");\n            return uq112x112(uint224(result));\n        } else {\n            uint256 result = FullMath.mulDiv(numerator, Q112, denominator);\n            require(result <= uint224(-1), \"FixedPoint::fraction: overflow\");\n            return uq112x112(uint224(result));\n        }\n    }\n}\n\ninterface IBondCalculator {\n    function valuation(address _LP, uint256 _amount)\n        external\n        view\n        returns (uint256);\n\n    function markdown(address _LP) external view returns (uint256);\n}\n\ninterface IStaking {\n    function stake(uint256 _amount, address _recipient) external returns (bool);\n}\n\ninterface IStakingHelper {\n    function stake(uint256 _amount, address _recipient) external;\n}\n\ncontract ExodusBondDepository is Ownable {\n    using FixedPoint for *;\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n    using SafeMath for uint32;\n\n    /* ======== EVENTS ======== */\n\n    event BondCreated(\n        uint256 deposit,\n        uint256 indexed payout,\n        uint256 indexed expires,\n        uint256 indexed priceInUSD\n    );\n    event BondRedeemed(\n        address indexed recipient,\n        uint256 payout,\n        uint256 remaining\n    );\n    event BondPriceChanged(\n        uint256 indexed priceInUSD,\n        uint256 indexed internalPrice,\n        uint256 indexed debtRatio\n    );\n    event ControlVariableAdjustment(\n        uint256 initialBCV,\n        uint256 newBCV,\n        uint256 adjustment,\n        bool addition\n    );\n\n    /* ======== STATE VARIABLES ======== */\n\n    address public immutable Bash; // token given as payment for bond\n    address public immutable principle; // token used to create bond\n    address public immutable treasury; // mints OHM when receives principle\n    address public immutable DAO; // receives profit share from bond\n\n    bool public immutable isLiquidityBond; // LP and Reserve bonds are treated slightly different\n    address public immutable bondCalculator; // calculates value of LP tokens\n\n    address public staking; // to auto-stake payout\n    address public stakingHelper; // to stake and claim if no staking warmup\n    bool public useHelper;\n\n    Terms public terms; // stores terms for new bonds\n    Adjust public adjustment; // stores adjustment to BCV data\n\n    mapping(address => Bond) public bondInfo; // stores bond information for depositors\n\n    uint256 public totalDebt; // total value of outstanding bonds; used for pricing\n    uint32 public lastDecay; // reference time for debt decay\n\n    /* ======== STRUCTS ======== */\n\n    // Info for creating new bonds\n    struct Terms {\n        uint256 controlVariable; // scaling variable for price\n        uint256 minimumPrice; // vs principle value\n        uint256 maxPayout; // in thousandths of a %. i.e. 500 = 0.5%\n        uint256 fee; // as % of bond payout, in hundreths. ( 500 = 5% = 0.05 for every 1 paid)\n        uint256 maxDebt; // 9 decimal debt ratio, max % total supply created as debt\n        uint32 vestingTerm; // in seconds\n    }\n\n    // Info for bond holder\n    struct Bond {\n        uint256 payout; // OHM remaining to be paid\n        uint256 pricePaid; // In DAI, for front end viewing\n        uint32 lastTime; // Last interaction\n        uint32 vesting; // Seconds left to vest\n    }\n\n    // Info for incremental adjustments to control variable\n    struct Adjust {\n        bool add; // addition or subtraction\n        uint256 rate; // increment\n        uint256 target; // BCV when adjustment finished\n        uint32 buffer; // minimum length (in seconds) between adjustments\n        uint32 lastTime; // time when last adjustment made\n    }\n\n    /* ======== INITIALIZATION ======== */\n\n    constructor(\n        address _bash,\n        address _principle, // dai, bashdai\n        address _treasury,\n        address _DAO,\n        address _bondCalculator\n    ) {\n        require(_bash != address(0));\n        Bash = _bash;\n        require(_principle != address(0));\n        principle = _principle;\n        require(_treasury != address(0));\n        treasury = _treasury;\n        require(_DAO != address(0));\n        DAO = _DAO;\n        // bondCalculator should be address(0) if not LP bond\n        bondCalculator = _bondCalculator;\n        isLiquidityBond = (_bondCalculator != address(0));\n    }\n\n    /**\n     *  @notice initializes bond parameters\n     *  @param _controlVariable uint\n     *  @param _vestingTerm uint32\n     *  @param _minimumPrice uint\n     *  @param _maxPayout uint\n     *  @param _fee uint\n     *  @param _maxDebt uint\n     *  @param _initialDebt uint\n     */\n    function initializeBondTerms(\n        uint256 _controlVariable,\n        uint256 _minimumPrice,\n        uint256 _maxPayout,\n        uint256 _fee,\n        uint256 _maxDebt,\n        uint256 _initialDebt,\n        uint32 _vestingTerm\n    ) external onlyPolicy {\n        require(terms.controlVariable == 0, \"Bonds must be initialized from 0\");\n        terms = Terms({\n            controlVariable: _controlVariable,\n            minimumPrice: _minimumPrice,\n            maxPayout: _maxPayout,\n            fee: _fee,\n            maxDebt: _maxDebt,\n            vestingTerm: _vestingTerm\n        });\n        totalDebt = _initialDebt;\n        lastDecay = uint32(block.timestamp);\n    }\n\n    /* ======== POLICY FUNCTIONS ======== */\n\n    enum PARAMETER {\n        VESTING,\n        PAYOUT,\n        FEE,\n        DEBT,\n        MINPRICE\n    }\n\n    /**\n     *  @notice set parameters for new bonds\n     *  @param _parameter PARAMETER\n     *  @param _input uint\n     */\n    function setBondTerms(PARAMETER _parameter, uint256 _input)\n        external\n        onlyPolicy\n    {\n        if (_parameter == PARAMETER.VESTING) {\n            // 0\n            require(_input >= 129600, \"Vesting must be longer than 36 hours\");\n            terms.vestingTerm = uint32(_input);\n        } else if (_parameter == PARAMETER.PAYOUT) {\n            // 1\n            require(_input <= 1000, \"Payout cannot be above 1 percent\");\n            terms.maxPayout = _input;\n        } else if (_parameter == PARAMETER.FEE) {\n            // 2\n            require(_input <= 10000, \"DAO fee cannot exceed payout\");\n            terms.fee = _input;\n        } else if (_parameter == PARAMETER.DEBT) {\n            // 3\n            terms.maxDebt = _input;\n        } else if (_parameter == PARAMETER.MINPRICE) {\n            // 4\n            terms.minimumPrice = _input;\n        }\n    }\n\n    /**\n     *  @notice set control variable adjustment\n     *  @param _addition bool\n     *  @param _increment uint\n     *  @param _target uint\n     *  @param _buffer uint\n     */\n    function setAdjustment(\n        bool _addition,\n        uint256 _increment,\n        uint256 _target,\n        uint32 _buffer\n    ) external onlyPolicy {\n        adjustment = Adjust({\n            add: _addition,\n            rate: _increment,\n            target: _target,\n            buffer: _buffer,\n            lastTime: uint32(block.timestamp)\n        });\n    }\n\n    /**\n     *  @notice set contract for auto stake\n     *  @param _staking address\n     *  @param _helper bool\n     */\n    function setStaking(address _staking, bool _helper) external onlyPolicy {\n        require(_staking != address(0));\n        if (_helper) {\n            useHelper = true;\n            stakingHelper = _staking;\n        } else {\n            useHelper = false;\n            staking = _staking;\n        }\n    }\n\n    /* ======== USER FUNCTIONS ======== */\n\n    /**\n     *  @notice deposit bond\n     *  @param _amount uint\n     *  @param _maxPrice uint\n     *  @param _depositor address\n     *  @return uint\n     */\n    function deposit(\n        uint256 _amount,\n        uint256 _maxPrice,\n        address _depositor\n    ) external returns (uint256) {\n        require(_depositor != address(0), \"Invalid address\");\n\n        decayDebt();\n        require(totalDebt <= terms.maxDebt, \"Max capacity reached\");\n\n        uint256 priceInUSD = bondPriceInUSD(); // Stored in bond info\n        uint256 nativePrice = _bondPrice();\n\n        require(\n            _maxPrice >= nativePrice,\n            \"Slippage limit: more than max price\"\n        ); // slippage protection\n\n        uint256 value = ITreasury(treasury).tokenValue(principle, _amount); // valuation of asset in BASH\n        uint256 payout = payoutFor(value); // payout to bonder is computed\n\n        require(payout >= 10000000, \"Bond too small\"); // must be > 0.01 BASH ( underflow protection )\n        require(payout <= maxPayout(), \"Bond too large\"); // size protection because there is no slippage\n\n        // profits are calculated\n        uint256 fee = payout.mul(terms.fee).div(10000);\n        uint256 profit = value.sub(payout).sub(fee);\n\n        /**\n            principle is transferred in\n            approved and\n            deposited into the treasury, returning (_amount - profit) BASH\n         */\n        IERC20(principle).safeTransferFrom(msg.sender, address(this), _amount);\n        IERC20(principle).approve(address(treasury), _amount);\n        ITreasury(treasury).deposit(_amount, principle, profit);\n\n        if (fee != 0) {\n            // fee is transferred to dao\n            IERC20(Bash).safeTransfer(DAO, fee);\n        }\n\n        // total debt is increased\n        totalDebt = totalDebt.add(value); // debt in BASH owed to bonders not yet vested (vested bash is no longer debt)\n\n        // depositor info is stored\n        bondInfo[_depositor] = Bond({\n            payout: bondInfo[_depositor].payout.add(payout),\n            vesting: terms.vestingTerm,\n            lastTime: uint32(block.timestamp),\n            pricePaid: priceInUSD\n        });\n\n        // indexed events are emitted\n        emit BondCreated(\n            _amount,\n            payout,\n            block.timestamp.add(terms.vestingTerm),\n            priceInUSD\n        );\n        emit BondPriceChanged(bondPriceInUSD(), _bondPrice(), debtRatio());\n\n        adjust(); // control variable is adjusted\n        return payout;\n    }\n\n    /**\n     *  @notice redeem bond for user\n     *  @param _recipient address\n     *  @param _stake bool\n     *  @return uint\n     */\n    function redeem(address _recipient, bool _stake)\n        external\n        returns (uint256)\n    {\n        Bond memory info = bondInfo[_recipient];\n        // (seconds since last interaction / vesting term remaining)\n        uint256 percentVested = percentVestedFor(_recipient);\n\n        if (percentVested >= 10000) {\n            // if fully vested\n            delete bondInfo[_recipient]; // delete user info\n            emit BondRedeemed(_recipient, info.payout, 0); // emit bond data\n            return stakeOrSend(_recipient, _stake, info.payout); // pay user everything due\n        } else {\n            // if unfinished\n            // calculate payout vested\n            uint256 payout = info.payout.mul(percentVested).div(10000);\n            // store updated deposit info\n            bondInfo[_recipient] = Bond({\n                payout: info.payout.sub(payout),\n                vesting: info.vesting.sub32(\n                    uint32(block.timestamp).sub32(info.lastTime)\n                ),\n                lastTime: uint32(block.timestamp),\n                pricePaid: info.pricePaid\n            });\n\n            emit BondRedeemed(_recipient, payout, bondInfo[_recipient].payout);\n            return stakeOrSend(_recipient, _stake, payout);\n        }\n    }\n\n    /* ======== INTERNAL HELPER FUNCTIONS ======== */\n\n    /**\n     *  @notice allow user to stake payout automatically\n     *  @param _stake bool\n     *  @param _amount uint\n     *  @return uint\n     */\n    function stakeOrSend(\n        address _recipient,\n        bool _stake,\n        uint256 _amount\n    ) internal returns (uint256) {\n        if (!_stake) {\n            // if user does not want to stake\n            IERC20(Bash).transfer(_recipient, _amount); // send payout\n        } else {\n            // if user wants to stake\n            if (useHelper) {\n                // use if staking warmup is 0\n                IERC20(Bash).approve(stakingHelper, _amount);\n                IStakingHelper(stakingHelper).stake(_amount, _recipient);\n            } else {\n                IERC20(Bash).approve(staking, _amount);\n                IStaking(staking).stake(_amount, _recipient);\n            }\n        }\n        return _amount;\n    }\n\n    /**\n     *  @notice makes incremental adjustment to control variable\n     */\n    function adjust() internal {\n        uint256 timeCanAdjust = adjustment.lastTime.add(adjustment.buffer);\n        if (adjustment.rate != 0 && block.timestamp >= timeCanAdjust) {\n            uint256 initial = terms.controlVariable;\n            if (adjustment.add) {\n                terms.controlVariable = terms.controlVariable.add(\n                    adjustment.rate\n                );\n                if (terms.controlVariable >= adjustment.target) {\n                    adjustment.rate = 0;\n                }\n            } else {\n                terms.controlVariable = terms.controlVariable.sub(\n                    adjustment.rate\n                );\n                if (terms.controlVariable <= adjustment.target) {\n                    adjustment.rate = 0;\n                }\n            }\n            adjustment.lastTime = uint32(block.timestamp);\n            emit ControlVariableAdjustment(\n                initial,\n                terms.controlVariable,\n                adjustment.rate,\n                adjustment.add\n            );\n        }\n    }\n\n    /**\n     *  @notice reduce total debt\n     */\n    function decayDebt() internal {\n        totalDebt = totalDebt.sub(debtDecay());\n        lastDecay = uint32(block.timestamp);\n    }\n\n    /* ======== VIEW FUNCTIONS ======== */\n\n    /**\n     *  @notice determine maximum bond size\n     *  @return uint\n     */\n    function maxPayout() public view returns (uint256) {\n        return IERC20(Bash).totalSupply().mul(terms.maxPayout).div(100000);\n    }\n\n    /**\n     *  @notice calculate interest due for new bond\n     *  @param _value uint\n     *  @return uint\n     */\n    function payoutFor(uint256 _value) public view returns (uint256) {\n        // The payout amount in BASH is the deposited asset’s BASH value divided by the bond price\n        return\n            FixedPoint.fraction(_value, bondPrice()).decode112with18().div(\n                1e16\n            );\n    }\n\n    /**\n     *  @notice calculate current bond premium\n     *  @return price_ uint\n     */\n    function bondPrice() public view returns (uint256 price_) {\n        price_ = terms.controlVariable.mul(debtRatio()).add(1000000000).div(\n            1e7\n        );\n        if (price_ < terms.minimumPrice) {\n            price_ = terms.minimumPrice;\n        }\n    }\n\n    /**\n     *  @notice calculate current bond price and remove floor if above\n     *  @return price_ uint\n     */\n    function _bondPrice() internal returns (uint256 price_) {\n        price_ = terms.controlVariable.mul(debtRatio()).add(1000000000).div(\n            1e7\n        );\n        if (price_ < terms.minimumPrice) {\n            price_ = terms.minimumPrice;\n        } else if (terms.minimumPrice != 0) {\n            terms.minimumPrice = 0;\n        }\n    }\n\n    /**\n     *  @notice converts bond price to DAI value\n     *  @return price_ uint\n     */\n    function bondPriceInUSD() public view returns (uint256 price_) {\n        if (isLiquidityBond) {\n            price_ = bondPrice()\n                .mul(IBondCalculator(bondCalculator).markdown(principle))\n                .div(100);\n        } else {\n            price_ = bondPrice().mul(10**IERC20(principle).decimals()).div(100);\n        }\n    }\n\n    /**\n     *  @notice calculate current ratio of debt to BASH supply\n     *  @return debtRatio_ uint\n     */\n    function debtRatio() public view returns (uint256 debtRatio_) {\n        uint256 supply = IERC20(Bash).totalSupply();\n        debtRatio_ = FixedPoint\n            .fraction(currentDebt().mul(1e9), supply)\n            .decode112with18()\n            .div(1e18);\n    }\n\n    /**\n     *  @notice debt ratio in same terms for reserve or liquidity bonds\n     *  @return uint\n     */\n    function standardizedDebtRatio() external view returns (uint256) {\n        if (isLiquidityBond) {\n            return\n                debtRatio()\n                    .mul(IBondCalculator(bondCalculator).markdown(principle))\n                    .div(1e9);\n        } else {\n            return debtRatio();\n        }\n    }\n\n    /**\n     *  @notice calculate debt factoring in decay\n     *  @return uint\n     */\n    function currentDebt() public view returns (uint256) {\n        return totalDebt.sub(debtDecay());\n    }\n\n    /**\n     *  @notice amount to decay total debt by\n     *  @return decay_ uint\n     */\n    function debtDecay() public view returns (uint256 decay_) {\n        uint32 timeSinceLast = uint32(block.timestamp).sub32(lastDecay);\n        decay_ = totalDebt.mul(timeSinceLast).div(terms.vestingTerm);\n        if (decay_ > totalDebt) {\n            decay_ = totalDebt;\n        }\n    }\n\n    /**\n     *  @notice calculate how far into vesting a depositor is\n     *  @param _depositor address\n     *  @return percentVested_ uint\n     */\n    function percentVestedFor(address _depositor)\n        public\n        view\n        returns (uint256 percentVested_)\n    {\n        Bond memory bond = bondInfo[_depositor];\n        uint256 secondsSinceLast = uint32(block.timestamp).sub(bond.lastTime);\n        uint256 vesting = bond.vesting;\n\n        if (vesting > 0) {\n            percentVested_ = secondsSinceLast.mul(10000).div(vesting);\n        } else {\n            percentVested_ = 0;\n        }\n    }\n\n    /**\n     *  @notice calculate amount of OHM available for claim by depositor\n     *  @param _depositor address\n     *  @return pendingPayout_ uint\n     */\n    function pendingPayoutFor(address _depositor)\n        external\n        view\n        returns (uint256 pendingPayout_)\n    {\n        uint256 percentVested = percentVestedFor(_depositor);\n        uint256 payout = bondInfo[_depositor].payout;\n\n        if (percentVested >= 10000) {\n            pendingPayout_ = payout;\n        } else {\n            pendingPayout_ = payout.mul(percentVested).div(10000);\n        }\n    }\n\n    /* ======= AUXILLIARY ======= */\n\n    /**\n     *  @notice allow anyone to send lost tokens (excluding principle or OHM) to the DAO\n     *  @return bool\n     */\n    function recoverLostToken(address _token) external returns (bool) {\n        require(_token != Bash);\n        require(_token != principle);\n        IERC20(_token).safeTransfer(\n            DAO,\n            IERC20(_token).balanceOf(address(this))\n        );\n        return true;\n    }\n}\n"
			},
			"daibond/ITreasury.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity 0.7.5;\n\ninterface ITreasury {\n    function tokenValue(address _token, uint256 _amount)\n        external\n        view\n        returns (uint256);\n\n    function deposit(\n        uint256 _amount,\n        address _token,\n        uint256 _profit\n    ) external returns (uint256);\n\n    function mintRewards(address _recipient, uint256 _amount) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"daibond/BondDepository.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":3860:9592  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":3860:9592  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd666932b32581acf9f444e88093b80c30463d048d93a422906ff9892853786b64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd666932b32581acf9f444e88093b80c30463d048d93a422906ff9892853786b64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH7 0x6932B32581ACF9 DELEGATECALL DIFFICULTY 0xE8 DUP1 SWAP4 0xB8 0xC ADDRESS CHAINID RETURNDATASIZE DIV DUP14 SWAP4 LOG4 0x22 SWAP1 PUSH16 0xF9892853786B64736F6C634300070500 CALLER ",
							"sourceMap": "3860:5732:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd666932b32581acf9f444e88093b80c30463d048d93a422906ff9892853786b64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH7 0x6932B32581ACF9 DELEGATECALL DIFFICULTY 0xE8 DUP1 SWAP4 0xB8 0xC ADDRESS CHAINID RETURNDATASIZE DIV DUP14 SWAP4 LOG4 0x22 SWAP1 PUSH16 0xF9892853786B64736F6C634300070500 CALLER ",
							"sourceMap": "3860:5732:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"addressToString(address)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3860,
									"end": 9592,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd666932b32581acf9f444e88093b80c30463d048d93a422906ff9892853786b64736f6c63430007050033",
									".code": [
										{
											"begin": 3860,
											"end": 9592,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 9592,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":15610:16055  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":15610:16055  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220634878d03a35e16f29998756139fa8cdec50d6d75c5023362b2f426349da758a64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220634878d03a35e16f29998756139fa8cdec50d6d75c5023362b2f426349da758a64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x4878D03A CALLDATALOAD 0xE1 PUSH16 0x29998756139FA8CDEC50D6D75C502336 0x2B 0x2F TIMESTAMP PUSH4 0x49DA758A PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "15610:445:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220634878d03a35e16f29998756139fa8cdec50d6d75c5023362b2f426349da758a64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x4878D03A CALLDATALOAD 0xE1 PUSH16 0x29998756139FA8CDEC50D6D75C502336 0x2B 0x2F TIMESTAMP PUSH4 0x49DA758A PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "15610:445:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15610,
									"end": 16055,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220634878d03a35e16f29998756139fa8cdec50d6d75c5023362b2f426349da758a64736f6c63430007050033",
									".code": [
										{
											"begin": 15610,
											"end": 16055,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15610,
											"end": 16055,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 954,
								"contract": "daibond/BondDepository.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 960,
								"contract": "daibond/BondDepository.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 962,
								"contract": "daibond/BondDepository.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 964,
								"contract": "daibond/BondDepository.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 966,
								"contract": "daibond/BondDepository.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 968,
								"contract": "daibond/BondDepository.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 954,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 960,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 962,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 964,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 966,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 968,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1497,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)1446_storage)"
							},
							{
								"astId": 1502,
								"contract": "daibond/BondDepository.sol:ERC20Permit",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1446_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1446_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1446_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1445,
										"contract": "daibond/BondDepository.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ExodusBondDepository": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bash",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_principle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_DAO",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_bondCalculator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "expires",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "priceInUSD",
									"type": "uint256"
								}
							],
							"name": "BondCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "priceInUSD",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "internalPrice",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "debtRatio",
									"type": "uint256"
								}
							],
							"name": "BondPriceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"name": "BondRedeemed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "initialBCV",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBCV",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "adjustment",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "addition",
									"type": "bool"
								}
							],
							"name": "ControlVariableAdjustment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Bash",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DAO",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "adjustment",
							"outputs": [
								{
									"internalType": "bool",
									"name": "add",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "target",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "buffer",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "lastTime",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bondCalculator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bondInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pricePaid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "lastTime",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "vesting",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bondPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bondPriceInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "debtDecay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "decay_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "debtRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "debtRatio_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_depositor",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_controlVariable",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minimumPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPayout",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_vestingTerm",
									"type": "uint32"
								}
							],
							"name": "initializeBondTerms",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLiquidityBond",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDecay",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxPayout",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "payoutFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_depositor",
									"type": "address"
								}
							],
							"name": "pendingPayoutFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "pendingPayout_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_depositor",
									"type": "address"
								}
							],
							"name": "percentVestedFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "percentVested_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "policy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "principle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "recoverLostToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_stake",
									"type": "bool"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_addition",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_increment",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_target",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_buffer",
									"type": "uint32"
								}
							],
							"name": "setAdjustment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ExodusBondDepository.PARAMETER",
									"name": "_parameter",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_input",
									"type": "uint256"
								}
							],
							"name": "setBondTerms",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staking",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_helper",
									"type": "bool"
								}
							],
							"name": "setStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staking",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingHelper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "standardizedDebtRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "terms",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "controlVariable",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minimumPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxPayout",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "vestingTerm",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "useHelper",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"bondPrice()": {
								"returns": {
									"price_": "uint"
								}
							},
							"bondPriceInUSD()": {
								"returns": {
									"price_": "uint"
								}
							},
							"currentDebt()": {
								"returns": {
									"_0": "uint"
								}
							},
							"debtDecay()": {
								"returns": {
									"decay_": "uint"
								}
							},
							"debtRatio()": {
								"returns": {
									"debtRatio_": "uint"
								}
							},
							"deposit(uint256,uint256,address)": {
								"params": {
									"_amount": "uint",
									"_depositor": "address",
									"_maxPrice": "uint"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)": {
								"params": {
									"_controlVariable": "uint",
									"_fee": "uint",
									"_initialDebt": "uint",
									"_maxDebt": "uint",
									"_maxPayout": "uint",
									"_minimumPrice": "uint",
									"_vestingTerm": "uint32"
								}
							},
							"maxPayout()": {
								"returns": {
									"_0": "uint"
								}
							},
							"payoutFor(uint256)": {
								"params": {
									"_value": "uint"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"pendingPayoutFor(address)": {
								"params": {
									"_depositor": "address"
								},
								"returns": {
									"pendingPayout_": "uint"
								}
							},
							"percentVestedFor(address)": {
								"params": {
									"_depositor": "address"
								},
								"returns": {
									"percentVested_": "uint"
								}
							},
							"recoverLostToken(address)": {
								"returns": {
									"_0": "bool"
								}
							},
							"redeem(address,bool)": {
								"params": {
									"_recipient": "address",
									"_stake": "bool"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"setAdjustment(bool,uint256,uint256,uint32)": {
								"params": {
									"_addition": "bool",
									"_buffer": "uint",
									"_increment": "uint",
									"_target": "uint"
								}
							},
							"setBondTerms(uint8,uint256)": {
								"params": {
									"_input": "uint",
									"_parameter": "PARAMETER"
								}
							},
							"setStaking(address,bool)": {
								"params": {
									"_helper": "bool",
									"_staking": "address"
								}
							},
							"standardizedDebtRatio()": {
								"returns": {
									"_0": "uint"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":23498:41346  contract ExodusBondDepository is Ownable {... */\n  mstore(0x40, 0x0140)\n    /* \"daibond/BondDepository.sol\":26447:27048  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0xa0\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup1\n  dup5\n  add\n  mload\n  0x60\n  dup6\n  add\n  mload\n  0x80\n  swap1\n  swap6\n  add\n  mload\n    /* \"daibond/BondDepository.sol\":673:679  _owner */\n  0x00\n    /* \"daibond/BondDepository.sol\":673:692  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"daibond/BondDepository.sol\":682:692  msg.sender */\n  caller\n    /* \"daibond/BondDepository.sol\":673:692  _owner = msg.sender */\n  or\n  dup1\n  dup3\n  sstore\n    /* \"daibond/BondDepository.sol\":707:742  OwnershipPushed(address(0), _owner) */\n  swap4\n  mload\n    /* \"daibond/BondDepository.sol\":26447:27048  constructor(... */\n  swap6\n  swap7\n  swap5\n  swap6\n  swap3\n  swap5\n  swap4\n  swap2\n  swap3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"daibond/BondDepository.sol\":735:741  _owner */\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n    /* \"daibond/BondDepository.sol\":707:742  OwnershipPushed(address(0), _owner) */\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  swap1\n    /* \"daibond/BondDepository.sol\":673:679  _owner */\n  dup3\n  swap1\n    /* \"daibond/BondDepository.sol\":707:742  OwnershipPushed(address(0), _owner) */\n  log3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"daibond/BondDepository.sol\":26632:26651  _bash != address(0) */\n  dup6\n  and\n    /* \"daibond/BondDepository.sol\":26624:26652  require(_bash != address(0)) */\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"daibond/BondDepository.sol\":26662:26674  Bash = _bash */\n  0x60\n  dup7\n  swap1\n  shl\n  and\n  0x80\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"daibond/BondDepository.sol\":26692:26716  _principle != address(0) */\n  dup5\n  and\n    /* \"daibond/BondDepository.sol\":26684:26717  require(_principle != address(0)) */\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"daibond/BondDepository.sol\":26727:26749  principle = _principle */\n  0x60\n  dup6\n  swap1\n  shl\n  and\n  0xa0\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"daibond/BondDepository.sol\":26767:26790  _treasury != address(0) */\n  dup4\n  and\n    /* \"daibond/BondDepository.sol\":26759:26791  require(_treasury != address(0)) */\n  tag_9\n  jumpi\n  0x00\n  dup1\n  revert\ntag_9:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"daibond/BondDepository.sol\":26801:26821  treasury = _treasury */\n  0x60\n  dup5\n  swap1\n  shl\n  and\n  0xc0\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"daibond/BondDepository.sol\":26839:26857  _DAO != address(0) */\n  dup3\n  and\n    /* \"daibond/BondDepository.sol\":26831:26858  require(_DAO != address(0)) */\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"daibond/BondDepository.sol\":26868:26878  DAO = _DAO */\n  0x60\n  swap3\n  dup4\n  shl\n  dup2\n  and\n  0xe0\n  mstore\n    /* \"daibond/BondDepository.sol\":26950:26982  bondCalculator = _bondCalculator */\n  swap2\n  dup2\n  swap1\n  shl\n  swap1\n  swap2\n  and\n  0x0120\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"daibond/BondDepository.sol\":27011:27040  _bondCalculator != address(0) */\n  iszero\n  iszero\n    /* \"daibond/BondDepository.sol\":26992:27041  isLiquidityBond = (_bondCalculator != address(0)) */\n  0xf8\n  shl\n  0x0100\n  mstore\n  pop\n  pop\n  pop\n    /* \"daibond/BondDepository.sol\":23498:41346  contract ExodusBondDepository is Ownable {... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  shr(0x60, mload(0xc0))\n  shr(0x60, mload(0xe0))\n  shr(0xf8, mload(0x0100))\n  shr(0x60, mload(0x0120))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xd23e9efc23800776cf8d3669751fafa9f7c61baf4abbaf310045071b5e6148b9\")\n  assignImmutable(\"0x128221face7165ac636c79241bcc071c00b651aee12c4977c3e09ba4d7241443\")\n  assignImmutable(\"0x38b7b61f58f14f07450f1658d7697d2ffee5c2ae614c4752fc225c9ab3f7e9c4\")\n  assignImmutable(\"0x449e2f5e7508d34c0e3e5104a521c043ba399204576497db1b3567c8a164bdfc\")\n  assignImmutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n  assignImmutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":23498:41346  contract ExodusBondDepository is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x844b5c7c\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xcf37a891\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd7ccfb0b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xe392a262\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xe392a262\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf5c2ab5b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xfc7b9c18\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xd7ccfb0b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe0176de8\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xcf37a891\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd4d863ce\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd5025625\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd7969060\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xae9832cf\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xc5332b7c\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xc5332b7c\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcd1234b3\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcea55f57\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0xae9832cf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb4abccba\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x844b5c7c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8dbdbe6d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x904b3ece\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x98fabd3a\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x451ee4a1\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x5a96ac0a\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x759076e5\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x759076e5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x77b81895\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7927ebf8\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x5a96ac0a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x451ee4a1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4cf088d9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x507930ec\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x1e321a0f\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x1e321a0f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1feed31f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f3f470a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3c4e6da7\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x016a4284\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01b88ee8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0505c8c9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"daibond/BondDepository.sol\":24382:24416  address public immutable principle */\n    tag_3:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":40478:40892  function pendingPayoutFor(address _depositor)... */\n    tag_4:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_52\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":755:842  function policy() public view override returns (address) {... */\n    tag_5:\n      tag_48\n      tag_54\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":969:1120  function renounceManagement() public virtual override onlyPolicy {... */\n    tag_6:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"daibond/BondDepository.sol\":28292:29167  function setBondTerms(PARAMETER _parameter, uint256 _input)... */\n    tag_7:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      0xff\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":32838:34100  function redeem(address _recipient, bool _stake)... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_62\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24903:24924  bool public useHelper */\n    tag_9:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":24312:24341  address public immutable Bash */\n    tag_10:\n      tag_48\n      tag_66\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24985:25009  Adjust public adjustment */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      0x40\n      dup1\n      mload\n      swap6\n      iszero\n      iszero\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      dup5\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0xffffffff\n      swap1\n      dup2\n      and\n      0x60\n      dup6\n      add\n      mstore\n      and\n      0x80\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0xa0\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":1126:1445  function pushManagement(address newOwner_)... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_71\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24774:24796  address public staking */\n    tag_13:\n      tag_48\n      tag_73\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":39861:40313  function percentVestedFor(address _depositor)... */\n    tag_14:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_76\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":1451:1665  function pullManagement() public virtual override {... */\n    tag_15:\n      tag_55\n      tag_78\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24451:24484  address public immutable treasury */\n    tag_16:\n      tag_48\n      tag_80\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":39224:39327  function currentDebt() public view returns (uint256) {... */\n    tag_17:\n      tag_50\n      tag_82\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24826:24854  address public stakingHelper */\n    tag_18:\n      tag_48\n      tag_84\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":36752:37052  function payoutFor(uint256 _value) public view returns (uint256) {... */\n    tag_19:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      calldataload\n      tag_87\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":37975:38318  function bondPriceInUSD() public view returns (uint256 price_) {... */\n    tag_20:\n      tag_50\n      tag_89\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":30350:32697  function deposit(... */\n    tag_21:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_92\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":38813:39131  function standardizedDebtRatio() external view returns (uint256) {... */\n    tag_22:\n      tag_50\n      tag_94\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24527:24555  address public immutable DAO */\n    tag_23:\n      tag_48\n      tag_96\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":29354:29715  function setAdjustment(... */\n    tag_24:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      0xffffffff\n      and\n      tag_99\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":41062:41344  function recoverLostToken(address _token) external returns (bool) {... */\n    tag_25:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_102\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24695:24734  address public immutable bondCalculator */\n    tag_26:\n      tag_48\n      tag_104\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":25049:25089  mapping(address => Bond) public bondInfo */\n    tag_27:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_107\n      jump\t// in\n    tag_105:\n      0x40\n      dup1\n      mload\n      swap5\n      dup6\n      mstore\n      0x20\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0xffffffff\n      swap2\n      dup3\n      and\n      dup5\n      dup5\n      add\n      mstore\n      and\n      0x60\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":38435:38698  function debtRatio() public view returns (uint256 debtRatio_) {... */\n    tag_28:\n      tag_50\n      tag_109\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":27338:28011  function initializeBondTerms(... */\n    tag_29:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      0xffffffff\n      and\n      tag_112\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":29841:30142  function setStaking(address _staking, bool _helper) external onlyPolicy {... */\n    tag_30:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_115\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24931:24949  Terms public terms */\n    tag_31:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      0x40\n      dup1\n      mload\n      swap7\n      dup8\n      mstore\n      0x20\n      dup8\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      dup6\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x60\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x80\n      dup5\n      add\n      mstore\n      0xffffffff\n      and\n      0xa0\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0xc0\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":24597:24634  bool public immutable isLiquidityBond */\n    tag_32:\n      tag_63\n      tag_119\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":37149:37412  function bondPrice() public view returns (uint256 price_) {... */\n    tag_33:\n      tag_50\n      tag_121\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":36496:36630  function maxPayout() public view returns (uint256) {... */\n    tag_34:\n      tag_50\n      tag_123\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":39423:39707  function debtDecay() public view returns (uint256 decay_) {... */\n    tag_35:\n      tag_50\n      tag_125\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":25222:25245  uint32 public lastDecay */\n    tag_36:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":25138:25162  uint256 public totalDebt */\n    tag_37:\n      tag_50\n      tag_129\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24382:24416  address public immutable principle */\n    tag_49:\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":40478:40892  function pendingPayoutFor(address _depositor)... */\n    tag_52:\n        /* \"daibond/BondDepository.sol\":40571:40593  uint256 pendingPayout_ */\n      0x00\n        /* \"daibond/BondDepository.sol\":40609:40630  uint256 percentVested */\n      dup1\n        /* \"daibond/BondDepository.sol\":40633:40661  percentVestedFor(_depositor) */\n      tag_131\n        /* \"daibond/BondDepository.sol\":40650:40660  _depositor */\n      dup4\n        /* \"daibond/BondDepository.sol\":40633:40649  percentVestedFor */\n      tag_76\n        /* \"daibond/BondDepository.sol\":40633:40661  percentVestedFor(_depositor) */\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":40688:40708  bondInfo[_depositor] */\n      dup5\n      and\n        /* \"daibond/BondDepository.sol\":40671:40685  uint256 payout */\n      0x00\n        /* \"daibond/BondDepository.sol\":40688:40708  bondInfo[_depositor] */\n      swap1\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":40688:40696  bondInfo */\n      0x0e\n        /* \"daibond/BondDepository.sol\":40688:40708  bondInfo[_depositor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"daibond/BondDepository.sol\":40688:40715  bondInfo[_depositor].payout */\n      sload\n        /* \"daibond/BondDepository.sol\":40609:40661  uint256 percentVested = percentVestedFor(_depositor) */\n      swap1\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":40747:40752  10000 */\n      0x2710\n        /* \"daibond/BondDepository.sol\":40730:40752  percentVested >= 10000 */\n      dup3\n      lt\n        /* \"daibond/BondDepository.sol\":40726:40886  if (percentVested >= 10000) {... */\n      tag_132\n      jumpi\n        /* \"daibond/BondDepository.sol\":40785:40791  payout */\n      dup1\n        /* \"daibond/BondDepository.sol\":40768:40791  pendingPayout_ = payout */\n      swap3\n      pop\n        /* \"daibond/BondDepository.sol\":40726:40886  if (percentVested >= 10000) {... */\n      jump(tag_133)\n    tag_132:\n        /* \"daibond/BondDepository.sol\":40839:40875  payout.mul(percentVested).div(10000) */\n      tag_134\n        /* \"daibond/BondDepository.sol\":40869:40874  10000 */\n      0x2710\n        /* \"daibond/BondDepository.sol\":40839:40864  payout.mul(percentVested) */\n      tag_135\n        /* \"daibond/BondDepository.sol\":40839:40845  payout */\n      dup4\n        /* \"daibond/BondDepository.sol\":40850:40863  percentVested */\n      dup6\n        /* \"daibond/BondDepository.sol\":40839:40849  payout.mul */\n      tag_136\n        /* \"daibond/BondDepository.sol\":40839:40864  payout.mul(percentVested) */\n      jump\t// in\n    tag_135:\n        /* \"daibond/BondDepository.sol\":40839:40868  payout.mul(percentVested).div */\n      swap1\n      tag_137\n        /* \"daibond/BondDepository.sol\":40839:40875  payout.mul(percentVested).div(10000) */\n      jump\t// in\n    tag_134:\n        /* \"daibond/BondDepository.sol\":40822:40875  pendingPayout_ = payout.mul(percentVested).div(10000) */\n      swap3\n      pop\n        /* \"daibond/BondDepository.sol\":40726:40886  if (percentVested >= 10000) {... */\n    tag_133:\n        /* \"daibond/BondDepository.sol\":40478:40892  function pendingPayoutFor(address _depositor)... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":755:842  function policy() public view override returns (address) {... */\n    tag_54:\n        /* \"daibond/BondDepository.sol\":803:810  address */\n      0x00\n        /* \"daibond/BondDepository.sol\":829:835  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"daibond/BondDepository.sol\":755:842  function policy() public view override returns (address) {... */\n    tag_138:\n      swap1\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":969:1120  function renounceManagement() public virtual override onlyPolicy {... */\n    tag_56:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_140\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_140:\n        /* \"daibond/BondDepository.sol\":1081:1082  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":1065:1071  _owner */\n      dup1\n      sload\n        /* \"daibond/BondDepository.sol\":1049:1084  OwnershipPushed(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1065:1071  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"daibond/BondDepository.sol\":1049:1084  OwnershipPushed(_owner, address(0)) */\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      swap1\n        /* \"daibond/BondDepository.sol\":1081:1082  0 */\n      dup4\n      swap1\n        /* \"daibond/BondDepository.sol\":1049:1084  OwnershipPushed(_owner, address(0)) */\n      log3\n        /* \"daibond/BondDepository.sol\":1111:1112  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":1094:1113  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":969:1120  function renounceManagement() public virtual override onlyPolicy {... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":28292:29167  function setBondTerms(PARAMETER _parameter, uint256 _input)... */\n    tag_59:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_143\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_143:\n        /* \"daibond/BondDepository.sol\":28420:28437  PARAMETER.VESTING */\n      0x00\n        /* \"daibond/BondDepository.sol\":28406:28416  _parameter */\n      dup3\n        /* \"daibond/BondDepository.sol\":28406:28437  _parameter == PARAMETER.VESTING */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      invalid\n    tag_146:\n      eq\n        /* \"daibond/BondDepository.sol\":28402:29161  if (_parameter == PARAMETER.VESTING) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"daibond/BondDepository.sol\":28488:28494  129600 */\n      0x01fa40\n        /* \"daibond/BondDepository.sol\":28478:28484  _input */\n      dup2\n        /* \"daibond/BondDepository.sol\":28478:28494  _input >= 129600 */\n      lt\n      iszero\n        /* \"daibond/BondDepository.sol\":28470:28535  require(_input >= 129600, \"Vesting must be longer than 36 hours\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9bf0496b18f4db662847e65668d0ae3d4d7f5ebc115d137b3b0990ae2896f44e\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"daibond/BondDepository.sol\":28549:28566  terms.vestingTerm */\n      0x09\n        /* \"daibond/BondDepository.sol\":28549:28583  terms.vestingTerm = uint32(_input) */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xffffffff\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":28402:29161  if (_parameter == PARAMETER.VESTING) {... */\n      jump(tag_166)\n    tag_147:\n        /* \"daibond/BondDepository.sol\":28618:28634  PARAMETER.PAYOUT */\n      0x01\n        /* \"daibond/BondDepository.sol\":28604:28614  _parameter */\n      dup3\n        /* \"daibond/BondDepository.sol\":28604:28634  _parameter == PARAMETER.PAYOUT */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_151\n      jumpi\n      invalid\n    tag_151:\n      eq\n        /* \"daibond/BondDepository.sol\":28600:29161  if (_parameter == PARAMETER.PAYOUT) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"daibond/BondDepository.sol\":28685:28689  1000 */\n      0x03e8\n        /* \"daibond/BondDepository.sol\":28675:28681  _input */\n      dup2\n        /* \"daibond/BondDepository.sol\":28675:28689  _input <= 1000 */\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":28667:28726  require(_input <= 1000, \"Payout cannot be above 1 percent\") */\n      tag_153\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x5061796f75742063616e6e6f742062652061626f766520312070657263656e74\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_153:\n        /* \"daibond/BondDepository.sol\":28740:28755  terms.maxPayout */\n      0x06\n        /* \"daibond/BondDepository.sol\":28740:28764  terms.maxPayout = _input */\n      dup2\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":28600:29161  if (_parameter == PARAMETER.PAYOUT) {... */\n      jump(tag_166)\n    tag_152:\n        /* \"daibond/BondDepository.sol\":28799:28812  PARAMETER.FEE */\n      0x02\n        /* \"daibond/BondDepository.sol\":28785:28795  _parameter */\n      dup3\n        /* \"daibond/BondDepository.sol\":28785:28812  _parameter == PARAMETER.FEE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n      eq\n        /* \"daibond/BondDepository.sol\":28781:29161  if (_parameter == PARAMETER.FEE) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"daibond/BondDepository.sol\":28863:28868  10000 */\n      0x2710\n        /* \"daibond/BondDepository.sol\":28853:28859  _input */\n      dup2\n        /* \"daibond/BondDepository.sol\":28853:28868  _input <= 10000 */\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":28845:28901  require(_input <= 10000, \"DAO fee cannot exceed payout\") */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x44414f206665652063616e6e6f7420657863656564207061796f757400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_158:\n        /* \"daibond/BondDepository.sol\":28915:28924  terms.fee */\n      0x07\n        /* \"daibond/BondDepository.sol\":28915:28933  terms.fee = _input */\n      dup2\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":28781:29161  if (_parameter == PARAMETER.FEE) {... */\n      jump(tag_166)\n    tag_157:\n        /* \"daibond/BondDepository.sol\":28968:28982  PARAMETER.DEBT */\n      0x03\n        /* \"daibond/BondDepository.sol\":28954:28964  _parameter */\n      dup3\n        /* \"daibond/BondDepository.sol\":28954:28982  _parameter == PARAMETER.DEBT */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      eq\n        /* \"daibond/BondDepository.sol\":28950:29161  if (_parameter == PARAMETER.DEBT) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"daibond/BondDepository.sol\":29015:29028  terms.maxDebt */\n      0x08\n        /* \"daibond/BondDepository.sol\":29015:29037  terms.maxDebt = _input */\n      dup2\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":28950:29161  if (_parameter == PARAMETER.DEBT) {... */\n      jump(tag_166)\n    tag_162:\n        /* \"daibond/BondDepository.sol\":29072:29090  PARAMETER.MINPRICE */\n      0x04\n        /* \"daibond/BondDepository.sol\":29058:29068  _parameter */\n      dup3\n        /* \"daibond/BondDepository.sol\":29058:29090  _parameter == PARAMETER.MINPRICE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_165\n      jumpi\n      invalid\n    tag_165:\n      eq\n        /* \"daibond/BondDepository.sol\":29054:29161  if (_parameter == PARAMETER.MINPRICE) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"daibond/BondDepository.sol\":29123:29141  terms.minimumPrice */\n      0x05\n        /* \"daibond/BondDepository.sol\":29123:29150  terms.minimumPrice = _input */\n      dup2\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":29054:29161  if (_parameter == PARAMETER.MINPRICE) {... */\n    tag_166:\n        /* \"daibond/BondDepository.sol\":28292:29167  function setBondTerms(PARAMETER _parameter, uint256 _input)... */\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":32838:34100  function redeem(address _recipient, bool _stake)... */\n    tag_62:\n        /* \"daibond/BondDepository.sol\":32921:32928  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":32944:32960  Bond memory info */\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":32963:32983  bondInfo[_recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":32963:32971  bondInfo */\n      0x0e\n        /* \"daibond/BondDepository.sol\":32963:32983  bondInfo[_recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"daibond/BondDepository.sol\":32944:32983  Bond memory info = bondInfo[_recipient] */\n      dup2\n      mload\n      0x80\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      add\n      sload\n      0xffffffff\n      dup1\n      dup3\n      and\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x0100000000\n      swap1\n      div\n      and\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n        /* \"daibond/BondDepository.sol\":33086:33114  percentVestedFor(_recipient) */\n      tag_170\n        /* \"daibond/BondDepository.sol\":32972:32982  _recipient */\n      dup6\n        /* \"daibond/BondDepository.sol\":33086:33102  percentVestedFor */\n      tag_76\n        /* \"daibond/BondDepository.sol\":33086:33114  percentVestedFor(_recipient) */\n      jump\t// in\n    tag_170:\n        /* \"daibond/BondDepository.sol\":33062:33114  uint256 percentVested = percentVestedFor(_recipient) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":33146:33151  10000 */\n      0x2710\n        /* \"daibond/BondDepository.sol\":33129:33142  percentVested */\n      dup2\n        /* \"daibond/BondDepository.sol\":33129:33151  percentVested >= 10000 */\n      lt\n        /* \"daibond/BondDepository.sol\":33125:34094  if (percentVested >= 10000) {... */\n      tag_171\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":33205:33225  bondInfo[_recipient] */\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":33205:33213  bondInfo */\n      0x0e\n        /* \"daibond/BondDepository.sol\":33205:33225  bondInfo[_recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"daibond/BondDepository.sol\":33198:33225  delete bondInfo[_recipient] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x02\n      add\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":33289:33300  info.payout */\n      dup6\n      mload\n        /* \"daibond/BondDepository.sol\":33264:33304  BondRedeemed(_recipient, info.payout, 0) */\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup2\n      mload\n      0x51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b1\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log2\n        /* \"daibond/BondDepository.sol\":33343:33387  stakeOrSend(_recipient, _stake, info.payout) */\n      tag_172\n        /* \"daibond/BondDepository.sol\":33355:33365  _recipient */\n      dup6\n        /* \"daibond/BondDepository.sol\":33367:33373  _stake */\n      dup6\n        /* \"daibond/BondDepository.sol\":33375:33379  info */\n      dup5\n        /* \"daibond/BondDepository.sol\":33375:33386  info.payout */\n      0x00\n      add\n      mload\n        /* \"daibond/BondDepository.sol\":33343:33354  stakeOrSend */\n      tag_173\n        /* \"daibond/BondDepository.sol\":33343:33387  stakeOrSend(_recipient, _stake, info.payout) */\n      jump\t// in\n    tag_172:\n        /* \"daibond/BondDepository.sol\":33336:33387  return stakeOrSend(_recipient, _stake, info.payout) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_167)\n        /* \"daibond/BondDepository.sol\":33125:34094  if (percentVested >= 10000) {... */\n    tag_171:\n        /* \"daibond/BondDepository.sol\":33530:33541  info.payout */\n      dup2\n      mload\n        /* \"daibond/BondDepository.sol\":33513:33527  uint256 payout */\n      0x00\n      swap1\n        /* \"daibond/BondDepository.sol\":33530:33571  info.payout.mul(percentVested).div(10000) */\n      tag_175\n      swap1\n        /* \"daibond/BondDepository.sol\":33565:33570  10000 */\n      0x2710\n      swap1\n        /* \"daibond/BondDepository.sol\":33530:33560  info.payout.mul(percentVested) */\n      tag_135\n      swap1\n        /* \"daibond/BondDepository.sol\":33546:33559  percentVested */\n      dup6\n        /* \"daibond/BondDepository.sol\":33530:33545  info.payout.mul */\n      tag_136\n        /* \"daibond/BondDepository.sol\":33530:33560  info.payout.mul(percentVested) */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":33530:33571  info.payout.mul(percentVested).div(10000) */\n    tag_175:\n        /* \"daibond/BondDepository.sol\":33513:33571  uint256 payout = info.payout.mul(percentVested).div(10000) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":33650:33942  Bond({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"daibond/BondDepository.sol\":33681:33704  info.payout.sub(payout) */\n      tag_177\n        /* \"daibond/BondDepository.sol\":33697:33703  payout */\n      dup4\n        /* \"daibond/BondDepository.sol\":33681:33685  info */\n      dup7\n        /* \"daibond/BondDepository.sol\":33681:33692  info.payout */\n      0x00\n      add\n      mload\n        /* \"daibond/BondDepository.sol\":33681:33696  info.payout.sub */\n      tag_178\n      swap1\n        /* \"daibond/BondDepository.sol\":33681:33704  info.payout.sub(payout) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"daibond/BondDepository.sol\":33650:33942  Bond({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"daibond/BondDepository.sol\":33913:33917  info */\n      dup5\n        /* \"daibond/BondDepository.sol\":33913:33927  info.pricePaid */\n      0x20\n      add\n      mload\n        /* \"daibond/BondDepository.sol\":33650:33942  Bond({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"daibond/BondDepository.sol\":33868:33883  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":33650:33942  Bond({... */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"daibond/BondDepository.sol\":33731:33833  info.vesting.sub32(... */\n      tag_179\n        /* \"daibond/BondDepository.sol\":33771:33815  uint32(block.timestamp).sub32(info.lastTime) */\n      tag_180\n        /* \"daibond/BondDepository.sol\":33801:33805  info */\n      dup7\n        /* \"daibond/BondDepository.sol\":33801:33814  info.lastTime */\n      0x40\n      add\n      mload\n        /* \"daibond/BondDepository.sol\":33778:33793  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":33771:33800  uint32(block.timestamp).sub32 */\n      0xffffffff\n      and\n      tag_181\n      swap1\n        /* \"daibond/BondDepository.sol\":33771:33815  uint32(block.timestamp).sub32(info.lastTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"daibond/BondDepository.sol\":33731:33735  info */\n      dup7\n        /* \"daibond/BondDepository.sol\":33731:33743  info.vesting */\n      0x60\n      add\n      mload\n        /* \"daibond/BondDepository.sol\":33731:33749  info.vesting.sub32 */\n      0xffffffff\n      and\n      tag_181\n      swap1\n        /* \"daibond/BondDepository.sol\":33731:33833  info.vesting.sub32(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"daibond/BondDepository.sol\":33650:33942  Bond({... */\n      0xffffffff\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":33627:33647  bondInfo[_recipient] */\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":33627:33635  bondInfo */\n      0x0e\n        /* \"daibond/BondDepository.sol\":33627:33647  bondInfo[_recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"daibond/BondDepository.sol\":33627:33942  bondInfo[_recipient] = Bond({... */\n      dup6\n      mload\n      dup1\n      dup3\n      sstore\n      dup7\n      dup4\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      dup7\n      dup5\n      add\n      mload\n      0x02\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      0x60\n      swap1\n      swap9\n      add\n      mload\n      dup8\n      and\n      0x0100000000\n      mul\n      not(0xffffffff00000000)\n      swap4\n      swap1\n      swap8\n      and\n      not(0xffffffff)\n      swap1\n      swap9\n      and\n      swap8\n      swap1\n      swap8\n      or\n      swap2\n      swap1\n      swap2\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap5\n      sstore\n        /* \"daibond/BondDepository.sol\":33962:34023  BondRedeemed(_recipient, payout, bondInfo[_recipient].payout) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup2\n      mload\n        /* \"daibond/BondDepository.sol\":33627:33647  bondInfo[_recipient] */\n      swap1\n      swap3\n        /* \"daibond/BondDepository.sol\":33962:34023  BondRedeemed(_recipient, payout, bondInfo[_recipient].payout) */\n      0x51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b1\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"daibond/BondDepository.sol\":34044:34083  stakeOrSend(_recipient, _stake, payout) */\n      tag_182\n        /* \"daibond/BondDepository.sol\":34056:34066  _recipient */\n      dup7\n        /* \"daibond/BondDepository.sol\":34068:34074  _stake */\n      dup7\n        /* \"daibond/BondDepository.sol\":34076:34082  payout */\n      dup4\n        /* \"daibond/BondDepository.sol\":34044:34055  stakeOrSend */\n      tag_173\n        /* \"daibond/BondDepository.sol\":34044:34083  stakeOrSend(_recipient, _stake, payout) */\n      jump\t// in\n    tag_182:\n        /* \"daibond/BondDepository.sol\":34037:34083  return stakeOrSend(_recipient, _stake, payout) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":32838:34100  function redeem(address _recipient, bool _stake)... */\n    tag_167:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24903:24924  bool public useHelper */\n    tag_64:\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24312:24341  address public immutable Bash */\n    tag_66:\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24985:25009  Adjust public adjustment */\n    tag_68:\n      sload(0x0a)\n      sload(0x0b)\n      sload(0x0c)\n      sload(0x0d)\n      0xff\n      swap1\n      swap4\n      and\n      swap3\n      0xffffffff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100000000\n      swap1\n      div\n      and\n      dup6\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":1126:1445  function pushManagement(address newOwner_)... */\n    tag_71:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1271:1294  newOwner_ != address(0) */\n      dup2\n      and\n        /* \"daibond/BondDepository.sol\":1250:1358  require(... */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"daibond/BondDepository.sol\":1389:1395  _owner */\n      0x00\n      dup1\n      sload\n        /* \"daibond/BondDepository.sol\":1373:1407  OwnershipPushed(_owner, newOwner_) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"daibond/BondDepository.sol\":1389:1395  _owner */\n      swap3\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":1373:1407  OwnershipPushed(_owner, newOwner_) */\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      swap2\n      log3\n        /* \"daibond/BondDepository.sol\":1417:1426  _newOwner */\n      0x01\n        /* \"daibond/BondDepository.sol\":1417:1438  _newOwner = newOwner_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":1126:1445  function pushManagement(address newOwner_)... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24774:24796  address public staking */\n    tag_73:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":39861:40313  function percentVestedFor(address _depositor)... */\n    tag_76:\n        /* \"daibond/BondDepository.sol\":39952:39974  uint256 percentVested_ */\n      0x00\n        /* \"daibond/BondDepository.sol\":39990:40006  Bond memory bond */\n      tag_188\n      tag_169\n      jump\t// in\n    tag_188:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":40009:40029  bondInfo[_depositor] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":40009:40017  bondInfo */\n      0x0e\n        /* \"daibond/BondDepository.sol\":40009:40029  bondInfo[_depositor] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"daibond/BondDepository.sol\":39990:40029  Bond memory bond = bondInfo[_depositor] */\n      dup2\n      mload\n      0x80\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      add\n      sload\n      0xffffffff\n      dup1\n      dup3\n      and\n      swap3\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x0100000000\n      swap1\n      swap2\n      div\n      dup2\n      and\n      0x60\n      dup5\n      add\n      mstore\n      swap2\n      swap3\n        /* \"daibond/BondDepository.sol\":40009:40029  bondInfo[_depositor] */\n      swap2\n        /* \"daibond/BondDepository.sol\":40066:40108  uint32(block.timestamp).sub(bond.lastTime) */\n      tag_189\n      swap2\n        /* \"daibond/BondDepository.sol\":40073:40088  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":40066:40093  uint32(block.timestamp).sub */\n      dup3\n      and\n      swap2\n      tag_178\n        /* \"daibond/BondDepository.sol\":40066:40108  uint32(block.timestamp).sub(bond.lastTime) */\n      and\n      jump\t// in\n    tag_189:\n        /* \"daibond/BondDepository.sol\":40136:40148  bond.vesting */\n      0x60\n      dup4\n      add\n      mload\n        /* \"daibond/BondDepository.sol\":40039:40108  uint256 secondsSinceLast = uint32(block.timestamp).sub(bond.lastTime) */\n      swap1\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":40118:40148  uint256 vesting = bond.vesting */\n      0xffffffff\n      and\n        /* \"daibond/BondDepository.sol\":40163:40174  vesting > 0 */\n      dup1\n      iszero\n        /* \"daibond/BondDepository.sol\":40159:40307  if (vesting > 0) {... */\n      tag_190\n      jumpi\n        /* \"daibond/BondDepository.sol\":40207:40247  secondsSinceLast.mul(10000).div(vesting) */\n      tag_191\n        /* \"daibond/BondDepository.sol\":40239:40246  vesting */\n      dup2\n        /* \"daibond/BondDepository.sol\":40207:40234  secondsSinceLast.mul(10000) */\n      tag_135\n        /* \"daibond/BondDepository.sol\":40207:40223  secondsSinceLast */\n      dup5\n        /* \"daibond/BondDepository.sol\":40228:40233  10000 */\n      0x2710\n        /* \"daibond/BondDepository.sol\":40207:40227  secondsSinceLast.mul */\n      tag_136\n        /* \"daibond/BondDepository.sol\":40207:40234  secondsSinceLast.mul(10000) */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":40207:40247  secondsSinceLast.mul(10000).div(vesting) */\n    tag_191:\n        /* \"daibond/BondDepository.sol\":40190:40247  percentVested_ = secondsSinceLast.mul(10000).div(vesting) */\n      swap4\n      pop\n        /* \"daibond/BondDepository.sol\":40159:40307  if (vesting > 0) {... */\n      jump(tag_193)\n    tag_190:\n        /* \"daibond/BondDepository.sol\":40295:40296  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":40278:40296  percentVested_ = 0 */\n      swap4\n      pop\n        /* \"daibond/BondDepository.sol\":40159:40307  if (vesting > 0) {... */\n    tag_193:\n        /* \"daibond/BondDepository.sol\":39861:40313  function percentVestedFor(address _depositor)... */\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":1451:1665  function pullManagement() public virtual override {... */\n    tag_78:\n        /* \"daibond/BondDepository.sol\":1533:1542  _newOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"daibond/BondDepository.sol\":1519:1529  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":1519:1542  msg.sender == _newOwner */\n      eq\n        /* \"daibond/BondDepository.sol\":1511:1581  require(msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"daibond/BondDepository.sol\":1620:1629  _newOwner */\n      sload(0x01)\n      0x00\n        /* \"daibond/BondDepository.sol\":1612:1618  _owner */\n      dup1\n      sload\n        /* \"daibond/BondDepository.sol\":1596:1630  OwnershipPulled(_owner, _newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1620:1629  _newOwner */\n      swap4\n      dup5\n      and\n      swap4\n        /* \"daibond/BondDepository.sol\":1612:1618  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":1596:1630  OwnershipPulled(_owner, _newOwner) */\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      swap2\n      log3\n        /* \"daibond/BondDepository.sol\":1649:1658  _newOwner */\n      sload(0x01)\n      0x00\n        /* \"daibond/BondDepository.sol\":1640:1658  _owner = _newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1649:1658  _newOwner */\n      swap1\n      swap3\n      and\n        /* \"daibond/BondDepository.sol\":1640:1658  _owner = _newOwner */\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":1451:1665  function pullManagement() public virtual override {... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24451:24484  address public immutable treasury */\n    tag_80:\n      immutable(\"0x449e2f5e7508d34c0e3e5104a521c043ba399204576497db1b3567c8a164bdfc\")\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":39224:39327  function currentDebt() public view returns (uint256) {... */\n    tag_82:\n        /* \"daibond/BondDepository.sol\":39268:39275  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":39294:39320  totalDebt.sub(debtDecay()) */\n      tag_197\n        /* \"daibond/BondDepository.sol\":39308:39319  debtDecay() */\n      tag_198\n        /* \"daibond/BondDepository.sol\":39308:39317  debtDecay */\n      tag_125\n        /* \"daibond/BondDepository.sol\":39308:39319  debtDecay() */\n      jump\t// in\n    tag_198:\n        /* \"daibond/BondDepository.sol\":39294:39303  totalDebt */\n      sload(0x0f)\n      swap1\n        /* \"daibond/BondDepository.sol\":39294:39307  totalDebt.sub */\n      tag_178\n        /* \"daibond/BondDepository.sol\":39294:39320  totalDebt.sub(debtDecay()) */\n      jump\t// in\n    tag_197:\n        /* \"daibond/BondDepository.sol\":39287:39320  return totalDebt.sub(debtDecay()) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":39224:39327  function currentDebt() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24826:24854  address public stakingHelper */\n    tag_84:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":36752:37052  function payoutFor(uint256 _value) public view returns (uint256) {... */\n    tag_87:\n        /* \"daibond/BondDepository.sol\":36808:36815  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":36947:37045  FixedPoint.fraction(_value, bondPrice()).decode112with18().div(... */\n      tag_167\n        /* \"daibond/BondDepository.sol\":37027:37031  1e16 */\n      0x2386f26fc10000\n        /* \"daibond/BondDepository.sol\":36947:37005  FixedPoint.fraction(_value, bondPrice()).decode112with18() */\n      tag_135\n        /* \"daibond/BondDepository.sol\":36947:36987  FixedPoint.fraction(_value, bondPrice()) */\n      tag_202\n        /* \"daibond/BondDepository.sol\":36967:36973  _value */\n      dup6\n        /* \"daibond/BondDepository.sol\":36975:36986  bondPrice() */\n      tag_203\n        /* \"daibond/BondDepository.sol\":36975:36984  bondPrice */\n      tag_121\n        /* \"daibond/BondDepository.sol\":36975:36986  bondPrice() */\n      jump\t// in\n    tag_203:\n        /* \"daibond/BondDepository.sol\":36947:36966  FixedPoint.fraction */\n      tag_204\n        /* \"daibond/BondDepository.sol\":36947:36987  FixedPoint.fraction(_value, bondPrice()) */\n      jump\t// in\n    tag_202:\n        /* \"daibond/BondDepository.sol\":36947:37003  FixedPoint.fraction(_value, bondPrice()).decode112with18 */\n      tag_205\n        /* \"daibond/BondDepository.sol\":36947:37005  FixedPoint.fraction(_value, bondPrice()).decode112with18() */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":37975:38318  function bondPriceInUSD() public view returns (uint256 price_) {... */\n    tag_89:\n        /* \"daibond/BondDepository.sol\":38022:38036  uint256 price_ */\n      0x00\n        /* \"daibond/BondDepository.sol\":38052:38067  isLiquidityBond */\n      immutable(\"0x128221face7165ac636c79241bcc071c00b651aee12c4977c3e09ba4d7241443\")\n        /* \"daibond/BondDepository.sol\":38048:38312  if (isLiquidityBond) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"daibond/BondDepository.sol\":38092:38203  bondPrice()... */\n      tag_208\n        /* \"daibond/BondDepository.sol\":38199:38202  100 */\n      0x64\n        /* \"daibond/BondDepository.sol\":38092:38177  bondPrice()... */\n      tag_135\n        /* \"daibond/BondDepository.sol\":38141:38155  bondCalculator */\n      immutable(\"0xd23e9efc23800776cf8d3669751fafa9f7c61baf4abbaf310045071b5e6148b9\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":38125:38165  IBondCalculator(bondCalculator).markdown */\n      and\n      0x32da80a3\n        /* \"daibond/BondDepository.sol\":38166:38175  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n        /* \"daibond/BondDepository.sol\":38125:38176  IBondCalculator(bondCalculator).markdown(principle) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      mload\n        /* \"daibond/BondDepository.sol\":38092:38103  bondPrice() */\n      tag_214\n        /* \"daibond/BondDepository.sol\":38092:38101  bondPrice */\n      tag_121\n        /* \"daibond/BondDepository.sol\":38092:38103  bondPrice() */\n      jump\t// in\n    tag_214:\n        /* \"daibond/BondDepository.sol\":38092:38124  bondPrice()... */\n      swap1\n      tag_136\n        /* \"daibond/BondDepository.sol\":38092:38177  bondPrice()... */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":38092:38203  bondPrice()... */\n    tag_208:\n        /* \"daibond/BondDepository.sol\":38083:38203  price_ = bondPrice()... */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":38048:38312  if (isLiquidityBond) {... */\n      jump(tag_138)\n    tag_207:\n        /* \"daibond/BondDepository.sol\":38243:38301  bondPrice().mul(10**IERC20(principle).decimals()).div(100) */\n      tag_197\n        /* \"daibond/BondDepository.sol\":38297:38300  100 */\n      0x64\n        /* \"daibond/BondDepository.sol\":38243:38292  bondPrice().mul(10**IERC20(principle).decimals()) */\n      tag_135\n        /* \"daibond/BondDepository.sol\":38270:38279  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":38263:38289  IERC20(principle).decimals */\n      and\n      0x313ce567\n        /* \"daibond/BondDepository.sol\":38263:38291  IERC20(principle).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      mload\n        /* \"daibond/BondDepository.sol\":38259:38291  10**IERC20(principle).decimals() */\n      0xff\n      and\n        /* \"daibond/BondDepository.sol\":38259:38261  10 */\n      0x0a\n        /* \"daibond/BondDepository.sol\":38259:38291  10**IERC20(principle).decimals() */\n      exp\n        /* \"daibond/BondDepository.sol\":38243:38254  bondPrice() */\n      tag_214\n        /* \"daibond/BondDepository.sol\":38243:38252  bondPrice */\n      tag_121\n        /* \"daibond/BondDepository.sol\":38243:38254  bondPrice() */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":30350:32697  function deposit(... */\n    tag_92:\n        /* \"daibond/BondDepository.sol\":30471:30478  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":30498:30522  _depositor != address(0) */\n      dup3\n      and\n        /* \"daibond/BondDepository.sol\":30490:30542  require(_depositor != address(0), \"Invalid address\") */\n      tag_224\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_224:\n        /* \"daibond/BondDepository.sol\":30553:30564  decayDebt() */\n      tag_225\n        /* \"daibond/BondDepository.sol\":30553:30562  decayDebt */\n      tag_226\n        /* \"daibond/BondDepository.sol\":30553:30564  decayDebt() */\n      jump\t// in\n    tag_225:\n        /* \"daibond/BondDepository.sol\":30595:30608  terms.maxDebt */\n      sload(0x08)\n        /* \"daibond/BondDepository.sol\":30582:30591  totalDebt */\n      sload(0x0f)\n        /* \"daibond/BondDepository.sol\":30582:30608  totalDebt <= terms.maxDebt */\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":30574:30633  require(totalDebt <= terms.maxDebt, \"Max capacity reached\") */\n      tag_227\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      0x4d61782063617061636974792072656163686564000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_227:\n        /* \"daibond/BondDepository.sol\":30644:30662  uint256 priceInUSD */\n      0x00\n        /* \"daibond/BondDepository.sol\":30665:30681  bondPriceInUSD() */\n      tag_228\n        /* \"daibond/BondDepository.sol\":30665:30679  bondPriceInUSD */\n      tag_89\n        /* \"daibond/BondDepository.sol\":30665:30681  bondPriceInUSD() */\n      jump\t// in\n    tag_228:\n        /* \"daibond/BondDepository.sol\":30644:30681  uint256 priceInUSD = bondPriceInUSD() */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":30714:30733  uint256 nativePrice */\n      0x00\n        /* \"daibond/BondDepository.sol\":30736:30748  _bondPrice() */\n      tag_229\n        /* \"daibond/BondDepository.sol\":30736:30746  _bondPrice */\n      tag_230\n        /* \"daibond/BondDepository.sol\":30736:30748  _bondPrice() */\n      jump\t// in\n    tag_229:\n        /* \"daibond/BondDepository.sol\":30714:30748  uint256 nativePrice = _bondPrice() */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":30793:30804  nativePrice */\n      dup1\n        /* \"daibond/BondDepository.sol\":30780:30789  _maxPrice */\n      dup6\n        /* \"daibond/BondDepository.sol\":30780:30804  _maxPrice >= nativePrice */\n      lt\n      iszero\n        /* \"daibond/BondDepository.sol\":30759:30865  require(... */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9b1eacaf7b3b2d412df286fef87f078c0c28d492dea75275391ee8422db5360c\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"daibond/BondDepository.sol\":30899:30912  uint256 value */\n      0x00\n        /* \"daibond/BondDepository.sol\":30925:30933  treasury */\n      immutable(\"0x449e2f5e7508d34c0e3e5104a521c043ba399204576497db1b3567c8a164bdfc\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":30915:30945  ITreasury(treasury).tokenValue */\n      and\n      0xf1821783\n        /* \"daibond/BondDepository.sol\":30946:30955  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n        /* \"daibond/BondDepository.sol\":30957:30964  _amount */\n      dup10\n        /* \"daibond/BondDepository.sol\":30915:30965  ITreasury(treasury).tokenValue(principle, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      mload\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":31005:31019  uint256 payout */\n      0x00\n        /* \"daibond/BondDepository.sol\":31022:31038  payoutFor(value) */\n      tag_236\n        /* \"daibond/BondDepository.sol\":30915:30965  ITreasury(treasury).tokenValue(principle, _amount) */\n      dup3\n        /* \"daibond/BondDepository.sol\":31022:31031  payoutFor */\n      tag_87\n        /* \"daibond/BondDepository.sol\":31022:31038  payoutFor(value) */\n      jump\t// in\n    tag_236:\n        /* \"daibond/BondDepository.sol\":31005:31038  uint256 payout = payoutFor(value) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":31099:31107  10000000 */\n      0x989680\n        /* \"daibond/BondDepository.sol\":31089:31095  payout */\n      dup2\n        /* \"daibond/BondDepository.sol\":31089:31107  payout >= 10000000 */\n      lt\n      iszero\n        /* \"daibond/BondDepository.sol\":31081:31126  require(payout >= 10000000, \"Bond too small\") */\n      tag_237\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      0x426f6e6420746f6f20736d616c6c000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_237:\n        /* \"daibond/BondDepository.sol\":31202:31213  maxPayout() */\n      tag_238\n        /* \"daibond/BondDepository.sol\":31202:31211  maxPayout */\n      tag_123\n        /* \"daibond/BondDepository.sol\":31202:31213  maxPayout() */\n      jump\t// in\n    tag_238:\n        /* \"daibond/BondDepository.sol\":31192:31198  payout */\n      dup2\n        /* \"daibond/BondDepository.sol\":31192:31213  payout <= maxPayout() */\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":31184:31232  require(payout <= maxPayout(), \"Bond too large\") */\n      tag_239\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      0x426f6e6420746f6f206c61726765000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_239:\n        /* \"daibond/BondDepository.sol\":31325:31336  uint256 fee */\n      0x00\n        /* \"daibond/BondDepository.sol\":31339:31371  payout.mul(terms.fee).div(10000) */\n      tag_240\n        /* \"daibond/BondDepository.sol\":31365:31370  10000 */\n      0x2710\n        /* \"daibond/BondDepository.sol\":31339:31360  payout.mul(terms.fee) */\n      tag_135\n        /* \"daibond/BondDepository.sol\":31350:31355  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":31350:31359  terms.fee */\n      0x03\n      add\n      sload\n        /* \"daibond/BondDepository.sol\":31339:31345  payout */\n      dup6\n        /* \"daibond/BondDepository.sol\":31339:31349  payout.mul */\n      tag_136\n      swap1\n        /* \"daibond/BondDepository.sol\":31339:31360  payout.mul(terms.fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":31339:31371  payout.mul(terms.fee).div(10000) */\n    tag_240:\n        /* \"daibond/BondDepository.sol\":31325:31371  uint256 fee = payout.mul(terms.fee).div(10000) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":31381:31395  uint256 profit */\n      0x00\n        /* \"daibond/BondDepository.sol\":31398:31424  value.sub(payout).sub(fee) */\n      tag_242\n        /* \"daibond/BondDepository.sol\":31325:31371  uint256 fee = payout.mul(terms.fee).div(10000) */\n      dup3\n        /* \"daibond/BondDepository.sol\":31398:31415  value.sub(payout) */\n      tag_243\n        /* \"daibond/BondDepository.sol\":31398:31403  value */\n      dup7\n        /* \"daibond/BondDepository.sol\":31408:31414  payout */\n      dup7\n        /* \"daibond/BondDepository.sol\":31398:31407  value.sub */\n      tag_178\n        /* \"daibond/BondDepository.sol\":31398:31415  value.sub(payout) */\n      jump\t// in\n    tag_243:\n        /* \"daibond/BondDepository.sol\":31398:31419  value.sub(payout).sub */\n      swap1\n      tag_178\n        /* \"daibond/BondDepository.sol\":31398:31424  value.sub(payout).sub(fee) */\n      jump\t// in\n    tag_242:\n        /* \"daibond/BondDepository.sol\":31381:31424  uint256 profit = value.sub(payout).sub(fee) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":31599:31669  IERC20(principle).safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_244\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":31606:31615  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n        /* \"daibond/BondDepository.sol\":31599:31633  IERC20(principle).safeTransferFrom */\n      and\n        /* \"daibond/BondDepository.sol\":31634:31644  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":31654:31658  this */\n      address\n        /* \"daibond/BondDepository.sol\":31661:31668  _amount */\n      dup14\n        /* \"daibond/BondDepository.sol\":31599:31633  IERC20(principle).safeTransferFrom */\n      tag_245\n        /* \"daibond/BondDepository.sol\":31599:31669  IERC20(principle).safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_244:\n        /* \"daibond/BondDepository.sol\":31686:31695  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":31679:31704  IERC20(principle).approve */\n      and\n      0x095ea7b3\n        /* \"daibond/BondDepository.sol\":31713:31721  treasury */\n      immutable(\"0x449e2f5e7508d34c0e3e5104a521c043ba399204576497db1b3567c8a164bdfc\")\n        /* \"daibond/BondDepository.sol\":31724:31731  _amount */\n      dup13\n        /* \"daibond/BondDepository.sol\":31679:31732  IERC20(principle).approve(address(treasury), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":31742:31797  ITreasury(treasury).deposit(_amount, principle, profit) */\n      0x40\n      dup1\n      mload\n      0xbc157ac100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":31779:31788  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n        /* \"daibond/BondDepository.sol\":31742:31797  ITreasury(treasury).deposit(_amount, principle, profit) */\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"daibond/BondDepository.sol\":31752:31760  treasury */\n      immutable(\"0x449e2f5e7508d34c0e3e5104a521c043ba399204576497db1b3567c8a164bdfc\")\n        /* \"daibond/BondDepository.sol\":31742:31769  ITreasury(treasury).deposit */\n      swap1\n      swap3\n      and\n      swap2\n      0xbc157ac1\n      swap2\n        /* \"daibond/BondDepository.sol\":31742:31797  ITreasury(treasury).deposit(_amount, principle, profit) */\n      0x64\n      dup1\n      dup3\n      add\n      swap3\n        /* \"daibond/BondDepository.sol\":31679:31732  IERC20(principle).approve(address(treasury), _amount) */\n      0x20\n      swap3\n        /* \"daibond/BondDepository.sol\":31742:31797  ITreasury(treasury).deposit(_amount, principle, profit) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"daibond/BondDepository.sol\":31742:31769  ITreasury(treasury).deposit */\n      dup8\n        /* \"daibond/BondDepository.sol\":31742:31797  ITreasury(treasury).deposit(_amount, principle, profit) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":31812:31820  fee != 0 */\n      dup2\n      iszero\n        /* \"daibond/BondDepository.sol\":31808:31923  if (fee != 0) {... */\n      tag_255\n      jumpi\n        /* \"daibond/BondDepository.sol\":31877:31912  IERC20(Bash).safeTransfer(DAO, fee) */\n      tag_255\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":31884:31888  Bash */\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n        /* \"daibond/BondDepository.sol\":31877:31902  IERC20(Bash).safeTransfer */\n      and\n        /* \"daibond/BondDepository.sol\":31903:31906  DAO */\n      immutable(\"0x38b7b61f58f14f07450f1658d7697d2ffee5c2ae614c4752fc225c9ab3f7e9c4\")\n        /* \"daibond/BondDepository.sol\":31908:31911  fee */\n      dup5\n        /* \"daibond/BondDepository.sol\":31877:31902  IERC20(Bash).safeTransfer */\n      tag_256\n        /* \"daibond/BondDepository.sol\":31877:31912  IERC20(Bash).safeTransfer(DAO, fee) */\n      jump\t// in\n    tag_255:\n        /* \"daibond/BondDepository.sol\":31980:31989  totalDebt */\n      sload(0x0f)\n        /* \"daibond/BondDepository.sol\":31980:32000  totalDebt.add(value) */\n      tag_257\n      swap1\n        /* \"daibond/BondDepository.sol\":31994:31999  value */\n      dup6\n        /* \"daibond/BondDepository.sol\":31980:31993  totalDebt.add */\n      tag_258\n        /* \"daibond/BondDepository.sol\":31980:32000  totalDebt.add(value) */\n      jump\t// in\n    tag_257:\n        /* \"daibond/BondDepository.sol\":31968:31977  totalDebt */\n      0x0f\n        /* \"daibond/BondDepository.sol\":31968:32000  totalDebt = totalDebt.add(value) */\n      sstore\n        /* \"daibond/BondDepository.sol\":32149:32348  Bond({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":32176:32196  bondInfo[_depositor] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":32176:32184  bondInfo */\n      0x0e\n        /* \"daibond/BondDepository.sol\":32176:32196  bondInfo[_depositor] */\n      0x20\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"daibond/BondDepository.sol\":32176:32203  bondInfo[_depositor].payout */\n      sload\n        /* \"daibond/BondDepository.sol\":32149:32348  Bond({... */\n      dup2\n      swap1\n        /* \"daibond/BondDepository.sol\":32176:32215  bondInfo[_depositor].payout.add(payout) */\n      tag_259\n      swap1\n        /* \"daibond/BondDepository.sol\":32208:32214  payout */\n      dup7\n        /* \"daibond/BondDepository.sol\":32176:32207  bondInfo[_depositor].payout.add */\n      tag_258\n        /* \"daibond/BondDepository.sol\":32176:32215  bondInfo[_depositor].payout.add(payout) */\n      jump\t// in\n    tag_259:\n        /* \"daibond/BondDepository.sol\":32149:32348  Bond({... */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup10\n      swap1\n      mstore\n      0xffffffff\n        /* \"daibond/BondDepository.sol\":32286:32301  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":32149:32348  Bond({... */\n      dup2\n      dup2\n      and\n      0x40\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"daibond/BondDepository.sol\":32238:32255  terms.vestingTerm */\n      0x09\n      dup1\n      sload\n      dup5\n      and\n        /* \"daibond/BondDepository.sol\":32149:32348  Bond({... */\n      0x60\n      swap7\n      dup8\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":32126:32146  bondInfo[_depositor] */\n      dup16\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":32126:32134  bondInfo */\n      0x0e\n        /* \"daibond/BondDepository.sol\":32126:32146  bondInfo[_depositor] */\n      dup7\n      mstore\n      dup3\n      swap1\n      keccak256\n        /* \"daibond/BondDepository.sol\":32126:32348  bondInfo[_depositor] = Bond({... */\n      dup8\n      mload\n      dup2\n      sstore\n      swap5\n      dup8\n      add\n      mload\n        /* \"daibond/BondDepository.sol\":32238:32255  terms.vestingTerm */\n      0x01\n        /* \"daibond/BondDepository.sol\":32126:32348  bondInfo[_depositor] = Bond({... */\n      dup7\n      add\n      sstore\n      swap1\n      dup7\n      add\n      mload\n      0x02\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      swap7\n      swap1\n      swap6\n      add\n      mload\n      dup4\n      and\n      0x0100000000\n      mul\n      not(0xffffffff00000000)\n      swap5\n      dup5\n      and\n      not(0xffffffff)\n      swap1\n      swap8\n      and\n      swap7\n      swap1\n      swap7\n      or\n      swap4\n      swap1\n      swap4\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap3\n      sstore\n        /* \"daibond/BondDepository.sol\":32488:32505  terms.vestingTerm */\n      sload\n        /* \"daibond/BondDepository.sol\":32327:32337  priceInUSD */\n      dup9\n      swap3\n        /* \"daibond/BondDepository.sol\":32468:32506  block.timestamp.add(terms.vestingTerm) */\n      tag_260\n      swap3\n        /* \"daibond/BondDepository.sol\":32286:32301  block.timestamp */\n      swap1\n      swap2\n        /* \"daibond/BondDepository.sol\":32488:32505  terms.vestingTerm */\n      dup2\n      and\n      swap1\n        /* \"daibond/BondDepository.sol\":32468:32487  block.timestamp.add */\n      tag_258\n        /* \"daibond/BondDepository.sol\":32468:32506  block.timestamp.add(terms.vestingTerm) */\n      and\n      jump\t// in\n    tag_260:\n        /* \"daibond/BondDepository.sol\":32402:32540  BondCreated(... */\n      0x40\n      dup1\n      mload\n      dup14\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"daibond/BondDepository.sol\":32448:32454  payout */\n      dup7\n      swap2\n        /* \"daibond/BondDepository.sol\":32402:32540  BondCreated(... */\n      0x1fec6dc81f140574bf43f6b1e420ae1dd47928b9d57db8cbd7b8611063b85ae5\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log4\n        /* \"daibond/BondDepository.sol\":32604:32615  debtRatio() */\n      tag_261\n        /* \"daibond/BondDepository.sol\":32604:32613  debtRatio */\n      tag_109\n        /* \"daibond/BondDepository.sol\":32604:32615  debtRatio() */\n      jump\t// in\n    tag_261:\n        /* \"daibond/BondDepository.sol\":32590:32602  _bondPrice() */\n      tag_262\n        /* \"daibond/BondDepository.sol\":32590:32600  _bondPrice */\n      tag_230\n        /* \"daibond/BondDepository.sol\":32590:32602  _bondPrice() */\n      jump\t// in\n    tag_262:\n        /* \"daibond/BondDepository.sol\":32572:32588  bondPriceInUSD() */\n      tag_263\n        /* \"daibond/BondDepository.sol\":32572:32586  bondPriceInUSD */\n      tag_89\n        /* \"daibond/BondDepository.sol\":32572:32588  bondPriceInUSD() */\n      jump\t// in\n    tag_263:\n        /* \"daibond/BondDepository.sol\":32555:32616  BondPriceChanged(bondPriceInUSD(), _bondPrice(), debtRatio()) */\n      mload(0x40)\n      0x375b221f40939bfd8f49723a17cf7bc6d576ebf72efe2cc3e991826f5b3f390a\n      swap1\n      0x00\n      swap1\n      log4\n        /* \"daibond/BondDepository.sol\":32627:32635  adjust() */\n      tag_264\n        /* \"daibond/BondDepository.sol\":32627:32633  adjust */\n      tag_265\n        /* \"daibond/BondDepository.sol\":32627:32635  adjust() */\n      jump\t// in\n    tag_264:\n      pop\n        /* \"daibond/BondDepository.sol\":32684:32690  payout */\n      swap1\n      swap9\n        /* \"daibond/BondDepository.sol\":30350:32697  function deposit(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":38813:39131  function standardizedDebtRatio() external view returns (uint256) {... */\n    tag_94:\n        /* \"daibond/BondDepository.sol\":38869:38876  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":38892:38907  isLiquidityBond */\n      immutable(\"0x128221face7165ac636c79241bcc071c00b651aee12c4977c3e09ba4d7241443\")\n        /* \"daibond/BondDepository.sol\":38888:39125  if (isLiquidityBond) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"daibond/BondDepository.sol\":38946:39065  debtRatio()... */\n      tag_208\n        /* \"daibond/BondDepository.sol\":39061:39064  1e9 */\n      0x3b9aca00\n        /* \"daibond/BondDepository.sol\":38946:39035  debtRatio()... */\n      tag_135\n        /* \"daibond/BondDepository.sol\":38999:39013  bondCalculator */\n      immutable(\"0xd23e9efc23800776cf8d3669751fafa9f7c61baf4abbaf310045071b5e6148b9\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":38983:39023  IBondCalculator(bondCalculator).markdown */\n      and\n      0x32da80a3\n        /* \"daibond/BondDepository.sol\":39024:39033  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n        /* \"daibond/BondDepository.sol\":38983:39034  IBondCalculator(bondCalculator).markdown(principle) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_270:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_273\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_273:\n      pop\n      mload\n        /* \"daibond/BondDepository.sol\":38946:38957  debtRatio() */\n      tag_214\n        /* \"daibond/BondDepository.sol\":38946:38955  debtRatio */\n      tag_109\n        /* \"daibond/BondDepository.sol\":38946:38957  debtRatio() */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":38888:39125  if (isLiquidityBond) {... */\n    tag_267:\n        /* \"daibond/BondDepository.sol\":39103:39114  debtRatio() */\n      tag_208\n        /* \"daibond/BondDepository.sol\":39103:39112  debtRatio */\n      tag_109\n        /* \"daibond/BondDepository.sol\":39103:39114  debtRatio() */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":24527:24555  address public immutable DAO */\n    tag_96:\n      immutable(\"0x38b7b61f58f14f07450f1658d7697d2ffee5c2ae614c4752fc225c9ab3f7e9c4\")\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":29354:29715  function setAdjustment(... */\n    tag_99:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_278\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_278:\n        /* \"daibond/BondDepository.sol\":29527:29708  Adjust({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      swap5\n      iszero\n      iszero\n      dup1\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      dup6\n      swap1\n      mstore\n      swap1\n      dup6\n      add\n      dup4\n      swap1\n      mstore\n      0xffffffff\n      swap2\n      dup3\n      and\n      0x60\n      dup7\n      add\n      dup2\n      swap1\n      mstore\n        /* \"daibond/BondDepository.sol\":29681:29696  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":29527:29708  Adjust({... */\n      swap1\n      swap3\n      and\n      0x80\n      swap1\n      swap6\n      add\n      dup6\n      swap1\n      mstore\n        /* \"daibond/BondDepository.sol\":29514:29524  adjustment */\n      0x0a\n        /* \"daibond/BondDepository.sol\":29514:29708  adjustment = Adjust({... */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x0b\n      swap3\n      swap1\n      swap3\n      sstore\n      0x0c\n      sstore\n      0x0d\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      swap1\n      swap2\n      or\n      not(0xffffffff00000000)\n      and\n      0x0100000000\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":29354:29715  function setAdjustment(... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":41062:41344  function recoverLostToken(address _token) external returns (bool) {... */\n    tag_102:\n        /* \"daibond/BondDepository.sol\":41122:41126  bool */\n      0x00\n        /* \"daibond/BondDepository.sol\":41156:41160  Bash */\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":41146:41160  _token != Bash */\n      and\n        /* \"daibond/BondDepository.sol\":41146:41152  _token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":41146:41160  _token != Bash */\n      and\n      eq\n      iszero\n        /* \"daibond/BondDepository.sol\":41138:41161  require(_token != Bash) */\n      tag_281\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_281:\n        /* \"daibond/BondDepository.sol\":41189:41198  principle */\n      immutable(\"0xa07c19efc73020733d74df24211ba72aa9c07ba4a2ae13ac79a338a4d8b59fe5\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":41179:41198  _token != principle */\n      and\n        /* \"daibond/BondDepository.sol\":41179:41185  _token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":41179:41198  _token != principle */\n      and\n      eq\n      iszero\n        /* \"daibond/BondDepository.sol\":41171:41199  require(_token != principle) */\n      tag_282\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_282:\n        /* \"daibond/BondDepository.sol\":41209:41316  IERC20(_token).safeTransfer(... */\n      tag_283\n        /* \"daibond/BondDepository.sol\":41250:41253  DAO */\n      immutable(\"0x38b7b61f58f14f07450f1658d7697d2ffee5c2ae614c4752fc225c9ab3f7e9c4\")\n        /* \"daibond/BondDepository.sol\":41274:41280  _token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":41267:41291  IERC20(_token).balanceOf */\n      and\n      0x70a08231\n        /* \"daibond/BondDepository.sol\":41300:41304  this */\n      address\n        /* \"daibond/BondDepository.sol\":41267:41306  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_287\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_287:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":41209:41236  IERC20(_token).safeTransfer */\n      dup6\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":41209:41316  IERC20(_token).safeTransfer(... */\n      swap1\n        /* \"daibond/BondDepository.sol\":41209:41236  IERC20(_token).safeTransfer */\n      tag_256\n        /* \"daibond/BondDepository.sol\":41209:41316  IERC20(_token).safeTransfer(... */\n      jump\t// in\n    tag_283:\n      pop\n        /* \"daibond/BondDepository.sol\":41333:41337  true */\n      0x01\n        /* \"daibond/BondDepository.sol\":41062:41344  function recoverLostToken(address _token) external returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24695:24734  address public immutable bondCalculator */\n    tag_104:\n      immutable(\"0xd23e9efc23800776cf8d3669751fafa9f7c61baf4abbaf310045071b5e6148b9\")\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":25049:25089  mapping(address => Bond) public bondInfo */\n    tag_107:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      0xffffffff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100000000\n      swap1\n      div\n      and\n      dup5\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":38435:38698  function debtRatio() public view returns (uint256 debtRatio_) {... */\n    tag_109:\n        /* \"daibond/BondDepository.sol\":38477:38495  uint256 debtRatio_ */\n      0x00\n        /* \"daibond/BondDepository.sol\":38507:38521  uint256 supply */\n      dup1\n        /* \"daibond/BondDepository.sol\":38531:38535  Bash */\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":38524:38548  IERC20(Bash).totalSupply */\n      and\n      0x18160ddd\n        /* \"daibond/BondDepository.sol\":38524:38550  IERC20(Bash).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_289\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_289:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_291:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n      pop\n      mload\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":38573:38691  FixedPoint... */\n      tag_293\n        /* \"daibond/BondDepository.sol\":38686:38690  1e18 */\n      0x0de0b6b3a7640000\n        /* \"daibond/BondDepository.sol\":38573:38668  FixedPoint... */\n      tag_135\n        /* \"daibond/BondDepository.sol\":38573:38637  FixedPoint... */\n      tag_202\n        /* \"daibond/BondDepository.sol\":38606:38628  currentDebt().mul(1e9) */\n      tag_296\n        /* \"daibond/BondDepository.sol\":38624:38627  1e9 */\n      0x3b9aca00\n        /* \"daibond/BondDepository.sol\":38606:38619  currentDebt() */\n      tag_214\n        /* \"daibond/BondDepository.sol\":38606:38617  currentDebt */\n      tag_82\n        /* \"daibond/BondDepository.sol\":38606:38619  currentDebt() */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":38606:38628  currentDebt().mul(1e9) */\n    tag_296:\n        /* \"daibond/BondDepository.sol\":38630:38636  supply */\n      dup6\n        /* \"daibond/BondDepository.sol\":38573:38605  FixedPoint... */\n      tag_204\n        /* \"daibond/BondDepository.sol\":38573:38637  FixedPoint... */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":38573:38691  FixedPoint... */\n    tag_293:\n        /* \"daibond/BondDepository.sol\":38560:38691  debtRatio_ = FixedPoint... */\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":38435:38698  function debtRatio() public view returns (uint256 debtRatio_) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":27338:28011  function initializeBondTerms(... */\n    tag_112:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_299\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_299:\n        /* \"daibond/BondDepository.sol\":27611:27616  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":27611:27632  terms.controlVariable */\n      sload\n        /* \"daibond/BondDepository.sol\":27611:27637  terms.controlVariable == 0 */\n      iszero\n        /* \"daibond/BondDepository.sol\":27603:27674  require(terms.controlVariable == 0, \"Bonds must be initialized from 0\") */\n      tag_301\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x426f6e6473206d75737420626520696e697469616c697a65642066726f6d2030\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_301:\n        /* \"daibond/BondDepository.sol\":27692:27925  Terms({... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup9\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      swap1\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0xffffffff\n      swap2\n      dup3\n      and\n      0xa0\n      swap1\n      swap2\n      add\n      dup2\n      swap1\n      mstore\n        /* \"daibond/BondDepository.sol\":27684:27689  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":27684:27925  terms = Terms({... */\n      swap8\n      swap1\n      swap8\n      sstore\n      0x05\n      swap6\n      swap1\n      swap6\n      sstore\n      0x06\n      swap4\n      swap1\n      swap4\n      sstore\n      0x07\n      swap2\n      swap1\n      swap2\n      sstore\n      0x08\n      sstore\n      0x09\n      dup1\n      sload\n      not(0xffffffff)\n      swap1\n      dup2\n      and\n      swap1\n      swap5\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":27935:27944  totalDebt */\n      0x0f\n        /* \"daibond/BondDepository.sol\":27935:27959  totalDebt = _initialDebt */\n      sstore\n        /* \"daibond/BondDepository.sol\":27969:27978  lastDecay */\n      0x10\n        /* \"daibond/BondDepository.sol\":27969:28004  lastDecay = uint32(block.timestamp) */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n        /* \"daibond/BondDepository.sol\":27988:28003  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":27969:28004  lastDecay = uint32(block.timestamp) */\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":27338:28011  function initializeBondTerms(... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":29841:30142  function setStaking(address _staking, bool _helper) external onlyPolicy {... */\n    tag_115:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_303\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":29931:29953  _staking != address(0) */\n      dup3\n      and\n        /* \"daibond/BondDepository.sol\":29923:29954  require(_staking != address(0)) */\n      tag_305\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_305:\n        /* \"daibond/BondDepository.sol\":29968:29975  _helper */\n      dup1\n        /* \"daibond/BondDepository.sol\":29964:30136  if (_helper) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"daibond/BondDepository.sol\":29991:30000  useHelper */\n      0x03\n        /* \"daibond/BondDepository.sol\":29991:30007  useHelper = true */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"daibond/BondDepository.sol\":30021:30045  stakingHelper = _staking */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":29964:30136  if (_helper) {... */\n      jump(tag_166)\n    tag_306:\n        /* \"daibond/BondDepository.sol\":30076:30085  useHelper */\n      0x03\n        /* \"daibond/BondDepository.sol\":30076:30093  useHelper = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":30107:30114  staking */\n      0x02\n        /* \"daibond/BondDepository.sol\":30107:30125  staking = _staking */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":29841:30142  function setStaking(address _staking, bool _helper) external onlyPolicy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24931:24949  Terms public terms */\n    tag_117:\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      and(0xffffffff, sload(0x09))\n      dup7\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":24597:24634  bool public immutable isLiquidityBond */\n    tag_119:\n      immutable(\"0x128221face7165ac636c79241bcc071c00b651aee12c4977c3e09ba4d7241443\")\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":37149:37412  function bondPrice() public view returns (uint256 price_) {... */\n    tag_121:\n        /* \"daibond/BondDepository.sol\":37191:37205  uint256 price_ */\n      0x00\n        /* \"daibond/BondDepository.sol\":37226:37311  terms.controlVariable.mul(debtRatio()).add(1000000000).div(... */\n      tag_309\n        /* \"daibond/BondDepository.sol\":37298:37301  1e7 */\n      0x989680\n        /* \"daibond/BondDepository.sol\":37226:37280  terms.controlVariable.mul(debtRatio()).add(1000000000) */\n      tag_135\n        /* \"daibond/BondDepository.sol\":37269:37279  1000000000 */\n      0x3b9aca00\n        /* \"daibond/BondDepository.sol\":37226:37264  terms.controlVariable.mul(debtRatio()) */\n      tag_311\n        /* \"daibond/BondDepository.sol\":37252:37263  debtRatio() */\n      tag_312\n        /* \"daibond/BondDepository.sol\":37252:37261  debtRatio */\n      tag_109\n        /* \"daibond/BondDepository.sol\":37252:37263  debtRatio() */\n      jump\t// in\n    tag_312:\n        /* \"daibond/BondDepository.sol\":37226:37231  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":37226:37247  terms.controlVariable */\n      sload\n      swap1\n        /* \"daibond/BondDepository.sol\":37226:37251  terms.controlVariable.mul */\n      tag_136\n        /* \"daibond/BondDepository.sol\":37226:37264  terms.controlVariable.mul(debtRatio()) */\n      jump\t// in\n    tag_311:\n        /* \"daibond/BondDepository.sol\":37226:37268  terms.controlVariable.mul(debtRatio()).add */\n      swap1\n      tag_258\n        /* \"daibond/BondDepository.sol\":37226:37280  terms.controlVariable.mul(debtRatio()).add(1000000000) */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":37226:37311  terms.controlVariable.mul(debtRatio()).add(1000000000).div(... */\n    tag_309:\n        /* \"daibond/BondDepository.sol\":37334:37352  terms.minimumPrice */\n      sload(0x05)\n        /* \"daibond/BondDepository.sol\":37217:37311  price_ = terms.controlVariable.mul(debtRatio()).add(1000000000).div(... */\n      swap1\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":37325:37352  price_ < terms.minimumPrice */\n      dup2\n      lt\n        /* \"daibond/BondDepository.sol\":37321:37406  if (price_ < terms.minimumPrice) {... */\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"daibond/BondDepository.sol\":37377:37395  terms.minimumPrice */\n      sload(0x05)\n        /* \"daibond/BondDepository.sol\":37149:37412  function bondPrice() public view returns (uint256 price_) {... */\n      swap1\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":36496:36630  function maxPayout() public view returns (uint256) {... */\n    tag_123:\n        /* \"daibond/BondDepository.sol\":36538:36545  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":36564:36623  IERC20(Bash).totalSupply().mul(terms.maxPayout).div(100000) */\n      tag_197\n        /* \"daibond/BondDepository.sol\":36616:36622  100000 */\n      0x0186a0\n        /* \"daibond/BondDepository.sol\":36564:36611  IERC20(Bash).totalSupply().mul(terms.maxPayout) */\n      tag_135\n        /* \"daibond/BondDepository.sol\":36595:36600  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":36595:36610  terms.maxPayout */\n      0x02\n      add\n      sload\n        /* \"daibond/BondDepository.sol\":36571:36575  Bash */\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":36564:36588  IERC20(Bash).totalSupply */\n      and\n      0x18160ddd\n        /* \"daibond/BondDepository.sol\":36564:36590  IERC20(Bash).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_319\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_320\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_320:\n      pop\n      mload\n      swap1\n        /* \"daibond/BondDepository.sol\":36564:36594  IERC20(Bash).totalSupply().mul */\n      tag_136\n        /* \"daibond/BondDepository.sol\":36564:36611  IERC20(Bash).totalSupply().mul(terms.maxPayout) */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":39423:39707  function debtDecay() public view returns (uint256 decay_) {... */\n    tag_125:\n        /* \"daibond/BondDepository.sol\":39544:39553  lastDecay */\n      sload(0x10)\n        /* \"daibond/BondDepository.sol\":39465:39479  uint256 decay_ */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"daibond/BondDepository.sol\":39514:39554  uint32(block.timestamp).sub32(lastDecay) */\n      tag_322\n      swap1\n        /* \"daibond/BondDepository.sol\":39544:39553  lastDecay */\n      0xffffffff\n        /* \"daibond/BondDepository.sol\":39521:39536  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":39514:39543  uint32(block.timestamp).sub32 */\n      dup2\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":39544:39553  lastDecay */\n      dup2\n      and\n      swap1\n        /* \"daibond/BondDepository.sol\":39514:39543  uint32(block.timestamp).sub32 */\n      tag_181\n        /* \"daibond/BondDepository.sol\":39514:39554  uint32(block.timestamp).sub32(lastDecay) */\n      and\n      jump\t// in\n    tag_322:\n        /* \"daibond/BondDepository.sol\":39606:39623  terms.vestingTerm */\n      sload(0x09)\n        /* \"daibond/BondDepository.sol\":39573:39582  totalDebt */\n      sload(0x0f)\n        /* \"daibond/BondDepository.sol\":39491:39554  uint32 timeSinceLast = uint32(block.timestamp).sub32(lastDecay) */\n      swap2\n      swap3\n      pop\n        /* \"daibond/BondDepository.sol\":39573:39624  totalDebt.mul(timeSinceLast).div(terms.vestingTerm) */\n      tag_323\n      swap2\n        /* \"daibond/BondDepository.sol\":39606:39623  terms.vestingTerm */\n      0xffffffff\n      swap2\n      dup3\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":39573:39601  totalDebt.mul(timeSinceLast) */\n      tag_135\n      swap2\n        /* \"daibond/BondDepository.sol\":39573:39582  totalDebt */\n      swap1\n        /* \"daibond/BondDepository.sol\":39573:39601  totalDebt.mul(timeSinceLast) */\n      dup1\n      dup7\n      and\n      swap1\n        /* \"daibond/BondDepository.sol\":39573:39586  totalDebt.mul */\n      tag_136\n        /* \"daibond/BondDepository.sol\":39573:39601  totalDebt.mul(timeSinceLast) */\n      and\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":39573:39624  totalDebt.mul(timeSinceLast).div(terms.vestingTerm) */\n    tag_323:\n        /* \"daibond/BondDepository.sol\":39564:39624  decay_ = totalDebt.mul(timeSinceLast).div(terms.vestingTerm) */\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":39647:39656  totalDebt */\n      sload(0x0f)\n        /* \"daibond/BondDepository.sol\":39638:39644  decay_ */\n      dup3\n        /* \"daibond/BondDepository.sol\":39638:39656  decay_ > totalDebt */\n      gt\n        /* \"daibond/BondDepository.sol\":39634:39701  if (decay_ > totalDebt) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"daibond/BondDepository.sol\":39681:39690  totalDebt */\n      sload(0x0f)\n        /* \"daibond/BondDepository.sol\":39672:39690  decay_ = totalDebt */\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":39634:39701  if (decay_ > totalDebt) {... */\n    tag_325:\n        /* \"daibond/BondDepository.sol\":39423:39707  function debtDecay() public view returns (uint256 decay_) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":25222:25245  uint32 public lastDecay */\n    tag_127:\n      and(0xffffffff, sload(0x10))\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":25138:25162  uint256 public totalDebt */\n    tag_129:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":2599:2840  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_136:\n        /* \"daibond/BondDepository.sol\":2657:2664  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":2680:2686  a == 0 */\n      dup3\n        /* \"daibond/BondDepository.sol\":2676:2721  if (a == 0) {... */\n      tag_327\n      jumpi\n      pop\n        /* \"daibond/BondDepository.sol\":2709:2710  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":2702:2710  return 0 */\n      jump(tag_167)\n        /* \"daibond/BondDepository.sol\":2676:2721  if (a == 0) {... */\n    tag_327:\n        /* \"daibond/BondDepository.sol\":2743:2748  a * b */\n      dup3\n      dup3\n      mul\n        /* \"daibond/BondDepository.sol\":2747:2748  b */\n      dup3\n        /* \"daibond/BondDepository.sol\":2743:2744  a */\n      dup5\n        /* \"daibond/BondDepository.sol\":2743:2748  a * b */\n      dup3\n        /* \"daibond/BondDepository.sol\":2743:2744  a */\n      dup2\n        /* \"daibond/BondDepository.sol\":2766:2771  c / a */\n      tag_328\n      jumpi\n      invalid\n    tag_328:\n      div\n        /* \"daibond/BondDepository.sol\":2766:2776  c / a == b */\n      eq\n        /* \"daibond/BondDepository.sol\":2758:2814  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"daibond/BondDepository.sol\":2832:2833  c */\n      swap4\n        /* \"daibond/BondDepository.sol\":2599:2840  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":2846:2976  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_137:\n        /* \"daibond/BondDepository.sol\":2904:2911  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":2930:2969  div(a, b, \"SafeMath: division by zero\") */\n      tag_329\n        /* \"daibond/BondDepository.sol\":2934:2935  a */\n      dup4\n        /* \"daibond/BondDepository.sol\":2937:2938  b */\n      dup4\n        /* \"daibond/BondDepository.sol\":2930:2969  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"daibond/BondDepository.sol\":2930:2933  div */\n      tag_332\n        /* \"daibond/BondDepository.sol\":2930:2969  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":34310:35038  function stakeOrSend(... */\n    tag_173:\n        /* \"daibond/BondDepository.sol\":34429:34436  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":34453:34459  _stake */\n      dup3\n        /* \"daibond/BondDepository.sol\":34448:35008  if (!_stake) {... */\n      tag_334\n      jumpi\n        /* \"daibond/BondDepository.sol\":34528:34532  Bash */\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":34521:34542  IERC20(Bash).transfer */\n      and\n      0xa9059cbb\n        /* \"daibond/BondDepository.sol\":34543:34553  _recipient */\n      dup6\n        /* \"daibond/BondDepository.sol\":34555:34562  _amount */\n      dup5\n        /* \"daibond/BondDepository.sol\":34521:34563  IERC20(Bash).transfer(_recipient, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_335\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_335:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_337:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n      pop\n        /* \"daibond/BondDepository.sol\":34448:35008  if (!_stake) {... */\n      tag_348\n      swap1\n      pop\n      jump\n    tag_334:\n        /* \"daibond/BondDepository.sol\":34651:34660  useHelper */\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"daibond/BondDepository.sol\":34647:34998  if (useHelper) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"daibond/BondDepository.sol\":34747:34760  stakingHelper */\n      sload(0x03)\n        /* \"daibond/BondDepository.sol\":34726:34770  IERC20(Bash).approve(stakingHelper, _amount) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":34747:34760  stakingHelper */\n      swap3\n      dup4\n      and\n        /* \"daibond/BondDepository.sol\":34726:34770  IERC20(Bash).approve(stakingHelper, _amount) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"daibond/BondDepository.sol\":34733:34737  Bash */\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n        /* \"daibond/BondDepository.sol\":34726:34746  IERC20(Bash).approve */\n      swap1\n      swap3\n      and\n      swap2\n      0x095ea7b3\n      swap2\n        /* \"daibond/BondDepository.sol\":34726:34770  IERC20(Bash).approve(stakingHelper, _amount) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"daibond/BondDepository.sol\":34726:34746  IERC20(Bash).approve */\n      dup8\n        /* \"daibond/BondDepository.sol\":34726:34770  IERC20(Bash).approve(stakingHelper, _amount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_341:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_343:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":34803:34816  stakingHelper */\n      sload(0x03)\n        /* \"daibond/BondDepository.sol\":34788:34844  IStakingHelper(stakingHelper).stake(_amount, _recipient) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x7acb7757)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"daibond/BondDepository.sol\":34803:34816  stakingHelper */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":34788:34823  IStakingHelper(stakingHelper).stake */\n      0x7acb7757\n      swap2\n        /* \"daibond/BondDepository.sol\":34788:34844  IStakingHelper(stakingHelper).stake(_amount, _recipient) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n        /* \"daibond/BondDepository.sol\":34803:34816  stakingHelper */\n      0x00\n      swap3\n        /* \"daibond/BondDepository.sol\":34788:34844  IStakingHelper(stakingHelper).stake(_amount, _recipient) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"daibond/BondDepository.sol\":34803:34816  stakingHelper */\n      dup4\n      dup8\n        /* \"daibond/BondDepository.sol\":34788:34844  IStakingHelper(stakingHelper).stake(_amount, _recipient) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_345\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_345:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_347\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_347:\n      pop\n      pop\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":34647:34998  if (useHelper) {... */\n      jump(tag_348)\n    tag_340:\n        /* \"daibond/BondDepository.sol\":34904:34911  staking */\n      sload(0x02)\n        /* \"daibond/BondDepository.sol\":34883:34921  IERC20(Bash).approve(staking, _amount) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":34904:34911  staking */\n      swap3\n      dup4\n      and\n        /* \"daibond/BondDepository.sol\":34883:34921  IERC20(Bash).approve(staking, _amount) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"daibond/BondDepository.sol\":34890:34894  Bash */\n      immutable(\"0x666acd29a495e0c7469bb9337e279878b45aede98d38c74aa47b4fc55f5ff1aa\")\n        /* \"daibond/BondDepository.sol\":34883:34903  IERC20(Bash).approve */\n      swap1\n      swap3\n      and\n      swap2\n      0x095ea7b3\n      swap2\n        /* \"daibond/BondDepository.sol\":34883:34921  IERC20(Bash).approve(staking, _amount) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"daibond/BondDepository.sol\":34883:34903  IERC20(Bash).approve */\n      dup8\n        /* \"daibond/BondDepository.sol\":34883:34921  IERC20(Bash).approve(staking, _amount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_349:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_351:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_352\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_352:\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":34948:34955  staking */\n      sload(0x02)\n        /* \"daibond/BondDepository.sol\":34939:34983  IStaking(staking).stake(_amount, _recipient) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x7acb7757)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"daibond/BondDepository.sol\":34948:34955  staking */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":34939:34962  IStaking(staking).stake */\n      0x7acb7757\n      swap2\n        /* \"daibond/BondDepository.sol\":34939:34983  IStaking(staking).stake(_amount, _recipient) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n        /* \"daibond/BondDepository.sol\":34883:34921  IERC20(Bash).approve(staking, _amount) */\n      0x20\n      swap3\n        /* \"daibond/BondDepository.sol\":34939:34983  IStaking(staking).stake(_amount, _recipient) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"daibond/BondDepository.sol\":34948:34955  staking */\n      0x00\n      dup8\n        /* \"daibond/BondDepository.sol\":34939:34983  IStaking(staking).stake(_amount, _recipient) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_353:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_355\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_355:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_356\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_356:\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":34647:34998  if (useHelper) {... */\n    tag_348:\n      pop\n        /* \"daibond/BondDepository.sol\":35024:35031  _amount */\n      swap3\n        /* \"daibond/BondDepository.sol\":34310:35038  function stakeOrSend(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":1874:2008  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_178:\n        /* \"daibond/BondDepository.sol\":1932:1939  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":1958:2001  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_329\n        /* \"daibond/BondDepository.sol\":1962:1963  a */\n      dup4\n        /* \"daibond/BondDepository.sol\":1965:1966  b */\n      dup4\n        /* \"daibond/BondDepository.sol\":1958:2001  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"daibond/BondDepository.sol\":1958:1961  sub */\n      tag_359\n        /* \"daibond/BondDepository.sol\":1958:2001  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":2237:2372  function sub32(uint32 a, uint32 b) internal pure returns (uint32) {... */\n    tag_181:\n        /* \"daibond/BondDepository.sol\":2295:2301  uint32 */\n      0x00\n        /* \"daibond/BondDepository.sol\":2320:2365  sub32(a, b, \"SafeMath: subtraction overflow\") */\n      tag_329\n        /* \"daibond/BondDepository.sol\":2326:2327  a */\n      dup4\n        /* \"daibond/BondDepository.sol\":2329:2330  b */\n      dup4\n        /* \"daibond/BondDepository.sol\":2320:2365  sub32(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"daibond/BondDepository.sol\":2320:2325  sub32 */\n      tag_362\n        /* \"daibond/BondDepository.sol\":2320:2365  sub32(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":22349:23083  function fraction(uint256 numerator, uint256 denominator)... */\n    tag_204:\n        /* \"daibond/BondDepository.sol\":22454:22470  uq112x112 memory */\n      tag_363\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"daibond/BondDepository.sol\":22508:22509  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":22494:22505  denominator */\n      dup3\n        /* \"daibond/BondDepository.sol\":22494:22509  denominator > 0 */\n      gt\n        /* \"daibond/BondDepository.sol\":22486:22552  require(denominator > 0, \"FixedPoint::fraction: division by zero\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_366:\n        /* \"daibond/BondDepository.sol\":22566:22580  numerator == 0 */\n      dup3\n        /* \"daibond/BondDepository.sol\":22562:22612  if (numerator == 0) return FixedPoint.uq112x112(0) */\n      tag_367\n      jumpi\n      pop\n        /* \"daibond/BondDepository.sol\":22589:22612  FixedPoint.uq112x112(0) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"daibond/BondDepository.sol\":22582:22612  return FixedPoint.uq112x112(0) */\n      jump(tag_167)\n        /* \"daibond/BondDepository.sol\":22562:22612  if (numerator == 0) return FixedPoint.uq112x112(0) */\n    tag_367:\n        /* \"daibond/BondDepository.sol\":22627:22651  numerator <= uint144(-1) */\n      0xffffffffffffffffffffffffffffffffffff\n      dup4\n      gt\n        /* \"daibond/BondDepository.sol\":22623:23077  if (numerator <= uint144(-1)) {... */\n      tag_368\n      jumpi\n        /* \"daibond/BondDepository.sol\":22667:22681  uint256 result */\n      0x00\n        /* \"daibond/BondDepository.sol\":22712:22723  denominator */\n      dup3\n        /* \"daibond/BondDepository.sol\":21748:21751  112 */\n      0x70\n        /* \"daibond/BondDepository.sol\":22685:22708  numerator << RESOLUTION */\n      dup6\n      swap1\n      shl\n        /* \"daibond/BondDepository.sol\":22712:22723  denominator */\n      dup2\n        /* \"daibond/BondDepository.sol\":22684:22723  (numerator << RESOLUTION) / denominator */\n      tag_369\n      jumpi\n      invalid\n    tag_369:\n      div\n      swap1\n      pop\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":22745:22766  result <= uint224(-1) */\n      dup2\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":22737:22801  require(result <= uint224(-1), \"FixedPoint::fraction: overflow\") */\n      tag_370\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_370:\n        /* \"daibond/BondDepository.sol\":22822:22848  uq112x112(uint224(result)) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"daibond/BondDepository.sol\":22840:22846  result */\n      dup3\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":22822:22848  uq112x112(uint224(result)) */\n      and\n      dup2\n      mstore\n      pop\n        /* \"daibond/BondDepository.sol\":22815:22848  return uq112x112(uint224(result)) */\n      swap2\n      pop\n      pop\n      jump(tag_167)\n        /* \"daibond/BondDepository.sol\":22623:23077  if (numerator <= uint144(-1)) {... */\n    tag_368:\n        /* \"daibond/BondDepository.sol\":22879:22893  uint256 result */\n      0x00\n        /* \"daibond/BondDepository.sol\":22896:22941  FullMath.mulDiv(numerator, Q112, denominator) */\n      tag_372\n        /* \"daibond/BondDepository.sol\":22912:22921  numerator */\n      dup5\n        /* \"daibond/BondDepository.sol\":21789:21820  0x10000000000000000000000000000 */\n      0x010000000000000000000000000000\n        /* \"daibond/BondDepository.sol\":22929:22940  denominator */\n      dup6\n        /* \"daibond/BondDepository.sol\":22896:22911  FullMath.mulDiv */\n      tag_373\n        /* \"daibond/BondDepository.sol\":22896:22941  FullMath.mulDiv(numerator, Q112, denominator) */\n      jump\t// in\n    tag_372:\n        /* \"daibond/BondDepository.sol\":22879:22941  uint256 result = FullMath.mulDiv(numerator, Q112, denominator) */\n      swap1\n      pop\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":22963:22984  result <= uint224(-1) */\n      dup2\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":22955:23019  require(result <= uint224(-1), \"FixedPoint::fraction: overflow\") */\n      tag_370\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"daibond/BondDepository.sol\":22176:22343  function decode112with18(uq112x112 memory self)... */\n    tag_205:\n        /* \"daibond/BondDepository.sol\":22309:22316  self._x */\n      mload\n        /* \"daibond/BondDepository.sol\":22320:22336  5192296858534827 */\n      0x12725dd1d243ab\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":22301:22317  uint256(self._x) */\n      swap1\n      swap2\n      and\n        /* \"daibond/BondDepository.sol\":22301:22336  uint256(self._x) / 5192296858534827 */\n      div\n      swap1\n        /* \"daibond/BondDepository.sol\":22176:22343  function decode112with18(uq112x112 memory self)... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":36235:36365  function decayDebt() internal {... */\n    tag_226:\n        /* \"daibond/BondDepository.sol\":36287:36313  totalDebt.sub(debtDecay()) */\n      tag_378\n        /* \"daibond/BondDepository.sol\":36301:36312  debtDecay() */\n      tag_198\n        /* \"daibond/BondDepository.sol\":36301:36310  debtDecay */\n      tag_125\n        /* \"daibond/BondDepository.sol\":36301:36312  debtDecay() */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":36287:36313  totalDebt.sub(debtDecay()) */\n    tag_378:\n        /* \"daibond/BondDepository.sol\":36275:36284  totalDebt */\n      0x0f\n        /* \"daibond/BondDepository.sol\":36275:36313  totalDebt = totalDebt.sub(debtDecay()) */\n      sstore\n        /* \"daibond/BondDepository.sol\":36323:36332  lastDecay */\n      0x10\n        /* \"daibond/BondDepository.sol\":36323:36358  lastDecay = uint32(block.timestamp) */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n        /* \"daibond/BondDepository.sol\":36342:36357  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":36323:36358  lastDecay = uint32(block.timestamp) */\n      0xffffffff\n      and\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":36235:36365  function decayDebt() internal {... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":37533:37876  function _bondPrice() internal returns (uint256 price_) {... */\n    tag_230:\n        /* \"daibond/BondDepository.sol\":37573:37587  uint256 price_ */\n      0x00\n        /* \"daibond/BondDepository.sol\":37608:37693  terms.controlVariable.mul(debtRatio()).add(1000000000).div(... */\n      tag_381\n        /* \"daibond/BondDepository.sol\":37680:37683  1e7 */\n      0x989680\n        /* \"daibond/BondDepository.sol\":37608:37662  terms.controlVariable.mul(debtRatio()).add(1000000000) */\n      tag_135\n        /* \"daibond/BondDepository.sol\":37651:37661  1000000000 */\n      0x3b9aca00\n        /* \"daibond/BondDepository.sol\":37608:37646  terms.controlVariable.mul(debtRatio()) */\n      tag_311\n        /* \"daibond/BondDepository.sol\":37634:37645  debtRatio() */\n      tag_312\n        /* \"daibond/BondDepository.sol\":37634:37643  debtRatio */\n      tag_109\n        /* \"daibond/BondDepository.sol\":37634:37645  debtRatio() */\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":37608:37693  terms.controlVariable.mul(debtRatio()).add(1000000000).div(... */\n    tag_381:\n        /* \"daibond/BondDepository.sol\":37716:37734  terms.minimumPrice */\n      sload(0x05)\n        /* \"daibond/BondDepository.sol\":37599:37693  price_ = terms.controlVariable.mul(debtRatio()).add(1000000000).div(... */\n      swap1\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":37707:37734  price_ < terms.minimumPrice */\n      dup2\n      lt\n        /* \"daibond/BondDepository.sol\":37703:37870  if (price_ < terms.minimumPrice) {... */\n      iszero\n      tag_385\n      jumpi\n      pop\n        /* \"daibond/BondDepository.sol\":37759:37777  terms.minimumPrice */\n      sload(0x05)\n        /* \"daibond/BondDepository.sol\":37703:37870  if (price_ < terms.minimumPrice) {... */\n      jump(tag_138)\n    tag_385:\n        /* \"daibond/BondDepository.sol\":37798:37816  terms.minimumPrice */\n      sload(0x05)\n        /* \"daibond/BondDepository.sol\":37798:37821  terms.minimumPrice != 0 */\n      iszero\n        /* \"daibond/BondDepository.sol\":37794:37870  if (terms.minimumPrice != 0) {... */\n      tag_138\n      jumpi\n        /* \"daibond/BondDepository.sol\":37858:37859  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":37837:37855  terms.minimumPrice */\n      0x05\n        /* \"daibond/BondDepository.sol\":37837:37859  terms.minimumPrice = 0 */\n      sstore\n        /* \"daibond/BondDepository.sol\":37533:37876  function _bondPrice() internal returns (uint256 price_) {... */\n      swap1\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":18370:18645  function safeTransferFrom(... */\n    tag_245:\n        /* \"daibond/BondDepository.sol\":18560:18628  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n        /* \"daibond/BondDepository.sol\":18583:18610  token.transferFrom.selector */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n        /* \"daibond/BondDepository.sol\":18560:18628  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      or\n      swap1\n      mstore\n        /* \"daibond/BondDepository.sol\":18508:18638  _callOptionalReturn(... */\n      tag_389\n      swap1\n        /* \"daibond/BondDepository.sol\":18541:18546  token */\n      dup6\n      swap1\n        /* \"daibond/BondDepository.sol\":18508:18527  _callOptionalReturn */\n      tag_390\n        /* \"daibond/BondDepository.sol\":18508:18638  _callOptionalReturn(... */\n      jump\t// in\n    tag_389:\n        /* \"daibond/BondDepository.sol\":18370:18645  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":18125:18364  function safeTransfer(... */\n    tag_256:\n        /* \"daibond/BondDepository.sol\":18289:18347  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n        /* \"daibond/BondDepository.sol\":18312:18335  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"daibond/BondDepository.sol\":18289:18347  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      or\n      swap1\n      mstore\n        /* \"daibond/BondDepository.sol\":18237:18357  _callOptionalReturn(... */\n      tag_392\n      swap1\n        /* \"daibond/BondDepository.sol\":18270:18275  token */\n      dup5\n      swap1\n        /* \"daibond/BondDepository.sol\":18237:18256  _callOptionalReturn */\n      tag_390\n        /* \"daibond/BondDepository.sol\":18237:18357  _callOptionalReturn(... */\n      jump\t// in\n    tag_392:\n        /* \"daibond/BondDepository.sol\":18125:18364  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":1692:1868  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_258:\n        /* \"daibond/BondDepository.sol\":1750:1757  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":1781:1786  a + b */\n      dup3\n      dup3\n      add\n        /* \"daibond/BondDepository.sol\":1804:1810  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"daibond/BondDepository.sol\":1796:1842  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_329\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"daibond/BondDepository.sol\":35125:36179  function adjust() internal {... */\n    tag_265:\n        /* \"daibond/BondDepository.sol\":35210:35227  adjustment.buffer */\n      sload(0x0d)\n        /* \"daibond/BondDepository.sol\":35162:35183  uint256 timeCanAdjust */\n      0x00\n      swap1\n        /* \"daibond/BondDepository.sol\":35186:35228  adjustment.lastTime.add(adjustment.buffer) */\n      tag_396\n      swap1\n        /* \"daibond/BondDepository.sol\":35210:35227  adjustment.buffer */\n      0xffffffff\n        /* \"daibond/BondDepository.sol\":35186:35205  adjustment.lastTime */\n      0x0100000000\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":35210:35227  adjustment.buffer */\n      dup2\n      and\n      swap1\n        /* \"daibond/BondDepository.sol\":35186:35209  adjustment.lastTime.add */\n      tag_258\n        /* \"daibond/BondDepository.sol\":35186:35228  adjustment.lastTime.add(adjustment.buffer) */\n      and\n      jump\t// in\n    tag_396:\n        /* \"daibond/BondDepository.sol\":35242:35257  adjustment.rate */\n      sload(0x0b)\n        /* \"daibond/BondDepository.sol\":35162:35228  uint256 timeCanAdjust = adjustment.lastTime.add(adjustment.buffer) */\n      swap1\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":35242:35262  adjustment.rate != 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"daibond/BondDepository.sol\":35242:35298  adjustment.rate != 0 && block.timestamp >= timeCanAdjust */\n      tag_397\n      jumpi\n      pop\n        /* \"daibond/BondDepository.sol\":35285:35298  timeCanAdjust */\n      dup1\n        /* \"daibond/BondDepository.sol\":35266:35281  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":35266:35298  block.timestamp >= timeCanAdjust */\n      lt\n      iszero\n        /* \"daibond/BondDepository.sol\":35242:35298  adjustment.rate != 0 && block.timestamp >= timeCanAdjust */\n    tag_397:\n        /* \"daibond/BondDepository.sol\":35238:36173  if (adjustment.rate != 0 && block.timestamp >= timeCanAdjust) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"daibond/BondDepository.sol\":35332:35337  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":35332:35353  terms.controlVariable */\n      sload\n        /* \"daibond/BondDepository.sol\":35371:35381  adjustment */\n      0x0a\n        /* \"daibond/BondDepository.sol\":35371:35385  adjustment.add */\n      sload\n      0xff\n      and\n        /* \"daibond/BondDepository.sol\":35367:35917  if (adjustment.add) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"daibond/BondDepository.sol\":35476:35491  adjustment.rate */\n      sload(0x0b)\n        /* \"daibond/BondDepository.sol\":35429:35434  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":35429:35450  terms.controlVariable */\n      sload\n        /* \"daibond/BondDepository.sol\":35429:35509  terms.controlVariable.add(... */\n      tag_400\n      swap2\n        /* \"daibond/BondDepository.sol\":35429:35454  terms.controlVariable.add */\n      tag_258\n        /* \"daibond/BondDepository.sol\":35429:35509  terms.controlVariable.add(... */\n      jump\t// in\n    tag_400:\n        /* \"daibond/BondDepository.sol\":35405:35410  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":35405:35509  terms.controlVariable = terms.controlVariable.add(... */\n      dup2\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":35556:35573  adjustment.target */\n      sload(0x0c)\n      gt\n        /* \"daibond/BondDepository.sol\":35527:35635  if (terms.controlVariable >= adjustment.target) {... */\n      tag_401\n      jumpi\n        /* \"daibond/BondDepository.sol\":35615:35616  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":35597:35612  adjustment.rate */\n      0x0b\n        /* \"daibond/BondDepository.sol\":35597:35616  adjustment.rate = 0 */\n      sstore\n        /* \"daibond/BondDepository.sol\":35527:35635  if (terms.controlVariable >= adjustment.target) {... */\n    tag_401:\n        /* \"daibond/BondDepository.sol\":35367:35917  if (adjustment.add) {... */\n      jump(tag_404)\n    tag_399:\n        /* \"daibond/BondDepository.sol\":35744:35759  adjustment.rate */\n      sload(0x0b)\n        /* \"daibond/BondDepository.sol\":35697:35702  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":35697:35718  terms.controlVariable */\n      sload\n        /* \"daibond/BondDepository.sol\":35697:35777  terms.controlVariable.sub(... */\n      tag_403\n      swap2\n        /* \"daibond/BondDepository.sol\":35697:35722  terms.controlVariable.sub */\n      tag_178\n        /* \"daibond/BondDepository.sol\":35697:35777  terms.controlVariable.sub(... */\n      jump\t// in\n    tag_403:\n        /* \"daibond/BondDepository.sol\":35673:35678  terms */\n      0x04\n        /* \"daibond/BondDepository.sol\":35673:35777  terms.controlVariable = terms.controlVariable.sub(... */\n      dup2\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":35824:35841  adjustment.target */\n      sload(0x0c)\n      lt\n        /* \"daibond/BondDepository.sol\":35795:35903  if (terms.controlVariable <= adjustment.target) {... */\n      tag_404\n      jumpi\n        /* \"daibond/BondDepository.sol\":35883:35884  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":35865:35880  adjustment.rate */\n      0x0b\n        /* \"daibond/BondDepository.sol\":35865:35884  adjustment.rate = 0 */\n      sstore\n        /* \"daibond/BondDepository.sol\":35795:35903  if (terms.controlVariable <= adjustment.target) {... */\n    tag_404:\n        /* \"daibond/BondDepository.sol\":35930:35949  adjustment.lastTime */\n      0x0d\n        /* \"daibond/BondDepository.sol\":35930:35975  adjustment.lastTime = uint32(block.timestamp) */\n      dup1\n      sload\n      not(0xffffffff00000000)\n      and\n      0x0100000000\n        /* \"daibond/BondDepository.sol\":35959:35974  block.timestamp */\n      timestamp\n        /* \"daibond/BondDepository.sol\":35930:35975  adjustment.lastTime = uint32(block.timestamp) */\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":35930:35949  adjustment.lastTime */\n      0x04\n        /* \"daibond/BondDepository.sol\":36062:36083  terms.controlVariable */\n      sload\n        /* \"daibond/BondDepository.sol\":36101:36116  adjustment.rate */\n      sload(0x0b)\n        /* \"daibond/BondDepository.sol\":35930:35940  adjustment */\n      0x0a\n        /* \"daibond/BondDepository.sol\":36134:36148  adjustment.add */\n      sload\n        /* \"daibond/BondDepository.sol\":35994:36162  ControlVariableAdjustment(... */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      dup4\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"daibond/BondDepository.sol\":36134:36148  adjustment.add */\n      0xff\n      and\n        /* \"daibond/BondDepository.sol\":35994:36162  ControlVariableAdjustment(... */\n      iszero\n      iszero\n      0x60\n      dup4\n      add\n      mstore\n      mload\n      0xb923e581a0f83128e9e1d8297aa52b18d6744310476e0b54509c054cd7a93b2a\n      swap2\n      0x80\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"daibond/BondDepository.sol\":35238:36173  if (adjustment.rate != 0 && block.timestamp >= timeCanAdjust) {... */\n      pop\n    tag_398:\n        /* \"daibond/BondDepository.sol\":35125:36179  function adjust() internal {... */\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":2982:3197  function div(... */\n    tag_332:\n        /* \"daibond/BondDepository.sol\":3098:3105  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":3132:3144  errorMessage */\n      dup2\n        /* \"daibond/BondDepository.sol\":3125:3130  b > 0 */\n      dup4\n        /* \"daibond/BondDepository.sol\":3117:3145  require(b > 0, errorMessage) */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_407:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_409\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_407)\n    tag_409:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_410\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_410:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_406:\n      pop\n        /* \"daibond/BondDepository.sol\":3155:3164  uint256 c */\n      0x00\n        /* \"daibond/BondDepository.sol\":3171:3172  b */\n      dup4\n        /* \"daibond/BondDepository.sol\":3167:3168  a */\n      dup6\n        /* \"daibond/BondDepository.sol\":3167:3172  a / b */\n      dup2\n      tag_411\n      jumpi\n      invalid\n    tag_411:\n      div\n      swap6\n        /* \"daibond/BondDepository.sol\":2982:3197  function div(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":2014:2231  function sub(... */\n    tag_359:\n        /* \"daibond/BondDepository.sol\":2130:2137  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":2165:2177  errorMessage */\n      dup2\n        /* \"daibond/BondDepository.sol\":2157:2163  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":2149:2178  require(b <= a, errorMessage) */\n      tag_413\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_409\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_407)\n    tag_413:\n      pop\n      pop\n      pop\n        /* \"daibond/BondDepository.sol\":2200:2205  a - b */\n      swap1\n      sub\n      swap1\n        /* \"daibond/BondDepository.sol\":2014:2231  function sub(... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":2378:2593  function sub32(... */\n    tag_362:\n        /* \"daibond/BondDepository.sol\":2494:2500  uint32 */\n      0x00\n        /* \"daibond/BondDepository.sol\":2525:2526  a */\n      dup4\n        /* \"daibond/BondDepository.sol\":2520:2526  b <= a */\n      0xffffffff\n      and\n        /* \"daibond/BondDepository.sol\":2520:2521  b */\n      dup4\n        /* \"daibond/BondDepository.sol\":2520:2526  b <= a */\n      0xffffffff\n      and\n      gt\n      iszero\n        /* \"daibond/BondDepository.sol\":2528:2540  errorMessage */\n      dup3\n        /* \"daibond/BondDepository.sol\":2512:2541  require(b <= a, errorMessage) */\n      swap1\n      tag_413\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_409\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_407)\n        /* \"daibond/BondDepository.sol\":21247:21583  function mulDiv(... */\n    tag_373:\n        /* \"daibond/BondDepository.sol\":21349:21356  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":21369:21378  uint256 l */\n      dup1\n        /* \"daibond/BondDepository.sol\":21380:21389  uint256 h */\n      0x00\n        /* \"daibond/BondDepository.sol\":21393:21406  fullMul(x, y) */\n      tag_425\n        /* \"daibond/BondDepository.sol\":21401:21402  x */\n      dup7\n        /* \"daibond/BondDepository.sol\":21404:21405  y */\n      dup7\n        /* \"daibond/BondDepository.sol\":21393:21400  fullMul */\n      tag_426\n        /* \"daibond/BondDepository.sol\":21393:21406  fullMul(x, y) */\n      jump\t// in\n    tag_425:\n        /* \"daibond/BondDepository.sol\":21368:21406  (uint256 l, uint256 h) = fullMul(x, y) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":21416:21426  uint256 mm */\n      0x00\n        /* \"daibond/BondDepository.sol\":21442:21443  d */\n      dup5\n        /* \"daibond/BondDepository.sol\":21429:21444  mulmod(x, y, d) */\n      dup1\n      tag_427\n      jumpi\n      invalid\n    tag_427:\n        /* \"daibond/BondDepository.sol\":21439:21440  y */\n      dup7\n        /* \"daibond/BondDepository.sol\":21436:21437  x */\n      dup9\n        /* \"daibond/BondDepository.sol\":21429:21444  mulmod(x, y, d) */\n      mulmod\n        /* \"daibond/BondDepository.sol\":21416:21444  uint256 mm = mulmod(x, y, d) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":21463:21464  l */\n      dup3\n        /* \"daibond/BondDepository.sol\":21458:21460  mm */\n      dup2\n        /* \"daibond/BondDepository.sol\":21458:21464  mm > l */\n      gt\n        /* \"daibond/BondDepository.sol\":21454:21472  if (mm > l) h -= 1 */\n      iszero\n      tag_428\n      jumpi\n        /* \"daibond/BondDepository.sol\":21471:21472  1 */\n      0x01\n        /* \"daibond/BondDepository.sol\":21466:21472  h -= 1 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":21454:21472  if (mm > l) h -= 1 */\n    tag_428:\n        /* \"daibond/BondDepository.sol\":21487:21489  mm */\n      dup1\n        /* \"daibond/BondDepository.sol\":21482:21489  l -= mm */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"daibond/BondDepository.sol\":21511:21512  d */\n      dup5\n        /* \"daibond/BondDepository.sol\":21507:21508  h */\n      dup3\n        /* \"daibond/BondDepository.sol\":21507:21512  h < d */\n      lt\n        /* \"daibond/BondDepository.sol\":21499:21543  require(h < d, \"FullMath::mulDiv: overflow\") */\n      tag_429\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_429:\n        /* \"daibond/BondDepository.sol\":21560:21576  fullDiv(l, h, d) */\n      tag_430\n        /* \"daibond/BondDepository.sol\":21568:21569  l */\n      dup4\n        /* \"daibond/BondDepository.sol\":21571:21572  h */\n      dup4\n        /* \"daibond/BondDepository.sol\":21574:21575  d */\n      dup8\n        /* \"daibond/BondDepository.sol\":21560:21567  fullDiv */\n      tag_431\n        /* \"daibond/BondDepository.sol\":21560:21576  fullDiv(l, h, d) */\n      jump\t// in\n    tag_430:\n        /* \"daibond/BondDepository.sol\":21553:21576  return fullDiv(l, h, d) */\n      swap8\n        /* \"daibond/BondDepository.sol\":21247:21583  function mulDiv(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":20008:20512  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_390:\n        /* \"daibond/BondDepository.sol\":20088:20111  bytes memory returndata */\n      0x60\n        /* \"daibond/BondDepository.sol\":20114:20217  address(token).functionCall(... */\n      tag_433\n        /* \"daibond/BondDepository.sol\":20155:20159  data */\n      dup3\n        /* \"daibond/BondDepository.sol\":20114:20217  address(token).functionCall(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"daibond/BondDepository.sol\":20122:20127  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":20114:20141  address(token).functionCall */\n      and\n      tag_434\n      swap1\n        /* \"daibond/BondDepository.sol\":20114:20217  address(token).functionCall(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_433:\n        /* \"daibond/BondDepository.sol\":20231:20248  returndata.length */\n      dup1\n      mload\n        /* \"daibond/BondDepository.sol\":20088:20217  bytes memory returndata = address(token).functionCall(... */\n      swap1\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":20231:20252  returndata.length > 0 */\n      iszero\n        /* \"daibond/BondDepository.sol\":20227:20506  if (returndata.length > 0) {... */\n      tag_392\n      jumpi\n        /* \"daibond/BondDepository.sol\":20400:20410  returndata */\n      dup1\n        /* \"daibond/BondDepository.sol\":20389:20419  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_436\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_436:\n      pop\n      mload\n        /* \"daibond/BondDepository.sol\":20364:20495  require(... */\n      tag_392\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"daibond/BondDepository.sol\":20539:20772  function fullMul(uint256 x, uint256 y)... */\n    tag_426:\n        /* \"daibond/BondDepository.sol\":20624:20633  uint256 l */\n      0x00\n      dup1\n      dup1\n      not(0x00)\n        /* \"daibond/BondDepository.sol\":20683:20684  y */\n      dup5\n        /* \"daibond/BondDepository.sol\":20680:20681  x */\n      dup7\n        /* \"daibond/BondDepository.sol\":20673:20698  mulmod(x, y, uint256(-1)) */\n      mulmod\n        /* \"daibond/BondDepository.sol\":20660:20698  uint256 mm = mulmod(x, y, uint256(-1)) */\n      swap1\n      pop\n        /* \"daibond/BondDepository.sol\":20716:20717  y */\n      dup4\n        /* \"daibond/BondDepository.sol\":20712:20713  x */\n      dup6\n        /* \"daibond/BondDepository.sol\":20712:20717  x * y */\n      mul\n        /* \"daibond/BondDepository.sol\":20708:20717  l = x * y */\n      swap3\n      pop\n        /* \"daibond/BondDepository.sol\":20736:20737  l */\n      dup3\n        /* \"daibond/BondDepository.sol\":20731:20733  mm */\n      dup2\n        /* \"daibond/BondDepository.sol\":20731:20737  mm - l */\n      sub\n        /* \"daibond/BondDepository.sol\":20727:20737  h = mm - l */\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":20756:20757  l */\n      dup3\n        /* \"daibond/BondDepository.sol\":20751:20753  mm */\n      dup2\n        /* \"daibond/BondDepository.sol\":20751:20757  mm < l */\n      lt\n        /* \"daibond/BondDepository.sol\":20747:20765  if (mm < l) h -= 1 */\n      iszero\n      tag_440\n      jumpi\n        /* \"daibond/BondDepository.sol\":20764:20765  1 */\n      0x01\n        /* \"daibond/BondDepository.sol\":20759:20765  h -= 1 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":20747:20765  if (mm < l) h -= 1 */\n    tag_440:\n        /* \"daibond/BondDepository.sol\":20539:20772  function fullMul(uint256 x, uint256 y)... */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":20778:21241  function fullDiv(... */\n    tag_431:\n        /* \"daibond/BondDepository.sol\":20880:20887  uint256 */\n      0x00\n        /* \"daibond/BondDepository.sol\":20918:20920  -d */\n      dup2\n      dup2\n      sub\n        /* \"daibond/BondDepository.sol\":20914:20920  d & -d */\n      dup3\n      and\n      dup1\n        /* \"daibond/BondDepository.sol\":20919:20920  d */\n      dup4\n        /* \"daibond/BondDepository.sol\":20914:20920  d & -d */\n      dup2\n        /* \"daibond/BondDepository.sol\":20930:20939  d /= pow2 */\n      tag_442\n      jumpi\n      invalid\n    tag_442:\n      div\n      swap3\n      pop\n        /* \"daibond/BondDepository.sol\":20954:20958  pow2 */\n      dup1\n        /* \"daibond/BondDepository.sol\":20949:20958  l /= pow2 */\n      dup6\n      dup2\n      tag_443\n      jumpi\n      invalid\n    tag_443:\n      div\n      swap5\n      pop\n        /* \"daibond/BondDepository.sol\":20988:20992  pow2 */\n      dup1\n        /* \"daibond/BondDepository.sol\":20980:20984  pow2 */\n      dup2\n        /* \"daibond/BondDepository.sol\":20979:20984  -pow2 */\n      0x00\n      sub\n        /* \"daibond/BondDepository.sol\":20978:20992  (-pow2) / pow2 */\n      dup2\n      tag_444\n      jumpi\n      invalid\n    tag_444:\n        /* \"daibond/BondDepository.sol\":21035:21036  2 */\n      0x02\n        /* \"daibond/BondDepository.sol\":21035:21044  2 - d * r */\n      dup6\n      dup2\n      sub\n        /* \"daibond/BondDepository.sol\":21063:21068  d * r */\n      dup1\n      dup8\n      mul\n        /* \"daibond/BondDepository.sol\":21059:21068  2 - d * r */\n      dup3\n      sub\n        /* \"daibond/BondDepository.sol\":21054:21068  r *= 2 - d * r */\n      mul\n        /* \"daibond/BondDepository.sol\":21087:21092  d * r */\n      dup1\n      dup8\n      mul\n        /* \"daibond/BondDepository.sol\":21083:21092  2 - d * r */\n      dup3\n      sub\n        /* \"daibond/BondDepository.sol\":21078:21092  r *= 2 - d * r */\n      mul\n        /* \"daibond/BondDepository.sol\":21111:21116  d * r */\n      dup1\n      dup8\n      mul\n        /* \"daibond/BondDepository.sol\":21107:21116  2 - d * r */\n      dup3\n      sub\n        /* \"daibond/BondDepository.sol\":21102:21116  r *= 2 - d * r */\n      mul\n        /* \"daibond/BondDepository.sol\":21135:21140  d * r */\n      dup1\n      dup8\n      mul\n        /* \"daibond/BondDepository.sol\":21131:21140  2 - d * r */\n      dup3\n      sub\n        /* \"daibond/BondDepository.sol\":21126:21140  r *= 2 - d * r */\n      mul\n        /* \"daibond/BondDepository.sol\":21159:21164  d * r */\n      dup1\n      dup8\n      mul\n        /* \"daibond/BondDepository.sol\":21155:21164  2 - d * r */\n      dup3\n      sub\n        /* \"daibond/BondDepository.sol\":21150:21164  r *= 2 - d * r */\n      mul\n        /* \"daibond/BondDepository.sol\":21183:21188  d * r */\n      dup1\n      dup8\n      mul\n        /* \"daibond/BondDepository.sol\":21179:21188  2 - d * r */\n      dup3\n      sub\n        /* \"daibond/BondDepository.sol\":21174:21188  r *= 2 - d * r */\n      mul\n        /* \"daibond/BondDepository.sol\":21207:21212  d * r */\n      swap6\n      dup7\n      mul\n        /* \"daibond/BondDepository.sol\":21203:21212  2 - d * r */\n      swap1\n      sub\n        /* \"daibond/BondDepository.sol\":21198:21212  r *= 2 - d * r */\n      swap1\n      swap5\n      mul\n        /* \"daibond/BondDepository.sol\":20978:20992  (-pow2) / pow2 */\n      swap4\n      div\n        /* \"daibond/BondDepository.sol\":20995:20996  1 */\n      0x01\n        /* \"daibond/BondDepository.sol\":20978:20996  (-pow2) / pow2 + 1 */\n      add\n        /* \"daibond/BondDepository.sol\":20973:20997  h * ((-pow2) / pow2 + 1) */\n      swap4\n      swap1\n      swap4\n      mul\n        /* \"daibond/BondDepository.sol\":20968:20997  l += h * ((-pow2) / pow2 + 1) */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"daibond/BondDepository.sol\":21229:21234  l * r */\n      mul\n      swap3\n        /* \"daibond/BondDepository.sol\":20778:21241  function fullDiv(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":4796:5020  function functionCall(... */\n    tag_434:\n        /* \"daibond/BondDepository.sol\":4929:4941  bytes memory */\n      0x60\n        /* \"daibond/BondDepository.sol\":4960:5013  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_446\n        /* \"daibond/BondDepository.sol\":4983:4989  target */\n      dup5\n        /* \"daibond/BondDepository.sol\":4991:4995  data */\n      dup5\n        /* \"daibond/BondDepository.sol\":4997:4998  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":5000:5012  errorMessage */\n      dup6\n        /* \"daibond/BondDepository.sol\":4960:4982  _functionCallWithValue */\n      tag_447\n        /* \"daibond/BondDepository.sol\":4960:5013  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_446:\n        /* \"daibond/BondDepository.sol\":4953:5013  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"daibond/BondDepository.sol\":4796:5020  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":5997:7013  function _functionCallWithValue(... */\n    tag_447:\n        /* \"daibond/BondDepository.sol\":6165:6177  bytes memory */\n      0x60\n        /* \"daibond/BondDepository.sol\":6197:6215  isContract(target) */\n      tag_449\n        /* \"daibond/BondDepository.sol\":6208:6214  target */\n      dup6\n        /* \"daibond/BondDepository.sol\":6197:6207  isContract */\n      tag_450\n        /* \"daibond/BondDepository.sol\":6197:6215  isContract(target) */\n      jump\t// in\n    tag_449:\n        /* \"daibond/BondDepository.sol\":6189:6249  require(isContract(target), \"Address: call to non-contract\") */\n      tag_451\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_451:\n        /* \"daibond/BondDepository.sol\":6320:6332  bool success */\n      0x00\n        /* \"daibond/BondDepository.sol\":6334:6357  bytes memory returndata */\n      0x60\n        /* \"daibond/BondDepository.sol\":6361:6367  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":6361:6372  target.call */\n      and\n        /* \"daibond/BondDepository.sol\":6380:6388  weiValue */\n      dup6\n        /* \"daibond/BondDepository.sol\":6403:6407  data */\n      dup8\n        /* \"daibond/BondDepository.sol\":6361:6417  target.call{value: weiValue}(... */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_452:\n      0x20\n      dup4\n      lt\n      tag_454\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_452)\n    tag_454:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_457\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_456)\n    tag_457:\n      0x60\n      swap2\n      pop\n    tag_456:\n      pop\n        /* \"daibond/BondDepository.sol\":6319:6417  (bool success, bytes memory returndata) = target.call{value: weiValue}(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":6431:6438  success */\n      dup2\n        /* \"daibond/BondDepository.sol\":6427:7007  if (success) {... */\n      iszero\n      tag_458\n      jumpi\n        /* \"daibond/BondDepository.sol\":6461:6471  returndata */\n      swap2\n      pop\n        /* \"daibond/BondDepository.sol\":6454:6471  return returndata */\n      tag_446\n      swap1\n      pop\n      jump\n        /* \"daibond/BondDepository.sol\":6427:7007  if (success) {... */\n    tag_458:\n        /* \"daibond/BondDepository.sol\":6572:6589  returndata.length */\n      dup1\n      mload\n        /* \"daibond/BondDepository.sol\":6572:6593  returndata.length > 0 */\n      iszero\n        /* \"daibond/BondDepository.sol\":6568:6997  if (returndata.length > 0) {... */\n      tag_460\n      jumpi\n        /* \"daibond/BondDepository.sol\":6830:6840  returndata */\n      dup1\n        /* \"daibond/BondDepository.sol\":6824:6841  mload(returndata) */\n      mload\n        /* \"daibond/BondDepository.sol\":6890:6905  returndata_size */\n      dup1\n        /* \"daibond/BondDepository.sol\":6877:6887  returndata */\n      dup3\n        /* \"daibond/BondDepository.sol\":6873:6875  32 */\n      0x20\n        /* \"daibond/BondDepository.sol\":6869:6888  add(32, returndata) */\n      add\n        /* \"daibond/BondDepository.sol\":6862:6906  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"daibond/BondDepository.sol\":6779:6924  {... */\n    tag_460:\n        /* \"daibond/BondDepository.sol\":6962:6982  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup7\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup7\n      mload\n        /* \"daibond/BondDepository.sol\":6969:6981  errorMessage */\n      dup8\n      swap4\n        /* \"daibond/BondDepository.sol\":6962:6982  revert(errorMessage) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_409\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_407)\n        /* \"daibond/BondDepository.sol\":3882:4128  function isContract(address account) internal view returns (bool) {... */\n    tag_450:\n        /* \"daibond/BondDepository.sol\":4067:4087  extcodesize(account) */\n      extcodesize\n        /* \"daibond/BondDepository.sol\":4113:4121  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"daibond/BondDepository.sol\":3882:4128  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n    tag_169:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_364:\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n    data_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7 4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9b1eacaf7b3b2d412df286fef87f078c0c28d492dea75275391ee8422db5360c 536c697070616765206c696d69743a206d6f7265207468616e206d6178207072696365\n    data_9bf0496b18f4db662847e65668d0ae3d4d7f5ebc115d137b3b0990ae2896f44e 56657374696e67206d757374206265206c6f6e676572207468616e20333620686f757273\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa26469706673582212202b3fbad75d127160f2c8514edf6498d145fa7fce53fca9ade4ef7f27c5ce7a2564736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6101406040523480156200001257600080fd5b5060405162002f7238038062002f72833981810160405260a08110156200003857600080fd5b50805160208201516040808401516060850151608090950151600080546001600160a01b031916331780825593519596949592949391926001600160a01b0392909216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36001600160a01b038516620000b557600080fd5b6001600160601b0319606086901b166080526001600160a01b038416620000db57600080fd5b6001600160601b0319606085901b1660a0526001600160a01b0383166200010157600080fd5b6001600160601b0319606084901b1660c0526001600160a01b0382166200012757600080fd5b6001600160601b0319606092831b811660e0529181901b909116610120526001600160a01b0316151560f81b6101005250505060805160601c60a05160601c60c05160601c60e05160601c6101005160f81c6101205160601c612d446200022e60003980610ee252806116ec52806119e6525080610eb452806116bb5280611d1152508061152b52806117b55280611933525080610e3e52806111625280611384528061147f5250806106055280610f115280610fb85280611191528061132b5280611355528061144e528061171b52806118f1525080610b92528061150952806118b25280611a405280611d865280611f25528061200a528061211f5250612d446000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c8063844b5c7c11610145578063cf37a891116100bd578063d7ccfb0b1161008c578063e392a26211610071578063e392a262146105d2578063f5c2ab5b146105da578063fc7b9c18146105fb57610241565b8063d7ccfb0b146105c2578063e0176de8146105ca57610241565b8063cf37a89114610504578063d4d863ce1461054b578063d502562514610579578063d7969060146105ba57610241565b8063ae9832cf11610114578063c5332b7c116100f9578063c5332b7c146104a2578063cd1234b3146104aa578063cea55f57146104fc57610241565b8063ae9832cf14610445578063b4abccba1461047c57610241565b8063844b5c7c146103fb5780638dbdbe6d14610403578063904b3ece1461043557806398fabd3a1461043d57610241565b8063451ee4a1116101d85780635a96ac0a116101a7578063759076e51161018c578063759076e5146103ce57806377b81895146103d65780637927ebf8146103de57610241565b80635a96ac0a146103be57806361d027b3146103c657610241565b8063451ee4a11461032c57806346f68ee91461036a5780634cf088d914610390578063507930ec1461039857610241565b80631e321a0f116102145780631e321a0f146102b45780631feed31f146102da5780632f3f470a146103085780633c4e6da71461032457610241565b8063016a42841461024657806301b88ee81461026a5780630505c8c9146102a2578063089208d8146102aa575b600080fd5b61024e610603565b604080516001600160a01b039092168252519081900360200190f35b6102906004803603602081101561028057600080fd5b50356001600160a01b0316610627565b60408051918252519081900360200190f35b61024e610680565b6102b2610690565b005b6102b2600480360360408110156102ca57600080fd5b5060ff8135169060200135610739565b610290600480360360408110156102f057600080fd5b506001600160a01b038135169060200135151561092e565b610310610b80565b604080519115158252519081900360200190f35b61024e610b90565b610334610bb4565b60408051951515865260208601949094528484019290925263ffffffff9081166060850152166080830152519081900360a00190f35b6102b26004803603602081101561038057600080fd5b50356001600160a01b0316610bdb565b61024e610cda565b610290600480360360208110156103ae57600080fd5b50356001600160a01b0316610ce9565b6102b2610d92565b61024e610e3c565b610290610e60565b61024e610e7b565b610290600480360360208110156103f457600080fd5b5035610e8a565b610290610eb0565b6102906004803603606081101561041957600080fd5b50803590602081013590604001356001600160a01b0316611049565b6102906116b7565b61024e6117b3565b6102b26004803603608081101561045b57600080fd5b5080351515906020810135906040810135906060013563ffffffff166117d7565b6103106004803603602081101561049257600080fd5b50356001600160a01b03166118ae565b61024e6119e4565b6104d0600480360360208110156104c057600080fd5b50356001600160a01b0316611a08565b60408051948552602085019390935263ffffffff91821684840152166060830152519081900360800190f35b610290611a3b565b6102b2600480360360e081101561051a57600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c0013563ffffffff16611af3565b6102b26004803603604081101561056157600080fd5b506001600160a01b0381351690602001351515611c1f565b610581611cf4565b604080519687526020870195909552858501939093526060850191909152608084015263ffffffff1660a0830152519081900360c00190f35b610310611d0f565b610290611d33565b610290611d72565b610290611e0f565b6105e2611e68565b6040805163ffffffff9092168252519081900360200190f35b610290611e74565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061063383610ce9565b6001600160a01b0384166000908152600e6020526040902054909150612710821061066057809250610679565b6106766127106106708385611e7a565b90611eda565b92505b5050919050565b6000546001600160a01b03165b90565b6000546001600160a01b031633146106ef576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610798576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008260048111156107a657fe5b1415610808576201fa408110156107ee5760405162461bcd60e51b8152600401808060200182810382526024815260200180612cc16024913960400191505060405180910390fd5b6009805463ffffffff191663ffffffff831617905561092a565b600182600481111561081657fe5b141561087d576103e8811115610873576040805162461bcd60e51b815260206004820181905260248201527f5061796f75742063616e6e6f742062652061626f766520312070657263656e74604482015290519081900360640190fd5b600681905561092a565b600282600481111561088b57fe5b14156108f2576127108111156108e8576040805162461bcd60e51b815260206004820152601c60248201527f44414f206665652063616e6e6f7420657863656564207061796f757400000000604482015290519081900360640190fd5b600781905561092a565b600382600481111561090057fe5b141561091057600881905561092a565b600482600481111561091e57fe5b141561092a5760058190555b5050565b6000610938612bc8565b506001600160a01b0383166000908152600e602090815260408083208151608081018352815481526001820154938101939093526002015463ffffffff8082169284019290925264010000000090041660608201529061099785610ce9565b90506127108110610a2c576001600160a01b0385166000818152600e6020908152604080832083815560018101849055600201805467ffffffffffffffff19169055855181519081529182019290925281517f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b1929181900390910190a2610a2385858460000151611f1c565b92505050610b7a565b8151600090610a4390612710906106709085611e7a565b90506040518060800160405280610a6783866000015161222090919063ffffffff16565b8152602001846020015181526020014263ffffffff168152602001610abb610aa286604001514263ffffffff1661226290919063ffffffff16565b866060015163ffffffff1661226290919063ffffffff16565b63ffffffff9081169091526001600160a01b0388166000818152600e60209081526040918290208551808255868301516001830155868401516002909201805460609098015187166401000000000267ffffffff00000000199390971663ffffffff19909816979097179190911694909417909455805185815293840192909252815190927f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b192908290030190a2610b74868683611f1c565b93505050505b92915050565b600354600160a01b900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600a54600b54600c54600d5460ff9093169263ffffffff8082169164010000000090041685565b6000546001600160a01b03163314610c3a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610c7f5760405162461bcd60e51b8152600401808060200182810382526026815260200180612c0f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6000610cf3612bc8565b506001600160a01b0382166000908152600e602090815260408083208151608081018352815481526001820154938101939093526002015463ffffffff80821692840183905264010000000090910481166060840152919291610d5a914282169161222016565b606083015190915063ffffffff168015610d8557610d7e8161067084612710611e7a565b9350610d8a565b600093505b505050919050565b6001546001600160a01b03163314610ddb5760405162461bcd60e51b8152600401808060200182810382526022815260200180612c356022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610e76610e6d611e0f565b600f5490612220565b905090565b6003546001600160a01b031681565b6000610b7a662386f26fc10000610670610eab85610ea6611d33565b6122a4565b612426565b60007f000000000000000000000000000000000000000000000000000000000000000015610fae57610fa760646106707f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332da80a37f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d6020811015610f9757600080fd5b5051610fa1611d33565b90611e7a565b905061068d565b610e7660646106707f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561100f57600080fd5b505afa158015611023573d6000803e3d6000fd5b505050506040513d602081101561103957600080fd5b505160ff16600a0a610fa1611d33565b60006001600160a01b0382166110a6576040805162461bcd60e51b815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b6110ae61243e565b600854600f541115611107576040805162461bcd60e51b815260206004820152601460248201527f4d61782063617061636974792072656163686564000000000000000000000000604482015290519081900360640190fd5b6000611111610eb0565b9050600061111d612463565b90508085101561115e5760405162461bcd60e51b8152600401808060200182810382526023815260200180612c9e6023913960400191505060405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f18217837f0000000000000000000000000000000000000000000000000000000000000000896040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b1580156111f557600080fd5b505afa158015611209573d6000803e3d6000fd5b505050506040513d602081101561121f57600080fd5b50519050600061122e82610e8a565b905062989680811015611288576040805162461bcd60e51b815260206004820152600e60248201527f426f6e6420746f6f20736d616c6c000000000000000000000000000000000000604482015290519081900360640190fd5b611290611d72565b8111156112e4576040805162461bcd60e51b815260206004820152600e60248201527f426f6e6420746f6f206c61726765000000000000000000000000000000000000604482015290519081900360640190fd5b600061130461271061067060046003015485611e7a90919063ffffffff16565b9050600061131c826113168686612220565b90612220565b90506113536001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308d6124a5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008c6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156113ea57600080fd5b505af11580156113fe573d6000803e3d6000fd5b505050506040513d602081101561141457600080fd5b5050604080517fbc157ac1000000000000000000000000000000000000000000000000000000008152600481018c90526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526044820184905291517f00000000000000000000000000000000000000000000000000000000000000009092169163bc157ac1916064808201926020929091908290030181600087803b1580156114ca57600080fd5b505af11580156114de573d6000803e3d6000fd5b505050506040513d60208110156114f457600080fd5b50508115611550576115506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008461251e565b600f5461155d908561258e565b600f55604080516080810182526001600160a01b038a166000908152600e6020529190912054819061158f908661258e565b8152602080820189905263ffffffff428181166040808601919091526009805484166060968701526001600160a01b038f166000908152600e8652829020875181559487015160018601559086015160029094018054969095015183166401000000000267ffffffff000000001994841663ffffffff1990971696909617939093169490941790925554889261162a92909181169061258e16565b604080518d8152905186917f1fec6dc81f140574bf43f6b1e420ae1dd47928b9d57db8cbd7b8611063b85ae5919081900360200190a4611668611a3b565b611670612463565b611678610eb0565b6040517f375b221f40939bfd8f49723a17cf7bc6d576ebf72efe2cc3e991826f5b3f390a90600090a46116a96125e8565b509098975050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000156117ab57610fa7633b9aca006106707f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332da80a37f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561177757600080fd5b505afa15801561178b573d6000803e3d6000fd5b505050506040513d60208110156117a157600080fd5b5051610fa1611a3b565b610fa7611a3b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03163314611836576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6040805160a0810182529415158086526020860185905290850183905263ffffffff91821660608601819052429092166080909501859052600a805460ff19169091179055600b92909255600c55600d805463ffffffff191690911767ffffffff000000001916640100000000909202919091179055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156118ef57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561192e57600080fd5b6119dc7f0000000000000000000000000000000000000000000000000000000000000000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561199f57600080fd5b505afa1580156119b3573d6000803e3d6000fd5b505050506040513d60208110156119c957600080fd5b50516001600160a01b038516919061251e565b506001919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e6020526000908152604090208054600182015460029092015490919063ffffffff8082169164010000000090041684565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a9757600080fd5b505afa158015611aab573d6000803e3d6000fd5b505050506040513d6020811015611ac157600080fd5b50519050611aed670de0b6b3a7640000610670610eab611ae7633b9aca00610fa1610e60565b856122a4565b91505090565b6000546001600160a01b03163314611b52576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60045415611ba7576040805162461bcd60e51b815260206004820181905260248201527f426f6e6473206d75737420626520696e697469616c697a65642066726f6d2030604482015290519081900360640190fd5b6040805160c08101825288815260208101889052908101869052606081018590526080810184905263ffffffff91821660a09091018190526004979097556005959095556006939093556007919091556008556009805463ffffffff199081169094179055600f556010805490921642909116179055565b6000546001600160a01b03163314611c7e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038216611c9157600080fd5b8015611cc65760038054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b03841617905561092a565b6003805460ff60a01b19169055600280546001600160a01b0384166001600160a01b03199091161790555050565b60045460055460065460075460085460095463ffffffff1686565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000611d5e62989680610670633b9aca00611d58611d4f611a3b565b60045490611e7a565b9061258e565b60055490915081101561068d575060055490565b6000610e76620186a06106706004600201547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ddd57600080fd5b505afa158015611df1573d6000803e3d6000fd5b505050506040513d6020811015611e0757600080fd5b505190611e7a565b6010546000908190611e2d9063ffffffff4281169181169061226216565b600954600f54919250611e529163ffffffff91821691610670919080861690611e7a16565b9150600f54821115611e6457600f5491505b5090565b60105463ffffffff1681565b600f5481565b600082611e8957506000610b7a565b82820282848281611e9657fe5b0414611ed35760405162461bcd60e51b8152600401808060200182810382526021815260200180612c7d6021913960400191505060405180910390fd5b9392505050565b6000611ed383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506126f5565b600082611fcc577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015611f9a57600080fd5b505af1158015611fae573d6000803e3d6000fd5b505050506040513d6020811015611fc457600080fd5b506122199050565b600354600160a01b900460ff16156120f3576003546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905290517f00000000000000000000000000000000000000000000000000000000000000009092169163095ea7b3916044808201926020929091908290030181600087803b15801561205557600080fd5b505af1158015612069573d6000803e3d6000fd5b505050506040513d602081101561207f57600080fd5b505060035460408051637acb775760e01b8152600481018590526001600160a01b03878116602483015291519190921691637acb775791604480830192600092919082900301818387803b1580156120d657600080fd5b505af11580156120ea573d6000803e3d6000fd5b50505050612219565b6002546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905290517f00000000000000000000000000000000000000000000000000000000000000009092169163095ea7b3916044808201926020929091908290030181600087803b15801561216a57600080fd5b505af115801561217e573d6000803e3d6000fd5b505050506040513d602081101561219457600080fd5b505060025460408051637acb775760e01b8152600481018590526001600160a01b03878116602483015291519190921691637acb77579160448083019260209291908290030181600087803b1580156121ec57600080fd5b505af1158015612200573d6000803e3d6000fd5b505050506040513d602081101561221657600080fd5b50505b5092915050565b6000611ed383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612797565b6000611ed383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127f1565b6122ac612bfc565b600082116122eb5760405162461bcd60e51b8152600401808060200182810382526026815260200180612c576026913960400191505060405180910390fd5b826123055750604080516020810190915260008152610b7a565b71ffffffffffffffffffffffffffffffffffff83116123ac57600082607085901b8161232d57fe5b0490506001600160e01b0381111561238c576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b6040518060200160405280826001600160e01b0316815250915050610b7a565b60006123c8846e01000000000000000000000000000085612850565b90506001600160e01b0381111561238c576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b516612725dd1d243ab6001600160e01b039091160490565b612449610e6d611e0f565b600f556010805463ffffffff19164263ffffffff16179055565b600061247f62989680610670633b9aca00611d58611d4f611a3b565b600554909150811015612495575060055461068d565b6005541561068d57600060055590565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03167f23b872dd000000000000000000000000000000000000000000000000000000001790526125189085906128f0565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b03167fa9059cbb000000000000000000000000000000000000000000000000000000001790526125899084906128f0565b505050565b600082820183811015611ed3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600d5460009061260b9063ffffffff640100000000820481169181169061258e16565b600b549091501580159061261f5750804210155b156126f257600454600a5460ff161561265957600b546004546126419161258e565b6004819055600c5411612654576000600b555b61267b565b600b5460045461266891612220565b6004819055600c541061267b576000600b555b600d805467ffffffff0000000019166401000000004263ffffffff1602179055600454600b54600a546040805185815260208101949094528381019290925260ff1615156060830152517fb923e581a0f83128e9e1d8297aa52b18d6744310476e0b54509c054cd7a93b2a916080908290030190a1505b50565b600081836127815760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561274657818101518382015260200161272e565b50505050905090810190601f1680156127735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161278d57fe5b0495945050505050565b600081848411156127e95760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561274657818101518382015260200161272e565b505050900390565b60008363ffffffff168363ffffffff16111582906127e95760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561274657818101518382015260200161272e565b600080600061285f86866129a1565b915091506000848061286d57fe5b868809905082811115612881576001820391505b80830392508482106128da576040805162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77000000000000604482015290519081900360640190fd5b6128e58383876129ce565b979650505050505050565b6060612945826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a3e9092919063ffffffff16565b8051909150156125895780806020019051602081101561296457600080fd5b50516125895760405162461bcd60e51b815260040180806020018281038252602a815260200180612ce5602a913960400191505060405180910390fd5b60008080600019848609905083850292508281039150828110156129c6576001820391505b509250929050565b600081810382168083816129de57fe5b0492508085816129ea57fe5b0494508081600003816129f957fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6060612a4d8484600085612a55565b949350505050565b6060612a6085612bc2565b612ab1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612af05780518252601f199092019160209182019101612ad1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612b52576040519150601f19603f3d011682016040523d82523d6000602084013e612b57565b606091505b50915091508115612b6b579150612a4d9050565b805115612b7b5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561274657818101518382015260200161272e565b3b151590565b60405180608001604052806000815260200160008152602001600063ffffffff168152602001600063ffffffff1681525090565b6040805160208101909152600081529056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77536c697070616765206c696d69743a206d6f7265207468616e206d617820707269636556657374696e67206d757374206265206c6f6e676572207468616e20333620686f7572735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212202b3fbad75d127160f2c8514edf6498d145fa7fce53fca9ade4ef7f27c5ce7a2564736f6c63430007050033",
							"opcodes": "PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F72 CODESIZE SUB DUP1 PUSH3 0x2F72 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xA0 DUP2 LT ISZERO PUSH3 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 SWAP1 SWAP6 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE SWAP4 MLOAD SWAP6 SWAP7 SWAP5 SWAP6 SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP3 SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP3 DUP4 SHL DUP2 AND PUSH1 0xE0 MSTORE SWAP2 DUP2 SWAP1 SHL SWAP1 SWAP2 AND PUSH2 0x120 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH1 0xF8 SHL PUSH2 0x100 MSTORE POP POP POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0xF8 SHR PUSH2 0x120 MLOAD PUSH1 0x60 SHR PUSH2 0x2D44 PUSH3 0x22E PUSH1 0x0 CODECOPY DUP1 PUSH2 0xEE2 MSTORE DUP1 PUSH2 0x16EC MSTORE DUP1 PUSH2 0x19E6 MSTORE POP DUP1 PUSH2 0xEB4 MSTORE DUP1 PUSH2 0x16BB MSTORE DUP1 PUSH2 0x1D11 MSTORE POP DUP1 PUSH2 0x152B MSTORE DUP1 PUSH2 0x17B5 MSTORE DUP1 PUSH2 0x1933 MSTORE POP DUP1 PUSH2 0xE3E MSTORE DUP1 PUSH2 0x1162 MSTORE DUP1 PUSH2 0x1384 MSTORE DUP1 PUSH2 0x147F MSTORE POP DUP1 PUSH2 0x605 MSTORE DUP1 PUSH2 0xF11 MSTORE DUP1 PUSH2 0xFB8 MSTORE DUP1 PUSH2 0x1191 MSTORE DUP1 PUSH2 0x132B MSTORE DUP1 PUSH2 0x1355 MSTORE DUP1 PUSH2 0x144E MSTORE DUP1 PUSH2 0x171B MSTORE DUP1 PUSH2 0x18F1 MSTORE POP DUP1 PUSH2 0xB92 MSTORE DUP1 PUSH2 0x1509 MSTORE DUP1 PUSH2 0x18B2 MSTORE DUP1 PUSH2 0x1A40 MSTORE DUP1 PUSH2 0x1D86 MSTORE DUP1 PUSH2 0x1F25 MSTORE DUP1 PUSH2 0x200A MSTORE DUP1 PUSH2 0x211F MSTORE POP PUSH2 0x2D44 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x241 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x844B5C7C GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xCF37A891 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xD7CCFB0B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE392A262 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE392A262 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xF5C2AB5B EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x5FB JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xD7CCFB0B EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xE0176DE8 EQ PUSH2 0x5CA JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xCF37A891 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xD4D863CE EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xD5025625 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xD7969060 EQ PUSH2 0x5BA JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xAE9832CF GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xC5332B7C GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC5332B7C EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xCD1234B3 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xCEA55F57 EQ PUSH2 0x4FC JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xAE9832CF EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xB4ABCCBA EQ PUSH2 0x47C JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x844B5C7C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x8DBDBE6D EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x904B3ECE EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x98FABD3A EQ PUSH2 0x43D JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x451EE4A1 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x5A96AC0A GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x759076E5 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x759076E5 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x77B81895 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x7927EBF8 EQ PUSH2 0x3DE JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x3C6 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x451EE4A1 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x4CF088D9 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x507930EC EQ PUSH2 0x398 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x1E321A0F GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x1E321A0F EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x1FEED31F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2F3F470A EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x3C4E6DA7 EQ PUSH2 0x324 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x16A4284 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x1B88EE8 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x505C8C9 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24E PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x680 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x739 JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x92E JUMP JUMPDEST PUSH2 0x310 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x334 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE AND PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x24E PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x290 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x290 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x17B3 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x24E PUSH2 0x19E4 JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND DUP5 DUP5 ADD MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1AF3 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x581 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP6 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x290 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x1E74 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x633 DUP4 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2710 DUP3 LT PUSH2 0x660 JUMPI DUP1 SWAP3 POP PUSH2 0x679 JUMP JUMPDEST PUSH2 0x676 PUSH2 0x2710 PUSH2 0x670 DUP4 DUP6 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 PUSH2 0x1EDA JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x798 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7A6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x808 JUMPI PUSH3 0x1FA40 DUP2 LT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CC1 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x816 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x87D JUMPI PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796F75742063616E6E6F742062652061626F766520312070657263656E74 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x88B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x8F2 JUMPI PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F206665652063616E6E6F7420657863656564207061796F757400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x900 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x910 JUMPI PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x91E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x92A JUMPI PUSH1 0x5 DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH2 0x2BC8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH5 0x100000000 SWAP1 DIV AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 PUSH2 0x997 DUP6 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 DUP2 LT PUSH2 0xA2C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE DUP6 MLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0x51C99F515C87B0D95BA97F616EDD182E8F161C4932EAC17C6FEFE9DAB58B77B1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 PUSH2 0xA23 DUP6 DUP6 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xB7A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xA43 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x670 SWAP1 DUP6 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xA67 DUP4 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x2220 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xABB PUSH2 0xAA2 DUP7 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH4 0xFFFFFFFF AND PUSH2 0x2262 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x2262 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP1 DUP3 SSTORE DUP7 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP7 DUP5 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP9 ADD MLOAD DUP8 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFF00000000 NOT SWAP4 SWAP1 SWAP8 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP2 SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP4 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP1 SWAP3 PUSH32 0x51C99F515C87B0D95BA97F616EDD182E8F161C4932EAC17C6FEFE9DAB58B77B1 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH2 0xB74 DUP7 DUP7 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH5 0x100000000 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C0F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 PUSH2 0x2BC8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP3 DUP5 ADD DUP4 SWAP1 MSTORE PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0xD5A SWAP2 TIMESTAMP DUP3 AND SWAP2 PUSH2 0x2220 AND JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF AND DUP1 ISZERO PUSH2 0xD85 JUMPI PUSH2 0xD7E DUP2 PUSH2 0x670 DUP5 PUSH2 0x2710 PUSH2 0x1E7A JUMP JUMPDEST SWAP4 POP PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C35 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE76 PUSH2 0xE6D PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7A PUSH7 0x2386F26FC10000 PUSH2 0x670 PUSH2 0xEAB DUP6 PUSH2 0xEA6 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 ISZERO PUSH2 0xFAE JUMPI PUSH2 0xFA7 PUSH1 0x64 PUSH2 0x670 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32DA80A3 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFA1 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP PUSH2 0x68D JUMP JUMPDEST PUSH2 0xE76 PUSH1 0x64 PUSH2 0x670 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1023 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0xFA1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x10AE PUSH2 0x243E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xF SLOAD GT ISZERO PUSH2 0x1107 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782063617061636974792072656163686564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1111 PUSH2 0xEB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x111D PUSH2 0x2463 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 LT ISZERO PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C9E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF1821783 PUSH32 0x0 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1209 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x122E DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP PUSH3 0x989680 DUP2 LT ISZERO PUSH2 0x1288 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6E6420746F6F20736D616C6C000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1290 PUSH2 0x1D72 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6E6420746F6F206C61726765000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1304 PUSH2 0x2710 PUSH2 0x670 PUSH1 0x4 PUSH1 0x3 ADD SLOAD DUP6 PUSH2 0x1E7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x131C DUP3 PUSH2 0x1316 DUP7 DUP7 PUSH2 0x2220 JUMP JUMPDEST SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH2 0x1353 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP14 PUSH2 0x24A5 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xBC157AC100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0xBC157AC1 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 ISZERO PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP5 PUSH2 0x251E JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x155D SWAP1 DUP6 PUSH2 0x258E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x158F SWAP1 DUP7 PUSH2 0x258E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH4 0xFFFFFFFF TIMESTAMP DUP2 DUP2 AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP1 SLOAD DUP5 AND PUSH1 0x60 SWAP7 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE DUP7 MSTORE DUP3 SWAP1 KECCAK256 DUP8 MLOAD DUP2 SSTORE SWAP5 DUP8 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 DUP7 ADD MLOAD PUSH1 0x2 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 ADD MLOAD DUP4 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFF00000000 NOT SWAP5 DUP5 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP4 SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE SLOAD DUP9 SWAP3 PUSH2 0x162A SWAP3 SWAP1 SWAP2 DUP2 AND SWAP1 PUSH2 0x258E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 PUSH32 0x1FEC6DC81F140574BF43F6B1E420AE1DD47928B9D57DB8CBD7B8611063B85AE5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG4 PUSH2 0x1668 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x1670 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x1678 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x375B221F40939BFD8F49723A17CF7BC6D576EBF72EFE2CC3E991826F5B3F390A SWAP1 PUSH1 0x0 SWAP1 LOG4 PUSH2 0x16A9 PUSH2 0x25E8 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 ISZERO PUSH2 0x17AB JUMPI PUSH2 0xFA7 PUSH4 0x3B9ACA00 PUSH2 0x670 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32DA80A3 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x178B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFA1 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0xFA7 PUSH2 0x1A3B JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1836 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE SWAP5 ISZERO ISZERO DUP1 DUP7 MSTORE PUSH1 0x20 DUP7 ADD DUP6 SWAP1 MSTORE SWAP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE TIMESTAMP SWAP1 SWAP3 AND PUSH1 0x80 SWAP1 SWAP6 ADD DUP6 SWAP1 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xB SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SSTORE PUSH1 0xD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP2 OR PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x192E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19DC PUSH32 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH5 0x100000000 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x1AED PUSH8 0xDE0B6B3A7640000 PUSH2 0x670 PUSH2 0xEAB PUSH2 0x1AE7 PUSH4 0x3B9ACA00 PUSH2 0xFA1 PUSH2 0xE60 JUMP JUMPDEST DUP6 PUSH2 0x22A4 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD ISZERO PUSH2 0x1BA7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6E6473206D75737420626520696E697469616C697A65642066726F6D2030 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0xA0 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0x5 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP5 OR SWAP1 SSTORE PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP3 AND TIMESTAMP SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH4 0xFFFFFFFF AND DUP7 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5E PUSH3 0x989680 PUSH2 0x670 PUSH4 0x3B9ACA00 PUSH2 0x1D58 PUSH2 0x1D4F PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 PUSH2 0x258E JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x68D JUMPI POP PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE76 PUSH3 0x186A0 PUSH2 0x670 PUSH1 0x4 PUSH1 0x2 ADD SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1E2D SWAP1 PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 DUP2 AND SWAP1 PUSH2 0x2262 AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xF SLOAD SWAP2 SWAP3 POP PUSH2 0x1E52 SWAP2 PUSH4 0xFFFFFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x670 SWAP2 SWAP1 DUP1 DUP7 AND SWAP1 PUSH2 0x1E7A AND JUMP JUMPDEST SWAP2 POP PUSH1 0xF SLOAD DUP3 GT ISZERO PUSH2 0x1E64 JUMPI PUSH1 0xF SLOAD SWAP2 POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E89 JUMPI POP PUSH1 0x0 PUSH2 0xB7A JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1E96 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1ED3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C7D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x26F5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FCC JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2219 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2069 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x207F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7ACB7757 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x7ACB7757 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x216A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7ACB7757 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x7ACB7757 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2797 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x27F1 JUMP JUMPDEST PUSH2 0x22AC PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x22EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C57 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x2305 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0xB7A JUMP JUMPDEST PUSH18 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23AC JUMPI PUSH1 0x0 DUP3 PUSH1 0x70 DUP6 SWAP1 SHL DUP2 PUSH2 0x232D JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x238C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C8 DUP5 PUSH15 0x10000000000000000000000000000 DUP6 PUSH2 0x2850 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x238C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST MLOAD PUSH7 0x12725DD1D243AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND DIV SWAP1 JUMP JUMPDEST PUSH2 0x2449 PUSH2 0xE6D PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND TIMESTAMP PUSH4 0xFFFFFFFF AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F PUSH3 0x989680 PUSH2 0x670 PUSH4 0x3B9ACA00 PUSH2 0x1D58 PUSH2 0x1D4F PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x2495 JUMPI POP PUSH1 0x5 SLOAD PUSH2 0x68D JUMP JUMPDEST PUSH1 0x5 SLOAD ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 PUSH1 0x5 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2518 SWAP1 DUP6 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2589 SWAP1 DUP5 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1ED3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x260B SWAP1 PUSH4 0xFFFFFFFF PUSH5 0x100000000 DUP3 DIV DUP2 AND SWAP2 DUP2 AND SWAP1 PUSH2 0x258E AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x261F JUMPI POP DUP1 TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x26F2 JUMPI PUSH1 0x4 SLOAD PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2659 JUMPI PUSH1 0xB SLOAD PUSH1 0x4 SLOAD PUSH2 0x2641 SWAP2 PUSH2 0x258E JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0xC SLOAD GT PUSH2 0x2654 JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST PUSH2 0x267B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x4 SLOAD PUSH2 0x2668 SWAP2 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0xC SLOAD LT PUSH2 0x267B JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 TIMESTAMP PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH32 0xB923E581A0F83128E9E1D8297AA52B18D6744310476E0B54509C054CD7A93B2A SWAP2 PUSH1 0x80 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2773 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x278D JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x27E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x27E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x285F DUP7 DUP7 PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 DUP1 PUSH2 0x286D JUMPI INVALID JUMPDEST DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x2881 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST DUP1 DUP4 SUB SWAP3 POP DUP5 DUP3 LT PUSH2 0x28DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756C6C4D6174683A3A6D756C4469763A206F766572666C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x28E5 DUP4 DUP4 DUP8 PUSH2 0x29CE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2945 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A3E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2589 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD SWAP1 POP DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 SUB SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0x29C6 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB DUP3 AND DUP1 DUP4 DUP2 PUSH2 0x29DE JUMPI INVALID JUMPDEST DIV SWAP3 POP DUP1 DUP6 DUP2 PUSH2 0x29EA JUMPI INVALID JUMPDEST DIV SWAP5 POP DUP1 DUP2 PUSH1 0x0 SUB DUP2 PUSH2 0x29F9 JUMPI INVALID JUMPDEST PUSH1 0x2 DUP6 DUP2 SUB DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL SWAP6 DUP7 MUL SWAP1 SUB SWAP1 SWAP5 MUL SWAP4 DIV PUSH1 0x1 ADD SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 ADD MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2A4D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2A55 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2A60 DUP6 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x2AB1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2AF0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2B6B JUMPI SWAP2 POP PUSH2 0x2A4D SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B7B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x4669786564506F696E743A3A66 PUSH19 0x616374696F6E3A206469766973696F6E206279 KECCAK256 PUSH27 0x65726F536166654D6174683A206D756C7469706C69636174696F6E KECCAK256 PUSH16 0x766572666C6F77536C69707061676520 PUSH13 0x696D69743A206D6F7265207468 PUSH2 0x6E20 PUSH14 0x617820707269636556657374696E PUSH8 0x206D757374206265 KECCAK256 PUSH13 0x6F6E676572207468616E203336 KECCAK256 PUSH9 0x6F7572735361666545 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212202B3FBAD7 0x5D SLT PUSH18 0x60F2C8514EDF6498D145FA7FCE53FCA9ADE4 0xEF PUSH32 0x27C5CE7A2564736F6C6343000705003300000000000000000000000000000000 ",
							"sourceMap": "23498:17848:0:-:0;;;26447:601;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26447:601:0;;;;;;;;;;;;;;;;;;;;673:6;:19;;-1:-1:-1;;;;;;673:19:0;682:10;673:19;;;;707:35;;26447:601;;;;;;;;;-1:-1:-1;;;;;735:6:0;;;;;707:35;;673:6;;707:35;-1:-1:-1;;;;;26632:19:0;;26624:28;;;;;;-1:-1:-1;;;;;;26662:12:0;;;;;;;-1:-1:-1;;;;;26692:24:0;;26684:33;;;;;;-1:-1:-1;;;;;;26727:22:0;;;;;;;-1:-1:-1;;;;;26767:23:0;;26759:32;;;;;;-1:-1:-1;;;;;;26801:20:0;;;;;;;-1:-1:-1;;;;;26839:18:0;;26831:27;;;;;;-1:-1:-1;;;;;;26868:10:0;;;;;;;;26950:32;;;;;;;;;-1:-1:-1;;;;;26950:32:0;27011:29;;26992:49;;;;-1:-1:-1;;;23498:17848:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"2292": [
									{
										"length": 32,
										"start": 2962
									},
									{
										"length": 32,
										"start": 5385
									},
									{
										"length": 32,
										"start": 6322
									},
									{
										"length": 32,
										"start": 6720
									},
									{
										"length": 32,
										"start": 7558
									},
									{
										"length": 32,
										"start": 7973
									},
									{
										"length": 32,
										"start": 8202
									},
									{
										"length": 32,
										"start": 8479
									}
								],
								"2294": [
									{
										"length": 32,
										"start": 1541
									},
									{
										"length": 32,
										"start": 3857
									},
									{
										"length": 32,
										"start": 4024
									},
									{
										"length": 32,
										"start": 4497
									},
									{
										"length": 32,
										"start": 4907
									},
									{
										"length": 32,
										"start": 4949
									},
									{
										"length": 32,
										"start": 5198
									},
									{
										"length": 32,
										"start": 5915
									},
									{
										"length": 32,
										"start": 6385
									}
								],
								"2296": [
									{
										"length": 32,
										"start": 3646
									},
									{
										"length": 32,
										"start": 4450
									},
									{
										"length": 32,
										"start": 4996
									},
									{
										"length": 32,
										"start": 5247
									}
								],
								"2298": [
									{
										"length": 32,
										"start": 5419
									},
									{
										"length": 32,
										"start": 6069
									},
									{
										"length": 32,
										"start": 6451
									}
								],
								"2300": [
									{
										"length": 32,
										"start": 3764
									},
									{
										"length": 32,
										"start": 5819
									},
									{
										"length": 32,
										"start": 7441
									}
								],
								"2302": [
									{
										"length": 32,
										"start": 3810
									},
									{
										"length": 32,
										"start": 5868
									},
									{
										"length": 32,
										"start": 6630
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102415760003560e01c8063844b5c7c11610145578063cf37a891116100bd578063d7ccfb0b1161008c578063e392a26211610071578063e392a262146105d2578063f5c2ab5b146105da578063fc7b9c18146105fb57610241565b8063d7ccfb0b146105c2578063e0176de8146105ca57610241565b8063cf37a89114610504578063d4d863ce1461054b578063d502562514610579578063d7969060146105ba57610241565b8063ae9832cf11610114578063c5332b7c116100f9578063c5332b7c146104a2578063cd1234b3146104aa578063cea55f57146104fc57610241565b8063ae9832cf14610445578063b4abccba1461047c57610241565b8063844b5c7c146103fb5780638dbdbe6d14610403578063904b3ece1461043557806398fabd3a1461043d57610241565b8063451ee4a1116101d85780635a96ac0a116101a7578063759076e51161018c578063759076e5146103ce57806377b81895146103d65780637927ebf8146103de57610241565b80635a96ac0a146103be57806361d027b3146103c657610241565b8063451ee4a11461032c57806346f68ee91461036a5780634cf088d914610390578063507930ec1461039857610241565b80631e321a0f116102145780631e321a0f146102b45780631feed31f146102da5780632f3f470a146103085780633c4e6da71461032457610241565b8063016a42841461024657806301b88ee81461026a5780630505c8c9146102a2578063089208d8146102aa575b600080fd5b61024e610603565b604080516001600160a01b039092168252519081900360200190f35b6102906004803603602081101561028057600080fd5b50356001600160a01b0316610627565b60408051918252519081900360200190f35b61024e610680565b6102b2610690565b005b6102b2600480360360408110156102ca57600080fd5b5060ff8135169060200135610739565b610290600480360360408110156102f057600080fd5b506001600160a01b038135169060200135151561092e565b610310610b80565b604080519115158252519081900360200190f35b61024e610b90565b610334610bb4565b60408051951515865260208601949094528484019290925263ffffffff9081166060850152166080830152519081900360a00190f35b6102b26004803603602081101561038057600080fd5b50356001600160a01b0316610bdb565b61024e610cda565b610290600480360360208110156103ae57600080fd5b50356001600160a01b0316610ce9565b6102b2610d92565b61024e610e3c565b610290610e60565b61024e610e7b565b610290600480360360208110156103f457600080fd5b5035610e8a565b610290610eb0565b6102906004803603606081101561041957600080fd5b50803590602081013590604001356001600160a01b0316611049565b6102906116b7565b61024e6117b3565b6102b26004803603608081101561045b57600080fd5b5080351515906020810135906040810135906060013563ffffffff166117d7565b6103106004803603602081101561049257600080fd5b50356001600160a01b03166118ae565b61024e6119e4565b6104d0600480360360208110156104c057600080fd5b50356001600160a01b0316611a08565b60408051948552602085019390935263ffffffff91821684840152166060830152519081900360800190f35b610290611a3b565b6102b2600480360360e081101561051a57600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c0013563ffffffff16611af3565b6102b26004803603604081101561056157600080fd5b506001600160a01b0381351690602001351515611c1f565b610581611cf4565b604080519687526020870195909552858501939093526060850191909152608084015263ffffffff1660a0830152519081900360c00190f35b610310611d0f565b610290611d33565b610290611d72565b610290611e0f565b6105e2611e68565b6040805163ffffffff9092168252519081900360200190f35b610290611e74565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061063383610ce9565b6001600160a01b0384166000908152600e6020526040902054909150612710821061066057809250610679565b6106766127106106708385611e7a565b90611eda565b92505b5050919050565b6000546001600160a01b03165b90565b6000546001600160a01b031633146106ef576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610798576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008260048111156107a657fe5b1415610808576201fa408110156107ee5760405162461bcd60e51b8152600401808060200182810382526024815260200180612cc16024913960400191505060405180910390fd5b6009805463ffffffff191663ffffffff831617905561092a565b600182600481111561081657fe5b141561087d576103e8811115610873576040805162461bcd60e51b815260206004820181905260248201527f5061796f75742063616e6e6f742062652061626f766520312070657263656e74604482015290519081900360640190fd5b600681905561092a565b600282600481111561088b57fe5b14156108f2576127108111156108e8576040805162461bcd60e51b815260206004820152601c60248201527f44414f206665652063616e6e6f7420657863656564207061796f757400000000604482015290519081900360640190fd5b600781905561092a565b600382600481111561090057fe5b141561091057600881905561092a565b600482600481111561091e57fe5b141561092a5760058190555b5050565b6000610938612bc8565b506001600160a01b0383166000908152600e602090815260408083208151608081018352815481526001820154938101939093526002015463ffffffff8082169284019290925264010000000090041660608201529061099785610ce9565b90506127108110610a2c576001600160a01b0385166000818152600e6020908152604080832083815560018101849055600201805467ffffffffffffffff19169055855181519081529182019290925281517f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b1929181900390910190a2610a2385858460000151611f1c565b92505050610b7a565b8151600090610a4390612710906106709085611e7a565b90506040518060800160405280610a6783866000015161222090919063ffffffff16565b8152602001846020015181526020014263ffffffff168152602001610abb610aa286604001514263ffffffff1661226290919063ffffffff16565b866060015163ffffffff1661226290919063ffffffff16565b63ffffffff9081169091526001600160a01b0388166000818152600e60209081526040918290208551808255868301516001830155868401516002909201805460609098015187166401000000000267ffffffff00000000199390971663ffffffff19909816979097179190911694909417909455805185815293840192909252815190927f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b192908290030190a2610b74868683611f1c565b93505050505b92915050565b600354600160a01b900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600a54600b54600c54600d5460ff9093169263ffffffff8082169164010000000090041685565b6000546001600160a01b03163314610c3a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610c7f5760405162461bcd60e51b8152600401808060200182810382526026815260200180612c0f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6000610cf3612bc8565b506001600160a01b0382166000908152600e602090815260408083208151608081018352815481526001820154938101939093526002015463ffffffff80821692840183905264010000000090910481166060840152919291610d5a914282169161222016565b606083015190915063ffffffff168015610d8557610d7e8161067084612710611e7a565b9350610d8a565b600093505b505050919050565b6001546001600160a01b03163314610ddb5760405162461bcd60e51b8152600401808060200182810382526022815260200180612c356022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610e76610e6d611e0f565b600f5490612220565b905090565b6003546001600160a01b031681565b6000610b7a662386f26fc10000610670610eab85610ea6611d33565b6122a4565b612426565b60007f000000000000000000000000000000000000000000000000000000000000000015610fae57610fa760646106707f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332da80a37f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d6020811015610f9757600080fd5b5051610fa1611d33565b90611e7a565b905061068d565b610e7660646106707f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561100f57600080fd5b505afa158015611023573d6000803e3d6000fd5b505050506040513d602081101561103957600080fd5b505160ff16600a0a610fa1611d33565b60006001600160a01b0382166110a6576040805162461bcd60e51b815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b6110ae61243e565b600854600f541115611107576040805162461bcd60e51b815260206004820152601460248201527f4d61782063617061636974792072656163686564000000000000000000000000604482015290519081900360640190fd5b6000611111610eb0565b9050600061111d612463565b90508085101561115e5760405162461bcd60e51b8152600401808060200182810382526023815260200180612c9e6023913960400191505060405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f18217837f0000000000000000000000000000000000000000000000000000000000000000896040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b1580156111f557600080fd5b505afa158015611209573d6000803e3d6000fd5b505050506040513d602081101561121f57600080fd5b50519050600061122e82610e8a565b905062989680811015611288576040805162461bcd60e51b815260206004820152600e60248201527f426f6e6420746f6f20736d616c6c000000000000000000000000000000000000604482015290519081900360640190fd5b611290611d72565b8111156112e4576040805162461bcd60e51b815260206004820152600e60248201527f426f6e6420746f6f206c61726765000000000000000000000000000000000000604482015290519081900360640190fd5b600061130461271061067060046003015485611e7a90919063ffffffff16565b9050600061131c826113168686612220565b90612220565b90506113536001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308d6124a5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008c6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156113ea57600080fd5b505af11580156113fe573d6000803e3d6000fd5b505050506040513d602081101561141457600080fd5b5050604080517fbc157ac1000000000000000000000000000000000000000000000000000000008152600481018c90526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526044820184905291517f00000000000000000000000000000000000000000000000000000000000000009092169163bc157ac1916064808201926020929091908290030181600087803b1580156114ca57600080fd5b505af11580156114de573d6000803e3d6000fd5b505050506040513d60208110156114f457600080fd5b50508115611550576115506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008461251e565b600f5461155d908561258e565b600f55604080516080810182526001600160a01b038a166000908152600e6020529190912054819061158f908661258e565b8152602080820189905263ffffffff428181166040808601919091526009805484166060968701526001600160a01b038f166000908152600e8652829020875181559487015160018601559086015160029094018054969095015183166401000000000267ffffffff000000001994841663ffffffff1990971696909617939093169490941790925554889261162a92909181169061258e16565b604080518d8152905186917f1fec6dc81f140574bf43f6b1e420ae1dd47928b9d57db8cbd7b8611063b85ae5919081900360200190a4611668611a3b565b611670612463565b611678610eb0565b6040517f375b221f40939bfd8f49723a17cf7bc6d576ebf72efe2cc3e991826f5b3f390a90600090a46116a96125e8565b509098975050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000156117ab57610fa7633b9aca006106707f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332da80a37f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561177757600080fd5b505afa15801561178b573d6000803e3d6000fd5b505050506040513d60208110156117a157600080fd5b5051610fa1611a3b565b610fa7611a3b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03163314611836576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6040805160a0810182529415158086526020860185905290850183905263ffffffff91821660608601819052429092166080909501859052600a805460ff19169091179055600b92909255600c55600d805463ffffffff191690911767ffffffff000000001916640100000000909202919091179055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156118ef57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561192e57600080fd5b6119dc7f0000000000000000000000000000000000000000000000000000000000000000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561199f57600080fd5b505afa1580156119b3573d6000803e3d6000fd5b505050506040513d60208110156119c957600080fd5b50516001600160a01b038516919061251e565b506001919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e6020526000908152604090208054600182015460029092015490919063ffffffff8082169164010000000090041684565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a9757600080fd5b505afa158015611aab573d6000803e3d6000fd5b505050506040513d6020811015611ac157600080fd5b50519050611aed670de0b6b3a7640000610670610eab611ae7633b9aca00610fa1610e60565b856122a4565b91505090565b6000546001600160a01b03163314611b52576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60045415611ba7576040805162461bcd60e51b815260206004820181905260248201527f426f6e6473206d75737420626520696e697469616c697a65642066726f6d2030604482015290519081900360640190fd5b6040805160c08101825288815260208101889052908101869052606081018590526080810184905263ffffffff91821660a09091018190526004979097556005959095556006939093556007919091556008556009805463ffffffff199081169094179055600f556010805490921642909116179055565b6000546001600160a01b03163314611c7e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038216611c9157600080fd5b8015611cc65760038054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b03841617905561092a565b6003805460ff60a01b19169055600280546001600160a01b0384166001600160a01b03199091161790555050565b60045460055460065460075460085460095463ffffffff1686565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000611d5e62989680610670633b9aca00611d58611d4f611a3b565b60045490611e7a565b9061258e565b60055490915081101561068d575060055490565b6000610e76620186a06106706004600201547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ddd57600080fd5b505afa158015611df1573d6000803e3d6000fd5b505050506040513d6020811015611e0757600080fd5b505190611e7a565b6010546000908190611e2d9063ffffffff4281169181169061226216565b600954600f54919250611e529163ffffffff91821691610670919080861690611e7a16565b9150600f54821115611e6457600f5491505b5090565b60105463ffffffff1681565b600f5481565b600082611e8957506000610b7a565b82820282848281611e9657fe5b0414611ed35760405162461bcd60e51b8152600401808060200182810382526021815260200180612c7d6021913960400191505060405180910390fd5b9392505050565b6000611ed383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506126f5565b600082611fcc577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015611f9a57600080fd5b505af1158015611fae573d6000803e3d6000fd5b505050506040513d6020811015611fc457600080fd5b506122199050565b600354600160a01b900460ff16156120f3576003546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905290517f00000000000000000000000000000000000000000000000000000000000000009092169163095ea7b3916044808201926020929091908290030181600087803b15801561205557600080fd5b505af1158015612069573d6000803e3d6000fd5b505050506040513d602081101561207f57600080fd5b505060035460408051637acb775760e01b8152600481018590526001600160a01b03878116602483015291519190921691637acb775791604480830192600092919082900301818387803b1580156120d657600080fd5b505af11580156120ea573d6000803e3d6000fd5b50505050612219565b6002546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905290517f00000000000000000000000000000000000000000000000000000000000000009092169163095ea7b3916044808201926020929091908290030181600087803b15801561216a57600080fd5b505af115801561217e573d6000803e3d6000fd5b505050506040513d602081101561219457600080fd5b505060025460408051637acb775760e01b8152600481018590526001600160a01b03878116602483015291519190921691637acb77579160448083019260209291908290030181600087803b1580156121ec57600080fd5b505af1158015612200573d6000803e3d6000fd5b505050506040513d602081101561221657600080fd5b50505b5092915050565b6000611ed383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612797565b6000611ed383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127f1565b6122ac612bfc565b600082116122eb5760405162461bcd60e51b8152600401808060200182810382526026815260200180612c576026913960400191505060405180910390fd5b826123055750604080516020810190915260008152610b7a565b71ffffffffffffffffffffffffffffffffffff83116123ac57600082607085901b8161232d57fe5b0490506001600160e01b0381111561238c576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b6040518060200160405280826001600160e01b0316815250915050610b7a565b60006123c8846e01000000000000000000000000000085612850565b90506001600160e01b0381111561238c576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b516612725dd1d243ab6001600160e01b039091160490565b612449610e6d611e0f565b600f556010805463ffffffff19164263ffffffff16179055565b600061247f62989680610670633b9aca00611d58611d4f611a3b565b600554909150811015612495575060055461068d565b6005541561068d57600060055590565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03167f23b872dd000000000000000000000000000000000000000000000000000000001790526125189085906128f0565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b03167fa9059cbb000000000000000000000000000000000000000000000000000000001790526125899084906128f0565b505050565b600082820183811015611ed3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600d5460009061260b9063ffffffff640100000000820481169181169061258e16565b600b549091501580159061261f5750804210155b156126f257600454600a5460ff161561265957600b546004546126419161258e565b6004819055600c5411612654576000600b555b61267b565b600b5460045461266891612220565b6004819055600c541061267b576000600b555b600d805467ffffffff0000000019166401000000004263ffffffff1602179055600454600b54600a546040805185815260208101949094528381019290925260ff1615156060830152517fb923e581a0f83128e9e1d8297aa52b18d6744310476e0b54509c054cd7a93b2a916080908290030190a1505b50565b600081836127815760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561274657818101518382015260200161272e565b50505050905090810190601f1680156127735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161278d57fe5b0495945050505050565b600081848411156127e95760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561274657818101518382015260200161272e565b505050900390565b60008363ffffffff168363ffffffff16111582906127e95760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561274657818101518382015260200161272e565b600080600061285f86866129a1565b915091506000848061286d57fe5b868809905082811115612881576001820391505b80830392508482106128da576040805162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77000000000000604482015290519081900360640190fd5b6128e58383876129ce565b979650505050505050565b6060612945826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a3e9092919063ffffffff16565b8051909150156125895780806020019051602081101561296457600080fd5b50516125895760405162461bcd60e51b815260040180806020018281038252602a815260200180612ce5602a913960400191505060405180910390fd5b60008080600019848609905083850292508281039150828110156129c6576001820391505b509250929050565b600081810382168083816129de57fe5b0492508085816129ea57fe5b0494508081600003816129f957fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6060612a4d8484600085612a55565b949350505050565b6060612a6085612bc2565b612ab1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612af05780518252601f199092019160209182019101612ad1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612b52576040519150601f19603f3d011682016040523d82523d6000602084013e612b57565b606091505b50915091508115612b6b579150612a4d9050565b805115612b7b5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561274657818101518382015260200161272e565b3b151590565b60405180608001604052806000815260200160008152602001600063ffffffff168152602001600063ffffffff1681525090565b6040805160208101909152600081529056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77536c697070616765206c696d69743a206d6f7265207468616e206d617820707269636556657374696e67206d757374206265206c6f6e676572207468616e20333620686f7572735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212202b3fbad75d127160f2c8514edf6498d145fa7fce53fca9ade4ef7f27c5ce7a2564736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x241 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x844B5C7C GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xCF37A891 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xD7CCFB0B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE392A262 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE392A262 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xF5C2AB5B EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x5FB JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xD7CCFB0B EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xE0176DE8 EQ PUSH2 0x5CA JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xCF37A891 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xD4D863CE EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xD5025625 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xD7969060 EQ PUSH2 0x5BA JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xAE9832CF GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xC5332B7C GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC5332B7C EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xCD1234B3 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xCEA55F57 EQ PUSH2 0x4FC JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xAE9832CF EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xB4ABCCBA EQ PUSH2 0x47C JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x844B5C7C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x8DBDBE6D EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x904B3ECE EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x98FABD3A EQ PUSH2 0x43D JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x451EE4A1 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x5A96AC0A GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x759076E5 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x759076E5 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x77B81895 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x7927EBF8 EQ PUSH2 0x3DE JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x3C6 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x451EE4A1 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x4CF088D9 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x507930EC EQ PUSH2 0x398 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x1E321A0F GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x1E321A0F EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x1FEED31F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2F3F470A EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x3C4E6DA7 EQ PUSH2 0x324 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x16A4284 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x1B88EE8 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x505C8C9 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24E PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x680 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x739 JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x92E JUMP JUMPDEST PUSH2 0x310 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x334 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE AND PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x24E PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x290 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x290 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x17B3 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x24E PUSH2 0x19E4 JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND DUP5 DUP5 ADD MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1AF3 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x581 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP6 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x290 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x1E74 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x633 DUP4 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2710 DUP3 LT PUSH2 0x660 JUMPI DUP1 SWAP3 POP PUSH2 0x679 JUMP JUMPDEST PUSH2 0x676 PUSH2 0x2710 PUSH2 0x670 DUP4 DUP6 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 PUSH2 0x1EDA JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x798 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7A6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x808 JUMPI PUSH3 0x1FA40 DUP2 LT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CC1 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x816 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x87D JUMPI PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796F75742063616E6E6F742062652061626F766520312070657263656E74 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x88B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x8F2 JUMPI PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F206665652063616E6E6F7420657863656564207061796F757400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x900 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x910 JUMPI PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x91E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x92A JUMPI PUSH1 0x5 DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH2 0x2BC8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH5 0x100000000 SWAP1 DIV AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 PUSH2 0x997 DUP6 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 DUP2 LT PUSH2 0xA2C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE DUP6 MLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0x51C99F515C87B0D95BA97F616EDD182E8F161C4932EAC17C6FEFE9DAB58B77B1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 PUSH2 0xA23 DUP6 DUP6 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1F1C JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xB7A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xA43 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x670 SWAP1 DUP6 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xA67 DUP4 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x2220 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xABB PUSH2 0xAA2 DUP7 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH4 0xFFFFFFFF AND PUSH2 0x2262 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x2262 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP1 DUP3 SSTORE DUP7 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP7 DUP5 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP9 ADD MLOAD DUP8 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFF00000000 NOT SWAP4 SWAP1 SWAP8 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP2 SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP4 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP1 SWAP3 PUSH32 0x51C99F515C87B0D95BA97F616EDD182E8F161C4932EAC17C6FEFE9DAB58B77B1 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH2 0xB74 DUP7 DUP7 DUP4 PUSH2 0x1F1C JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH5 0x100000000 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C0F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 PUSH2 0x2BC8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP3 DUP5 ADD DUP4 SWAP1 MSTORE PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0xD5A SWAP2 TIMESTAMP DUP3 AND SWAP2 PUSH2 0x2220 AND JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF AND DUP1 ISZERO PUSH2 0xD85 JUMPI PUSH2 0xD7E DUP2 PUSH2 0x670 DUP5 PUSH2 0x2710 PUSH2 0x1E7A JUMP JUMPDEST SWAP4 POP PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C35 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE76 PUSH2 0xE6D PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7A PUSH7 0x2386F26FC10000 PUSH2 0x670 PUSH2 0xEAB DUP6 PUSH2 0xEA6 PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 ISZERO PUSH2 0xFAE JUMPI PUSH2 0xFA7 PUSH1 0x64 PUSH2 0x670 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32DA80A3 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFA1 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP PUSH2 0x68D JUMP JUMPDEST PUSH2 0xE76 PUSH1 0x64 PUSH2 0x670 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1023 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0xFA1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x10AE PUSH2 0x243E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xF SLOAD GT ISZERO PUSH2 0x1107 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782063617061636974792072656163686564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1111 PUSH2 0xEB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x111D PUSH2 0x2463 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 LT ISZERO PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C9E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF1821783 PUSH32 0x0 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1209 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x122E DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP PUSH3 0x989680 DUP2 LT ISZERO PUSH2 0x1288 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6E6420746F6F20736D616C6C000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1290 PUSH2 0x1D72 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6E6420746F6F206C61726765000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1304 PUSH2 0x2710 PUSH2 0x670 PUSH1 0x4 PUSH1 0x3 ADD SLOAD DUP6 PUSH2 0x1E7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x131C DUP3 PUSH2 0x1316 DUP7 DUP7 PUSH2 0x2220 JUMP JUMPDEST SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH2 0x1353 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP14 PUSH2 0x24A5 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xBC157AC100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0xBC157AC1 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 ISZERO PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP5 PUSH2 0x251E JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x155D SWAP1 DUP6 PUSH2 0x258E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x158F SWAP1 DUP7 PUSH2 0x258E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH4 0xFFFFFFFF TIMESTAMP DUP2 DUP2 AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP1 SLOAD DUP5 AND PUSH1 0x60 SWAP7 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE DUP7 MSTORE DUP3 SWAP1 KECCAK256 DUP8 MLOAD DUP2 SSTORE SWAP5 DUP8 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 DUP7 ADD MLOAD PUSH1 0x2 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 ADD MLOAD DUP4 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFF00000000 NOT SWAP5 DUP5 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP4 SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE SLOAD DUP9 SWAP3 PUSH2 0x162A SWAP3 SWAP1 SWAP2 DUP2 AND SWAP1 PUSH2 0x258E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 PUSH32 0x1FEC6DC81F140574BF43F6B1E420AE1DD47928B9D57DB8CBD7B8611063B85AE5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG4 PUSH2 0x1668 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x1670 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x1678 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x375B221F40939BFD8F49723A17CF7BC6D576EBF72EFE2CC3E991826F5B3F390A SWAP1 PUSH1 0x0 SWAP1 LOG4 PUSH2 0x16A9 PUSH2 0x25E8 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 ISZERO PUSH2 0x17AB JUMPI PUSH2 0xFA7 PUSH4 0x3B9ACA00 PUSH2 0x670 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32DA80A3 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x178B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFA1 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0xFA7 PUSH2 0x1A3B JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1836 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE SWAP5 ISZERO ISZERO DUP1 DUP7 MSTORE PUSH1 0x20 DUP7 ADD DUP6 SWAP1 MSTORE SWAP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE TIMESTAMP SWAP1 SWAP3 AND PUSH1 0x80 SWAP1 SWAP6 ADD DUP6 SWAP1 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xB SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SSTORE PUSH1 0xD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP2 OR PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x192E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19DC PUSH32 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH5 0x100000000 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x1AED PUSH8 0xDE0B6B3A7640000 PUSH2 0x670 PUSH2 0xEAB PUSH2 0x1AE7 PUSH4 0x3B9ACA00 PUSH2 0xFA1 PUSH2 0xE60 JUMP JUMPDEST DUP6 PUSH2 0x22A4 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD ISZERO PUSH2 0x1BA7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6E6473206D75737420626520696E697469616C697A65642066726F6D2030 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0xA0 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0x5 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP5 OR SWAP1 SSTORE PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP3 AND TIMESTAMP SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x92A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH4 0xFFFFFFFF AND DUP7 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5E PUSH3 0x989680 PUSH2 0x670 PUSH4 0x3B9ACA00 PUSH2 0x1D58 PUSH2 0x1D4F PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 PUSH2 0x258E JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x68D JUMPI POP PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE76 PUSH3 0x186A0 PUSH2 0x670 PUSH1 0x4 PUSH1 0x2 ADD SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1E2D SWAP1 PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 DUP2 AND SWAP1 PUSH2 0x2262 AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xF SLOAD SWAP2 SWAP3 POP PUSH2 0x1E52 SWAP2 PUSH4 0xFFFFFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x670 SWAP2 SWAP1 DUP1 DUP7 AND SWAP1 PUSH2 0x1E7A AND JUMP JUMPDEST SWAP2 POP PUSH1 0xF SLOAD DUP3 GT ISZERO PUSH2 0x1E64 JUMPI PUSH1 0xF SLOAD SWAP2 POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E89 JUMPI POP PUSH1 0x0 PUSH2 0xB7A JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1E96 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1ED3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C7D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x26F5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FCC JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2219 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2069 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x207F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7ACB7757 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x7ACB7757 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x216A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7ACB7757 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x7ACB7757 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2797 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x27F1 JUMP JUMPDEST PUSH2 0x22AC PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x22EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C57 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x2305 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0xB7A JUMP JUMPDEST PUSH18 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23AC JUMPI PUSH1 0x0 DUP3 PUSH1 0x70 DUP6 SWAP1 SHL DUP2 PUSH2 0x232D JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x238C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C8 DUP5 PUSH15 0x10000000000000000000000000000 DUP6 PUSH2 0x2850 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x238C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST MLOAD PUSH7 0x12725DD1D243AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND DIV SWAP1 JUMP JUMPDEST PUSH2 0x2449 PUSH2 0xE6D PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND TIMESTAMP PUSH4 0xFFFFFFFF AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F PUSH3 0x989680 PUSH2 0x670 PUSH4 0x3B9ACA00 PUSH2 0x1D58 PUSH2 0x1D4F PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x2495 JUMPI POP PUSH1 0x5 SLOAD PUSH2 0x68D JUMP JUMPDEST PUSH1 0x5 SLOAD ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 PUSH1 0x5 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2518 SWAP1 DUP6 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2589 SWAP1 DUP5 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1ED3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x260B SWAP1 PUSH4 0xFFFFFFFF PUSH5 0x100000000 DUP3 DIV DUP2 AND SWAP2 DUP2 AND SWAP1 PUSH2 0x258E AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x261F JUMPI POP DUP1 TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x26F2 JUMPI PUSH1 0x4 SLOAD PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2659 JUMPI PUSH1 0xB SLOAD PUSH1 0x4 SLOAD PUSH2 0x2641 SWAP2 PUSH2 0x258E JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0xC SLOAD GT PUSH2 0x2654 JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST PUSH2 0x267B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x4 SLOAD PUSH2 0x2668 SWAP2 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0xC SLOAD LT PUSH2 0x267B JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 TIMESTAMP PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH32 0xB923E581A0F83128E9E1D8297AA52B18D6744310476E0B54509C054CD7A93B2A SWAP2 PUSH1 0x80 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2773 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x278D JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x27E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x27E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x285F DUP7 DUP7 PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 DUP1 PUSH2 0x286D JUMPI INVALID JUMPDEST DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x2881 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST DUP1 DUP4 SUB SWAP3 POP DUP5 DUP3 LT PUSH2 0x28DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756C6C4D6174683A3A6D756C4469763A206F766572666C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x28E5 DUP4 DUP4 DUP8 PUSH2 0x29CE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2945 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A3E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2589 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD SWAP1 POP DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 SUB SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0x29C6 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB DUP3 AND DUP1 DUP4 DUP2 PUSH2 0x29DE JUMPI INVALID JUMPDEST DIV SWAP3 POP DUP1 DUP6 DUP2 PUSH2 0x29EA JUMPI INVALID JUMPDEST DIV SWAP5 POP DUP1 DUP2 PUSH1 0x0 SUB DUP2 PUSH2 0x29F9 JUMPI INVALID JUMPDEST PUSH1 0x2 DUP6 DUP2 SUB DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL SWAP6 DUP7 MUL SWAP1 SUB SWAP1 SWAP5 MUL SWAP4 DIV PUSH1 0x1 ADD SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 ADD MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2A4D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2A55 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2A60 DUP6 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x2AB1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2AF0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2B6B JUMPI SWAP2 POP PUSH2 0x2A4D SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B7B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272E JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x4669786564506F696E743A3A66 PUSH19 0x616374696F6E3A206469766973696F6E206279 KECCAK256 PUSH27 0x65726F536166654D6174683A206D756C7469706C69636174696F6E KECCAK256 PUSH16 0x766572666C6F77536C69707061676520 PUSH13 0x696D69743A206D6F7265207468 PUSH2 0x6E20 PUSH14 0x617820707269636556657374696E PUSH8 0x206D757374206265 KECCAK256 PUSH13 0x6F6E676572207468616E203336 KECCAK256 PUSH9 0x6F7572735361666545 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212202B3FBAD7 0x5D SLT PUSH18 0x60F2C8514EDF6498D145FA7FCE53FCA9ADE4 0xEF PUSH32 0x27C5CE7A2564736F6C6343000705003300000000000000000000000000000000 ",
							"sourceMap": "23498:17848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24382:34;;;:::i;:::-;;;;-1:-1:-1;;;;;24382:34:0;;;;;;;;;;;;;;40478:414;;;;;;;;;;;;;;;;-1:-1:-1;40478:414:0;-1:-1:-1;;;;;40478:414:0;;:::i;:::-;;;;;;;;;;;;;;;;755:87;;;:::i;969:151::-;;;:::i;:::-;;28292:875;;;;;;;;;;;;;;;;-1:-1:-1;28292:875:0;;;;;;;;;:::i;32838:1262::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;32838:1262:0;;;;;;;;;;:::i;24903:21::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;24312:29;;;:::i;24985:24::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:319;;;;;;;;;;;;;;;;-1:-1:-1;1126:319:0;-1:-1:-1;;;;;1126:319:0;;:::i;24774:22::-;;;:::i;39861:452::-;;;;;;;;;;;;;;;;-1:-1:-1;39861:452:0;-1:-1:-1;;;;;39861:452:0;;:::i;1451:214::-;;;:::i;24451:33::-;;;:::i;39224:103::-;;;:::i;24826:28::-;;;:::i;36752:300::-;;;;;;;;;;;;;;;;-1:-1:-1;36752:300:0;;:::i;37975:343::-;;;:::i;30350:2347::-;;;;;;;;;;;;;;;;-1:-1:-1;30350:2347:0;;;;;;;;;;;-1:-1:-1;;;;;30350:2347:0;;:::i;38813:318::-;;;:::i;24527:28::-;;;:::i;29354:361::-;;;;;;;;;;;;;;;;-1:-1:-1;29354:361:0;;;;;;;;;;;;;;;;;;;;;:::i;41062:282::-;;;;;;;;;;;;;;;;-1:-1:-1;41062:282:0;-1:-1:-1;;;;;41062:282:0;;:::i;24695:39::-;;;:::i;25049:40::-;;;;;;;;;;;;;;;;-1:-1:-1;25049:40:0;-1:-1:-1;;;;;25049:40:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38435:263;;;:::i;27338:673::-;;;;;;;;;;;;;;;;-1:-1:-1;27338:673:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;29841:301::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;29841:301:0;;;;;;;;;;:::i;24931:18::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24597:37;;;:::i;37149:263::-;;;:::i;36496:134::-;;;:::i;39423:284::-;;;:::i;25222:23::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25138:24;;;:::i;24382:34::-;;;:::o;40478:414::-;40571:22;40609:21;40633:28;40650:10;40633:16;:28::i;:::-;-1:-1:-1;;;;;40688:20:0;;40671:14;40688:20;;;:8;:20;;;;;:27;40609:52;;-1:-1:-1;40747:5:0;40730:22;;40726:160;;40785:6;40768:23;;40726:160;;;40839:36;40869:5;40839:25;:6;40850:13;40839:10;:25::i;:::-;:29;;:36::i;:::-;40822:53;;40726:160;40478:414;;;;;:::o;755:87::-;803:7;829:6;-1:-1:-1;;;;;829:6:0;755:87;;:::o;969:151::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:1:::1;1065:6:::0;;1049:35:::1;::::0;-1:-1:-1;;;;;1065:6:0;;::::1;::::0;1049:35:::1;::::0;1081:1;;1049:35:::1;1111:1;1094:19:::0;;-1:-1:-1;;;;;;1094:19:0::1;::::0;;969:151::o;28292:875::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28420:17:::1;28406:10;:31;;;;;;;;;28402:759;;;28488:6;28478;:16;;28470:65;;;;-1:-1:-1::0;;;28470:65:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28549:17:::0;:34;;-1:-1:-1;;28549:34:0::1;;::::0;::::1;;::::0;;28402:759:::1;;;28618:16;28604:10;:30;;;;;;;;;28600:561;;;28685:4;28675:6;:14;;28667:59;;;::::0;;-1:-1:-1;;;28667:59:0;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;28740:15:::0;:24;;;28600:561:::1;;;28799:13;28785:10;:27;;;;;;;;;28781:380;;;28863:5;28853:6;:15;;28845:56;;;::::0;;-1:-1:-1;;;28845:56:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;28915:9:::0;:18;;;28781:380:::1;;;28968:14;28954:10;:28;;;;;;;;;28950:211;;;29015:13:::0;:22;;;28950:211:::1;;;29072:18;29058:10;:32;;;;;;;;;29054:107;;;29123:18:::0;:27;;;29054:107:::1;28292:875:::0;;:::o;32838:1262::-;32921:7;32944:16;;:::i;:::-;-1:-1:-1;;;;;;32963:20:0;;;;;;:8;:20;;;;;;;;32944:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33086:28;32972:10;33086:16;:28::i;:::-;33062:52;;33146:5;33129:13;:22;33125:969;;-1:-1:-1;;;;;33205:20:0;;;;;;:8;:20;;;;;;;;33198:27;;;;;;;;;;;;;-1:-1:-1;;33198:27:0;;;33289:11;;33264:40;;;;;;;;;;;;;;;;;;;;;;;;;33343:44;33355:10;33367:6;33375:4;:11;;;33343;:44::i;:::-;33336:51;;;;;;33125:969;33530:11;;33513:14;;33530:41;;33565:5;;33530:30;;33546:13;33530:15;:30::i;:41::-;33513:58;;33650:292;;;;;;;;33681:23;33697:6;33681:4;:11;;;:15;;:23;;;;:::i;:::-;33650:292;;;;33913:4;:14;;;33650:292;;;;33868:15;33650:292;;;;;;33731:102;33771:44;33801:4;:13;;;33778:15;33771:29;;;;:44;;;;:::i;:::-;33731:4;:12;;;:18;;;;:102;;;;:::i;:::-;33650:292;;;;;;;-1:-1:-1;;;;;33627:20:0;;;;;;:8;:20;;;;;;;;;:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33627:315:0;;;;-1:-1:-1;;33627:315:0;;;;;;;;;;;;;;;;;;33962:61;;;;;;;;;;;;;;33627:20;;33962:61;;;;;;;;;34044:39;34056:10;34068:6;34076;34044:11;:39::i;:::-;34037:46;;;;;32838:1262;;;;;:::o;24903:21::-;;;-1:-1:-1;;;24903:21:0;;;;;:::o;24312:29::-;;;:::o;24985:24::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1126:319::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1271:23:0;::::1;1250:108;;;;-1:-1:-1::0;;;1250:108:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:6;::::0;;1373:34:::1;::::0;-1:-1:-1;;;;;1373:34:0;;::::1;::::0;1389:6;::::1;::::0;1373:34:::1;::::0;::::1;1417:9;:21:::0;;-1:-1:-1;;;;;;1417:21:0::1;-1:-1:-1::0;;;;;1417:21:0;;;::::1;::::0;;;::::1;::::0;;1126:319::o;24774:22::-;;;-1:-1:-1;;;;;24774:22:0;;:::o;39861:452::-;39952:22;39990:16;;:::i;:::-;-1:-1:-1;;;;;;40009:20:0;;;;;;:8;:20;;;;;;;;39990:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40009:20;40066:42;;40073:15;40066:27;;;;:42;:::i;:::-;40136:12;;;;40039:69;;-1:-1:-1;40118:30:0;;40163:11;;40159:148;;40207:40;40239:7;40207:27;:16;40228:5;40207:20;:27::i;:40::-;40190:57;;40159:148;;;40295:1;40278:18;;40159:148;39861:452;;;;;;:::o;1451:214::-;1533:9;;-1:-1:-1;;;;;1533:9:0;1519:10;:23;1511:70;;;;-1:-1:-1;;;1511:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:9;;;1612:6;;1596:34;;-1:-1:-1;;;;;1620:9:0;;;;1612:6;;;;1596:34;;;1649:9;;;1640:18;;-1:-1:-1;;;;;;1640:18:0;-1:-1:-1;;;;;1649:9:0;;;1640:18;;;;;;1451:214::o;24451:33::-;;;:::o;39224:103::-;39268:7;39294:26;39308:11;:9;:11::i;:::-;39294:9;;;:13;:26::i;:::-;39287:33;;39224:103;:::o;24826:28::-;;;-1:-1:-1;;;;;24826:28:0;;:::o;36752:300::-;36808:7;36947:98;37027:4;36947:58;:40;36967:6;36975:11;:9;:11::i;:::-;36947:19;:40::i;:::-;:56;:58::i;37975:343::-;38022:14;38052:15;38048:264;;;38092:111;38199:3;38092:85;38141:14;-1:-1:-1;;;;;38125:40:0;;38166:9;38125:51;;;;;;;;;;;;;-1:-1:-1;;;;;38125:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38125:51:0;38092:11;:9;:11::i;:::-;:32;;:85::i;:111::-;38083:120;;38048:264;;;38243:58;38297:3;38243:49;38270:9;-1:-1:-1;;;;;38263:26:0;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38263:28:0;38259:32;;:2;:32;38243:11;:9;:11::i;30350:2347::-;30471:7;-1:-1:-1;;;;;30498:24:0;;30490:52;;;;;-1:-1:-1;;;30490:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;30553:11;:9;:11::i;:::-;30595:13;;30582:9;;:26;;30574:59;;;;;-1:-1:-1;;;30574:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;30644:18;30665:16;:14;:16::i;:::-;30644:37;;30714:19;30736:12;:10;:12::i;:::-;30714:34;;30793:11;30780:9;:24;;30759:106;;;;-1:-1:-1;;;30759:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30899:13;30925:8;-1:-1:-1;;;;;30915:30:0;;30946:9;30957:7;30915:50;;;;;;;;;;;;;-1:-1:-1;;;;;30915:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30915:50:0;;-1:-1:-1;31005:14:0;31022:16;30915:50;31022:9;:16::i;:::-;31005:33;;31099:8;31089:6;:18;;31081:45;;;;;-1:-1:-1;;;31081:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;31202:11;:9;:11::i;:::-;31192:6;:21;;31184:48;;;;;-1:-1:-1;;;31184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;31325:11;31339:32;31365:5;31339:21;31350:5;:9;;;31339:6;:10;;:21;;;;:::i;:32::-;31325:46;-1:-1:-1;31381:14:0;31398:26;31325:46;31398:17;:5;31408:6;31398:9;:17::i;:::-;:21;;:26::i;:::-;31381:43;-1:-1:-1;31599:70:0;-1:-1:-1;;;;;31606:9:0;31599:34;31634:10;31654:4;31661:7;31599:34;:70::i;:::-;31686:9;-1:-1:-1;;;;;31679:25:0;;31713:8;31724:7;31679:53;;;;;;;;;;;;;-1:-1:-1;;;;;31679:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;31742:55:0;;;;;;;;;;;;-1:-1:-1;;;;;31779:9:0;31742:55;;;;;;;;;;;;;;31752:8;31742:27;;;;;;:55;;;;;31679:53;;31742:55;;;;;;;;-1:-1:-1;31742:27:0;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;31812:8:0;;31808:115;;31877:35;-1:-1:-1;;;;;31884:4:0;31877:25;31903:3;31908;31877:25;:35::i;:::-;31980:9;;:20;;31994:5;31980:13;:20::i;:::-;31968:9;:32;32149:199;;;;;;;;-1:-1:-1;;;;;32176:20:0;;-1:-1:-1;32176:20:0;;;:8;:20;;;;;;:27;32149:199;;32176:39;;32208:6;32176:31;:39::i;:::-;32149:199;;;;;;;;;;32286:15;32149:199;;;;;;;;;;;32238:17;;;;;32149:199;;;;;-1:-1:-1;;;;;32126:20:0;;-1:-1:-1;32126:20:0;;;:8;:20;;;;;:222;;;;;;;;32238:17;32126:222;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;32126:222:0;;;-1:-1:-1;;32126:222:0;;;;;;;;;;;;;;;;;;32488:17;32327:10;;32468:38;;32286:15;;32488:17;;;32468:19;:38;:::i;:::-;32402:138;;;;;;;;32448:6;;32402:138;;;;;;;;;;32604:11;:9;:11::i;:::-;32590:12;:10;:12::i;:::-;32572:16;:14;:16::i;:::-;32555:61;;;;;;;32627:8;:6;:8::i;:::-;-1:-1:-1;32684:6:0;;30350:2347;-1:-1:-1;;;;;;;;30350:2347:0:o;38813:318::-;38869:7;38892:15;38888:237;;;38946:119;39061:3;38946:89;38999:14;-1:-1:-1;;;;;38983:40:0;;39024:9;38983:51;;;;;;;;;;;;;-1:-1:-1;;;;;38983:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38983:51:0;38946:11;:9;:11::i;38888:237::-;39103:11;:9;:11::i;24527:28::-;;;:::o;29354:361::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29527:181:::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;29681:15:::1;29527:181:::0;;::::1;::::0;;;;;;;29514:10:::1;:194:::0;;-1:-1:-1;;29514:194:0::1;::::0;;::::1;::::0;;;;;;;;;;;;-1:-1:-1;;29514:194:0::1;::::0;;::::1;-1:-1:-1::0;;29514:194:0::1;::::0;;;::::1;::::0;;;::::1;::::0;;29354:361::o;41062:282::-;41122:4;41156;-1:-1:-1;;;;;41146:14:0;:6;-1:-1:-1;;;;;41146:14:0;;;41138:23;;;;;;41189:9;-1:-1:-1;;;;;41179:19:0;:6;-1:-1:-1;;;;;41179:19:0;;;41171:28;;;;;;41209:107;41250:3;41274:6;-1:-1:-1;;;;;41267:24:0;;41300:4;41267:39;;;;;;;;;;;;;-1:-1:-1;;;;;41267:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41267:39:0;-1:-1:-1;;;;;41209:27:0;;;:107;:27;:107::i;:::-;-1:-1:-1;41333:4:0;41062:282;;;:::o;24695:39::-;;;:::o;25049:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;38435:263::-;38477:18;38507:14;38531:4;-1:-1:-1;;;;;38524:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38524:26:0;;-1:-1:-1;38573:118:0;38686:4;38573:95;:64;38606:22;38624:3;38606:13;:11;:13::i;:22::-;38630:6;38573:32;:64::i;:118::-;38560:131;;38435:263;;:::o;27338:673::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27611:5:::1;:21:::0;:26;27603:71:::1;;;::::0;;-1:-1:-1;;;27603:71:0;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;27692:233;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;27684:5:::1;:241:::0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27684:241:0;;::::1;::::0;;::::1;::::0;;27935:9:::1;:24:::0;27969:9:::1;:35:::0;;;;::::1;27988:15;27969:35:::0;;::::1;;::::0;;27338:673::o;29841:301::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29931:22:0;::::1;29923:31;;;::::0;::::1;;29968:7;29964:172;;;29991:9;:16:::0;;-1:-1:-1;;;;;;;29991:16:0;;::::1;;-1:-1:-1::0;;;;;;30021:24:0::1;-1:-1:-1::0;;;;;30021:24:0;::::1;;::::0;;29964:172:::1;;;30076:9;:17:::0;;-1:-1:-1;;;;30076:17:0::1;::::0;;30107:7:::1;:18:::0;;-1:-1:-1;;;;;30107:18:0;::::1;-1:-1:-1::0;;;;;;30107:18:0;;::::1;;::::0;;29841:301;;:::o;24931:18::-;;;;;;;;;;;;;;;;:::o;24597:37::-;;;:::o;37149:263::-;37191:14;37226:85;37298:3;37226:54;37269:10;37226:38;37252:11;:9;:11::i;:::-;37226:5;:21;;:25;:38::i;:::-;:42;;:54::i;:85::-;37334:18;;37217:94;;-1:-1:-1;37325:27:0;;37321:85;;;-1:-1:-1;37377:18:0;;37149:263;:::o;36496:134::-;36538:7;36564:59;36616:6;36564:47;36595:5;:15;;;36571:4;-1:-1:-1;;;;;36564:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36564:26:0;;:30;:47::i;39423:284::-;39544:9;;39465:14;;;;39514:40;;39544:9;39521:15;39514:29;;;39544:9;;;39514:29;:40;:::i;:::-;39606:17;;39573:9;;39491:63;;-1:-1:-1;39573:51:0;;39606:17;;;;;39573:28;;:9;:28;;;;:13;:28;:::i;:51::-;39564:60;;39647:9;;39638:6;:18;39634:67;;;39681:9;;39672:18;;39634:67;39423:284;;:::o;25222:23::-;;;;;;:::o;25138:24::-;;;;:::o;2599:241::-;2657:7;2680:6;2676:45;;-1:-1:-1;2709:1:0;2702:8;;2676:45;2743:5;;;2747:1;2743;:5;:1;2766:5;;;;;:10;2758:56;;;;-1:-1:-1;;;2758:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2832:1;2599:241;-1:-1:-1;;;2599:241:0:o;2846:130::-;2904:7;2930:39;2934:1;2937;2930:39;;;;;;;;;;;;;;;;;:3;:39::i;34310:728::-;34429:7;34453:6;34448:560;;34528:4;-1:-1:-1;;;;;34521:21:0;;34543:10;34555:7;34521:42;;;;;;;;;;;;;-1:-1:-1;;;;;34521:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34448:560:0;;-1:-1:-1;34448:560:0;;34651:9;;-1:-1:-1;;;34651:9:0;;;;34647:351;;;34747:13;;34726:44;;;-1:-1:-1;;;34726:44:0;;-1:-1:-1;;;;;34747:13:0;;;34726:44;;;;;;;;;;;;34733:4;34726:20;;;;;;:44;;;;;;;;;;;;;;;-1:-1:-1;34726:20:0;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34803:13:0;;34788:56;;;-1:-1:-1;;;34788:56:0;;;;;;;;-1:-1:-1;;;;;34788:56:0;;;;;;;;;34803:13;;;;;34788:35;;:56;;;;;34803:13;;34788:56;;;;;;;34803:13;;34788:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34647:351;;;34904:7;;34883:38;;;-1:-1:-1;;;34883:38:0;;-1:-1:-1;;;;;34904:7:0;;;34883:38;;;;;;;;;;;;34890:4;34883:20;;;;;;:38;;;;;;;;;;;;;;;-1:-1:-1;34883:20:0;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34948:7:0;;34939:44;;;-1:-1:-1;;;34939:44:0;;;;;;;;-1:-1:-1;;;;;34939:44:0;;;;;;;;;34948:7;;;;;34939:23;;:44;;;;;34883:38;;34939:44;;;;;;;34948:7;;34939:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34647:351:0;-1:-1:-1;35024:7:0;34310:728;-1:-1:-1;;34310:728:0:o;1874:134::-;1932:7;1958:43;1962:1;1965;1958:43;;;;;;;;;;;;;;;;;:3;:43::i;2237:135::-;2295:6;2320:45;2326:1;2329;2320:45;;;;;;;;;;;;;;;;;:5;:45::i;22349:734::-;22454:16;;:::i;:::-;22508:1;22494:11;:15;22486:66;;;;-1:-1:-1;;;22486:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22566:14;22562:50;;-1:-1:-1;22589:23:0;;;;;;;;;-1:-1:-1;22589:23:0;;22582:30;;22562:50;22627:24;;;22623:454;;22667:14;22712:11;21748:3;22685:23;;;22712:11;22684:39;;;;;;-1:-1:-1;;;;;;22745:21:0;;;22737:64;;;;;-1:-1:-1;;;22737:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;22822:26;;;;;;;;22840:6;-1:-1:-1;;;;;22822:26:0;;;;22815:33;;;;;22623:454;22879:14;22896:45;22912:9;21789:31;22929:11;22896:15;:45::i;:::-;22879:62;-1:-1:-1;;;;;;22963:21:0;;;22955:64;;;;;-1:-1:-1;;;22955:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;22176:167;22309:7;22320:16;-1:-1:-1;;;;;22301:16:0;;;:35;;22176:167::o;36235:130::-;36287:26;36301:11;:9;:11::i;36287:26::-;36275:9;:38;36323:9;:35;;-1:-1:-1;;36323:35:0;36342:15;36323:35;;;;;36235:130::o;37533:343::-;37573:14;37608:85;37680:3;37608:54;37651:10;37608:38;37634:11;:9;:11::i;37608:85::-;37716:18;;37599:94;;-1:-1:-1;37707:27:0;;37703:167;;;-1:-1:-1;37759:18:0;;37703:167;;;37798:18;;:23;37794:76;;37858:1;37837:18;:22;37533:343;:::o;18370:275::-;18560:68;;;-1:-1:-1;;;;;18560:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18560:68:0;18583:27;18560:68;;;18508:130;;18541:5;;18508:19;:130::i;:::-;18370:275;;;;:::o;18125:239::-;18289:58;;;-1:-1:-1;;;;;18289:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18289:58:0;18312:23;18289:58;;;18237:120;;18270:5;;18237:19;:120::i;:::-;18125:239;;;:::o;1692:176::-;1750:7;1781:5;;;1804:6;;;;1796:46;;;;;-1:-1:-1;;;1796:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;35125:1054;35210:17;;35162:21;;35186:42;;35210:17;35186:19;;;;;;35210:17;;;35186:23;:42;:::i;:::-;35242:15;;35162:66;;-1:-1:-1;35242:20:0;;;;:56;;;35285:13;35266:15;:32;;35242:56;35238:935;;;35332:5;:21;35371:10;:14;;;35367:550;;;35476:15;;35429:5;:21;:80;;:25;:80::i;:::-;35405:5;:104;;;35556:17;;-1:-1:-1;35527:108:0;;35615:1;35597:15;:19;35527:108;35367:550;;;35744:15;;35697:5;:21;:80;;:25;:80::i;:::-;35673:5;:104;;;35824:17;;-1:-1:-1;35795:108:0;;35883:1;35865:15;:19;35795:108;35930:19;:45;;-1:-1:-1;;35930:45:0;;35959:15;35930:45;;;;;;:19;36062:21;36101:15;;35930:10;36134:14;35994:168;;;;;;;;;;;;;;;;;;;;36134:14;;35994:168;;;;;;;;;;;;;;;;;35238:935;;35125:1054;:::o;2982:215::-;3098:7;3132:12;3125:5;3117:28;;;;-1:-1:-1;;;3117:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:9;3171:1;3167;:5;;;;;;;2982:215;-1:-1:-1;;;;;2982:215:0:o;2014:217::-;2130:7;2165:12;2157:6;;;;2149:29;;;;-1:-1:-1;;;2149:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2200:5:0;;;2014:217::o;2378:215::-;2494:6;2525:1;2520:6;;:1;:6;;;;2528:12;2512:29;;;;;-1:-1:-1;;;2512:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21247:336;21349:7;21369:9;21380;21393:13;21401:1;21404;21393:7;:13::i;:::-;21368:38;;;;21416:10;21442:1;21429:15;;;;;21439:1;21436;21429:15;21416:28;;21463:1;21458:2;:6;21454:18;;;21471:1;21466:6;;;;21454:18;21487:2;21482:7;;;;21511:1;21507;:5;21499:44;;;;;-1:-1:-1;;;21499:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;21560:16;21568:1;21571;21574;21560:7;:16::i;:::-;21553:23;21247:336;-1:-1:-1;;;;;;;21247:336:0:o;20008:504::-;20088:23;20114:103;20155:4;20114:103;;;;;;;;;;;;;;;;;20122:5;-1:-1:-1;;;;;20114:27:0;;;:103;;;;;:::i;:::-;20231:17;;20088:129;;-1:-1:-1;20231:21:0;20227:279;;20400:10;20389:30;;;;;;;;;;;;;;;-1:-1:-1;20389:30:0;20364:131;;;;-1:-1:-1;;;20364:131:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20539:233;20624:9;;;-1:-1:-1;;20683:1:0;20680;20673:25;20660:38;;20716:1;20712;:5;20708:9;;20736:1;20731:2;:6;20727:10;;20756:1;20751:2;:6;20747:18;;;20764:1;20759:6;;;;20747:18;20539:233;;;;;;:::o;20778:463::-;20880:7;20918:2;;;20914:6;;;20919:1;20914:6;20930:9;;;;;;;20954:4;20949:9;;;;;;;;;20988:4;20980;20979:5;;20978:14;;;;;21035:1;:9;;;21063:5;;;21059:9;;21054:14;21087:5;;;21083:9;;21078:14;21111:5;;;21107:9;;21102:14;21135:5;;;21131:9;;21126:14;21159:5;;;21155:9;;21150:14;21183:5;;;21179:9;;21174:14;21207:5;;;21203:9;;21198:14;;;20978;;20995:1;20978:18;20973:24;;;;20968:29;;;;21229:5;;20778:463;-1:-1:-1;;20778:463:0:o;4796:224::-;4929:12;4960:53;4983:6;4991:4;4997:1;5000:12;4960:22;:53::i;:::-;4953:60;4796:224;-1:-1:-1;;;;4796:224:0:o;5997:1016::-;6165:12;6197:18;6208:6;6197:10;:18::i;:::-;6189:60;;;;;-1:-1:-1;;;6189:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6320:12;6334:23;6361:6;-1:-1:-1;;;;;6361:11:0;6380:8;6403:4;6361:56;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6361:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6319:98;;;;6431:7;6427:580;;;6461:10;-1:-1:-1;6454:17:0;;-1:-1:-1;6454:17:0;6427:580;6572:17;;:21;6568:429;;6830:10;6824:17;6890:15;6877:10;6873:2;6869:19;6862:44;6779:145;6962:20;;-1:-1:-1;;;6962:20:0;;;;;;;;;;;;;;;;;6969:12;;6962:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3882:246;4067:20;4113:8;;;3882:246::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2317600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Bash()": "infinite",
								"DAO()": "infinite",
								"adjustment()": "3596",
								"bondCalculator()": "infinite",
								"bondInfo(address)": "2944",
								"bondPrice()": "infinite",
								"bondPriceInUSD()": "infinite",
								"currentDebt()": "infinite",
								"debtDecay()": "infinite",
								"debtRatio()": "infinite",
								"deposit(uint256,uint256,address)": "infinite",
								"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)": "163865",
								"isLiquidityBond()": "infinite",
								"lastDecay()": "1101",
								"maxPayout()": "infinite",
								"payoutFor(uint256)": "infinite",
								"pendingPayoutFor(address)": "infinite",
								"percentVestedFor(address)": "infinite",
								"policy()": "1129",
								"principle()": "infinite",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"recoverLostToken(address)": "infinite",
								"redeem(address,bool)": "infinite",
								"renounceManagement()": "24278",
								"setAdjustment(bool,uint256,uint256,uint32)": "83013",
								"setBondTerms(uint8,uint256)": "infinite",
								"setStaking(address,bool)": "42875",
								"staking()": "1127",
								"stakingHelper()": "1126",
								"standardizedDebtRatio()": "infinite",
								"terms()": "5216",
								"totalDebt()": "1108",
								"treasury()": "infinite",
								"useHelper()": "1117"
							},
							"internal": {
								"_bondPrice()": "infinite",
								"adjust()": "infinite",
								"decayDebt()": "infinite",
								"stakeOrSend(address,bool,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 673,
									"end": 679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 673,
									"end": 692,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 707,
									"end": 742,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 707,
									"end": 742,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26447,
									"end": 27048,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 707,
									"end": 742,
									"name": "PUSH",
									"source": 0,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 707,
									"end": 742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 679,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 673,
									"end": 679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 707,
									"end": 742,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 26632,
									"end": 26651,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 26632,
									"end": 26651,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26624,
									"end": 26652,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26624,
									"end": 26652,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26624,
									"end": 26652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26624,
									"end": 26652,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26624,
									"end": 26652,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26624,
									"end": 26652,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26624,
									"end": 26652,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 26662,
									"end": 26674,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 26662,
									"end": 26674,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 26662,
									"end": 26674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26662,
									"end": 26674,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26662,
									"end": 26674,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26662,
									"end": 26674,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26662,
									"end": 26674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 26692,
									"end": 26716,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 26692,
									"end": 26716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26684,
									"end": 26717,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 26684,
									"end": 26717,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26684,
									"end": 26717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26684,
									"end": 26717,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26684,
									"end": 26717,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26684,
									"end": 26717,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 26684,
									"end": 26717,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 26727,
									"end": 26749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 26767,
									"end": 26790,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26767,
									"end": 26790,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26759,
									"end": 26791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 26759,
									"end": 26791,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26759,
									"end": 26791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26759,
									"end": 26791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26759,
									"end": 26791,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26759,
									"end": 26791,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 26759,
									"end": 26791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 26801,
									"end": 26821,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 26801,
									"end": 26821,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 26801,
									"end": 26821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26801,
									"end": 26821,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26801,
									"end": 26821,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26801,
									"end": 26821,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 26801,
									"end": 26821,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 26839,
									"end": 26857,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26839,
									"end": 26857,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26831,
									"end": 26858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 26831,
									"end": 26858,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26831,
									"end": 26858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26831,
									"end": 26858,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26831,
									"end": 26858,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26831,
									"end": 26858,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 26831,
									"end": 26858,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 26868,
									"end": 26878,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 26950,
									"end": 26982,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27011,
									"end": 27040,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27011,
									"end": 27040,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26992,
									"end": 27041,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 26992,
									"end": 27041,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26992,
									"end": 27041,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 26992,
									"end": 27041,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2302"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2300"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2298"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2296"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2294"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2292"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23498,
									"end": 41346,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b3fbad75d127160f2c8514edf6498d145fa7fce53fca9ade4ef7f27c5ce7a2564736f6c63430007050033",
									".code": [
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "844B5C7C"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "CF37A891"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "D7CCFB0B"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "E392A262"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "E392A262"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "F5C2AB5B"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "FC7B9C18"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "D7CCFB0B"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "E0176DE8"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "CF37A891"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "D4D863CE"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "D5025625"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "D7969060"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "AE9832CF"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "C5332B7C"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "C5332B7C"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "CD1234B3"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "CEA55F57"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "AE9832CF"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "B4ABCCBA"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "844B5C7C"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "8DBDBE6D"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "904B3ECE"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "98FABD3A"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "451EE4A1"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "5A96AC0A"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "759076E5"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "759076E5"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "77B81895"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "7927EBF8"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "5A96AC0A"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "451EE4A1"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "46F68EE9"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "4CF088D9"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "507930EC"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "1E321A0F"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "1E321A0F"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "1FEED31F"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "2F3F470A"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "3C4E6DA7"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "16A4284"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "1B88EE8"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "505C8C9"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "89208D8"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 41346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37975,
											"end": 38318,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37975,
											"end": 38318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37975,
											"end": 38318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 37975,
											"end": 38318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37975,
											"end": 38318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38813,
											"end": 39131,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 38813,
											"end": 39131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38813,
											"end": 39131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 38813,
											"end": 39131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36496,
											"end": 36630,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 36496,
											"end": 36630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36496,
											"end": 36630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 36496,
											"end": 36630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 36496,
											"end": 36630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24416,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40571,
											"end": 40593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40609,
											"end": 40630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40633,
											"end": 40661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 40650,
											"end": 40660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40633,
											"end": 40649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 40633,
											"end": 40661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40633,
											"end": 40661,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 40633,
											"end": 40661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40688,
											"end": 40696,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40688,
											"end": 40708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40688,
											"end": 40715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40609,
											"end": 40661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40609,
											"end": 40661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40747,
											"end": 40752,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 40730,
											"end": 40752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40730,
											"end": 40752,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40785,
											"end": 40791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40768,
											"end": 40791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40768,
											"end": 40791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40839,
											"end": 40875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40869,
											"end": 40874,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 40839,
											"end": 40864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 40839,
											"end": 40845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40850,
											"end": 40863,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40839,
											"end": 40849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 40839,
											"end": 40864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40839,
											"end": 40864,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 40839,
											"end": 40864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40839,
											"end": 40868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40839,
											"end": 40868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 40839,
											"end": 40875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40839,
											"end": 40875,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40839,
											"end": 40875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40822,
											"end": 40875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40822,
											"end": 40875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 40726,
											"end": 40886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40478,
											"end": 40892,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 829,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28420,
											"end": 28437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28406,
											"end": 28416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28402,
											"end": 29161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28402,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28402,
											"end": 29161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28488,
											"end": 28494,
											"name": "PUSH",
											"source": 0,
											"value": "1FA40"
										},
										{
											"begin": 28478,
											"end": 28484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28478,
											"end": 28494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28478,
											"end": 28494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH data",
											"source": 0,
											"value": "9BF0496B18F4DB662847E65668D0AE3D4D7F5EBC115D137B3B0990AE2896F44E"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 28470,
											"end": 28535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28566,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28402,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28402,
											"end": 29161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28402,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28402,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28618,
											"end": 28634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28604,
											"end": 28614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28600,
											"end": 29161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28600,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28600,
											"end": 29161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28685,
											"end": 28689,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 28675,
											"end": 28681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28689,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH",
											"source": 0,
											"value": "5061796F75742063616E6E6F742062652061626F766520312070657263656E74"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28667,
											"end": 28726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28755,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28740,
											"end": 28764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28764,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28600,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28600,
											"end": 29161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28600,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28600,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28799,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28785,
											"end": 28795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28785,
											"end": 28812,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 29161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28781,
											"end": 29161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28863,
											"end": 28868,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 28853,
											"end": 28859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28853,
											"end": 28868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28853,
											"end": 28868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "44414F206665652063616E6E6F7420657863656564207061796F757400000000"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 28845,
											"end": 28901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28924,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28915,
											"end": 28933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28933,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28781,
											"end": 29161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28781,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28968,
											"end": 28982,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28954,
											"end": 28964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28954,
											"end": 28982,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28950,
											"end": 29161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28950,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28950,
											"end": 29161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29015,
											"end": 29028,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29015,
											"end": 29037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29015,
											"end": 29037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29015,
											"end": 29037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28950,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28950,
											"end": 29161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28950,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28950,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29072,
											"end": 29090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29058,
											"end": 29068,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29058,
											"end": 29090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 29054,
											"end": 29161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29123,
											"end": 29141,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29123,
											"end": 29150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29123,
											"end": 29150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29123,
											"end": 29150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29161,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 29054,
											"end": 29161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28292,
											"end": 29167,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32921,
											"end": 32928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32944,
											"end": 32960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 32944,
											"end": 32960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 32944,
											"end": 32960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32944,
											"end": 32960,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 32944,
											"end": 32960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32971,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32963,
											"end": 32983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32944,
											"end": 32983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33086,
											"end": 33114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 32972,
											"end": 32982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33086,
											"end": 33102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 33086,
											"end": 33114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33086,
											"end": 33114,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 33086,
											"end": 33114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33146,
											"end": 33151,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 33129,
											"end": 33142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33129,
											"end": 33151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33125,
											"end": 34094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33125,
											"end": 34094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33213,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33205,
											"end": 33225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33198,
											"end": 33225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33289,
											"end": 33300,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33289,
											"end": 33300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "PUSH",
											"source": 0,
											"value": "51C99F515C87B0D95BA97F616EDD182E8F161C4932EAC17C6FEFE9DAB58B77B1"
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33304,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33355,
											"end": 33365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33373,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33375,
											"end": 33379,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33375,
											"end": 33386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33375,
											"end": 33386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33375,
											"end": 33386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33343,
											"end": 33387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33343,
											"end": 33387,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33343,
											"end": 33387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33387,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33336,
											"end": 33387,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33125,
											"end": 34094,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33125,
											"end": 34094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33530,
											"end": 33541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33530,
											"end": 33541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33513,
											"end": 33527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33513,
											"end": 33527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33530,
											"end": 33571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33530,
											"end": 33571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33565,
											"end": 33570,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 33565,
											"end": 33570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33530,
											"end": 33560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33530,
											"end": 33560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33546,
											"end": 33559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33530,
											"end": 33545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 33530,
											"end": 33560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33530,
											"end": 33571,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33530,
											"end": 33571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33513,
											"end": 33571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33513,
											"end": 33571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33697,
											"end": 33703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33685,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33681,
											"end": 33692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 33681,
											"end": 33696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33681,
											"end": 33704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33913,
											"end": 33917,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33913,
											"end": 33927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33913,
											"end": 33927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33913,
											"end": 33927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33868,
											"end": 33883,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33801,
											"end": 33805,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33801,
											"end": 33814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33801,
											"end": 33814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33801,
											"end": 33814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33793,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33771,
											"end": 33800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33771,
											"end": 33800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33771,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33735,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33731,
											"end": 33743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33731,
											"end": 33749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33731,
											"end": 33749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33731,
											"end": 33833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33650,
											"end": 33942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33635,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33647,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "PUSH",
											"source": 0,
											"value": "51C99F515C87B0D95BA97F616EDD182E8F161C4932EAC17C6FEFE9DAB58B77B1"
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 34023,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 34044,
											"end": 34083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34056,
											"end": 34066,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34074,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34044,
											"end": 34055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 34044,
											"end": 34083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34044,
											"end": 34083,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34044,
											"end": 34083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34083,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 34100,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24312,
											"end": 24341,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 25009,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39952,
											"end": 39974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39990,
											"end": 40006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 39990,
											"end": 40006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 39990,
											"end": 40006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39990,
											"end": 40006,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 39990,
											"end": 40006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40017,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 40029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40066,
											"end": 40108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 40066,
											"end": 40108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40073,
											"end": 40088,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 40066,
											"end": 40093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40066,
											"end": 40093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40066,
											"end": 40093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40066,
											"end": 40093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40066,
											"end": 40108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40066,
											"end": 40108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40066,
											"end": 40108,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 40066,
											"end": 40108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40136,
											"end": 40148,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40136,
											"end": 40148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40136,
											"end": 40148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40136,
											"end": 40148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40039,
											"end": 40108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40039,
											"end": 40108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40118,
											"end": 40148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40118,
											"end": 40148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 40239,
											"end": 40246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 40207,
											"end": 40223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40228,
											"end": 40233,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 40207,
											"end": 40227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 40207,
											"end": 40234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40207,
											"end": 40247,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 40207,
											"end": 40247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40247,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40295,
											"end": 40296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40278,
											"end": 40296,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40278,
											"end": 40296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 40159,
											"end": 40307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39861,
											"end": 40313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1542,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH data",
											"source": 0,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2296"
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24451,
											"end": 24484,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39268,
											"end": 39275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39294,
											"end": 39320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 39308,
											"end": 39319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 39308,
											"end": 39317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 39308,
											"end": 39319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39308,
											"end": 39319,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 39308,
											"end": 39319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39303,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 39294,
											"end": 39303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 39294,
											"end": 39320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39294,
											"end": 39320,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 39294,
											"end": 39320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39287,
											"end": 39320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39287,
											"end": 39320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39327,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24826,
											"end": 24854,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 36752,
											"end": 37052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36808,
											"end": 36815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36947,
											"end": 37045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 37027,
											"end": 37031,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 36947,
											"end": 37005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 36947,
											"end": 36987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 36967,
											"end": 36973,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36975,
											"end": 36986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 36975,
											"end": 36984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 36975,
											"end": 36986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36975,
											"end": 36986,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 36975,
											"end": 36986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36947,
											"end": 36966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 36947,
											"end": 36987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36947,
											"end": 36987,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 36947,
											"end": 36987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36947,
											"end": 37003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 36947,
											"end": 37005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37975,
											"end": 38318,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37975,
											"end": 38318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38022,
											"end": 38036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38052,
											"end": 38067,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2300"
										},
										{
											"begin": 38048,
											"end": 38312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38048,
											"end": 38312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 38048,
											"end": 38312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38092,
											"end": 38203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 38199,
											"end": 38202,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38092,
											"end": 38177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 38141,
											"end": 38155,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38125,
											"end": 38165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38165,
											"name": "PUSH",
											"source": 0,
											"value": "32DA80A3"
										},
										{
											"begin": 38166,
											"end": 38175,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38125,
											"end": 38176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38092,
											"end": 38103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38092,
											"end": 38101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 38092,
											"end": 38103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38092,
											"end": 38103,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38092,
											"end": 38103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38092,
											"end": 38124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38092,
											"end": 38124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 38092,
											"end": 38177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38092,
											"end": 38203,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 38092,
											"end": 38203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38083,
											"end": 38203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38083,
											"end": 38203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38048,
											"end": 38312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 38048,
											"end": 38312,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38048,
											"end": 38312,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 38048,
											"end": 38312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38243,
											"end": 38301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 38297,
											"end": 38300,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38243,
											"end": 38292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 38270,
											"end": 38279,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38263,
											"end": 38289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38289,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38263,
											"end": 38291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38259,
											"end": 38291,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38259,
											"end": 38291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38259,
											"end": 38261,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 38259,
											"end": 38291,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38243,
											"end": 38254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38243,
											"end": 38252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 38243,
											"end": 38254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30471,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 30490,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30553,
											"end": 30564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 30553,
											"end": 30562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 30553,
											"end": 30564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30553,
											"end": 30564,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 30553,
											"end": 30564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30608,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30595,
											"end": 30608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30591,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 30582,
											"end": 30591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30608,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "4D61782063617061636974792072656163686564000000000000000000000000"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 30574,
											"end": 30633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30644,
											"end": 30662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30665,
											"end": 30681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 30665,
											"end": 30679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30665,
											"end": 30681,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30665,
											"end": 30681,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 30665,
											"end": 30681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30644,
											"end": 30681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30644,
											"end": 30681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30714,
											"end": 30733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30736,
											"end": 30748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30736,
											"end": 30746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30736,
											"end": 30748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30736,
											"end": 30748,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30736,
											"end": 30748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30714,
											"end": 30748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30714,
											"end": 30748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30780,
											"end": 30789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30780,
											"end": 30804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30780,
											"end": 30804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH data",
											"source": 0,
											"value": "9B1EACAF7B3B2D412DF286FEF87F078C0C28D492DEA75275391EE8422DB5360C"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30759,
											"end": 30865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30899,
											"end": 30912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30925,
											"end": 30933,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30915,
											"end": 30945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30945,
											"name": "PUSH",
											"source": 0,
											"value": "F1821783"
										},
										{
											"begin": 30946,
											"end": 30955,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": 30957,
											"end": 30964,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31005,
											"end": 31019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31022,
											"end": 31038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 30915,
											"end": 30965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 31022,
											"end": 31038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31022,
											"end": 31038,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 31022,
											"end": 31038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31005,
											"end": 31038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31005,
											"end": 31038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31099,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "989680"
										},
										{
											"begin": 31089,
											"end": 31095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31089,
											"end": 31107,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31089,
											"end": 31107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "426F6E6420746F6F20736D616C6C000000000000000000000000000000000000"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31081,
											"end": 31126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31202,
											"end": 31213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31202,
											"end": 31211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31202,
											"end": 31213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31202,
											"end": 31213,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31202,
											"end": 31213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31192,
											"end": 31198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31192,
											"end": 31213,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31192,
											"end": 31213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "426F6E6420746F6F206C61726765000000000000000000000000000000000000"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 31184,
											"end": 31232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31325,
											"end": 31336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31339,
											"end": 31371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 31365,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 31339,
											"end": 31360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31350,
											"end": 31355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31350,
											"end": 31359,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31350,
											"end": 31359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31350,
											"end": 31359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31345,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31339,
											"end": 31349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31339,
											"end": 31360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31339,
											"end": 31371,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 31339,
											"end": 31371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31325,
											"end": 31371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31381,
											"end": 31395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31398,
											"end": 31424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 31325,
											"end": 31371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 31398,
											"end": 31403,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31408,
											"end": 31414,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 31398,
											"end": 31415,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31398,
											"end": 31415,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 31398,
											"end": 31415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 31398,
											"end": 31424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31398,
											"end": 31424,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 31398,
											"end": 31424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31381,
											"end": 31424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31599,
											"end": 31669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31606,
											"end": 31615,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": 31599,
											"end": 31633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31644,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31654,
											"end": 31658,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31668,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 31599,
											"end": 31669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31599,
											"end": 31669,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 31599,
											"end": 31669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31686,
											"end": 31695,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31679,
											"end": 31704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31704,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 31713,
											"end": 31721,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2296"
										},
										{
											"begin": 31724,
											"end": 31731,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "BC157AC100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31779,
											"end": 31788,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 31760,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2296"
										},
										{
											"begin": 31742,
											"end": 31769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31769,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31769,
											"name": "PUSH",
											"source": 0,
											"value": "BC157AC1"
										},
										{
											"begin": 31742,
											"end": 31769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31679,
											"end": 31732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31742,
											"end": 31769,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 31742,
											"end": 31797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31812,
											"end": 31820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31808,
											"end": 31923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 31808,
											"end": 31923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31884,
											"end": 31888,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": 31877,
											"end": 31902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31903,
											"end": 31906,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2298"
										},
										{
											"begin": 31908,
											"end": 31911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31877,
											"end": 31902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 31877,
											"end": 31912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31877,
											"end": 31912,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 31877,
											"end": 31912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31980,
											"end": 31989,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 31980,
											"end": 31989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31980,
											"end": 32000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 31980,
											"end": 32000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31994,
											"end": 31999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31980,
											"end": 31993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 31980,
											"end": 32000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31980,
											"end": 32000,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 31980,
											"end": 32000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31968,
											"end": 31977,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 31968,
											"end": 32000,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32184,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32176,
											"end": 32215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32208,
											"end": 32214,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32176,
											"end": 32207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 32176,
											"end": 32215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32176,
											"end": 32215,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32176,
											"end": 32215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32286,
											"end": 32301,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32238,
											"end": 32255,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32238,
											"end": 32255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32238,
											"end": 32255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32238,
											"end": 32255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32238,
											"end": 32255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32134,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32238,
											"end": 32255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32488,
											"end": 32505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32337,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32468,
											"end": 32506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 32468,
											"end": 32506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32488,
											"end": 32505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32488,
											"end": 32505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32488,
											"end": 32505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32468,
											"end": 32487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 32468,
											"end": 32506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32468,
											"end": 32506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32468,
											"end": 32506,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 32468,
											"end": 32506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32448,
											"end": 32454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32448,
											"end": 32454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "PUSH",
											"source": 0,
											"value": "1FEC6DC81F140574BF43F6B1E420AE1DD47928B9D57DB8CBD7B8611063B85AE5"
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32402,
											"end": 32540,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 32604,
											"end": 32613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32604,
											"end": 32615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32604,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 32604,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32590,
											"end": 32602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 32590,
											"end": 32600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 32590,
											"end": 32602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32590,
											"end": 32602,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 32590,
											"end": 32602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32572,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 32572,
											"end": 32586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32572,
											"end": 32588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32572,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 32572,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32555,
											"end": 32616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32616,
											"name": "PUSH",
											"source": 0,
											"value": "375B221F40939BFD8F49723A17CF7BC6D576EBF72EFE2CC3E991826F5B3F390A"
										},
										{
											"begin": 32555,
											"end": 32616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32555,
											"end": 32616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32555,
											"end": 32616,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 32627,
											"end": 32633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 32627,
											"end": 32635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32627,
											"end": 32635,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 32627,
											"end": 32635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32684,
											"end": 32690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32684,
											"end": 32690,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30350,
											"end": 32697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38813,
											"end": 39131,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 38813,
											"end": 39131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38869,
											"end": 38876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38892,
											"end": 38907,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2300"
										},
										{
											"begin": 38888,
											"end": 39125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38888,
											"end": 39125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 38888,
											"end": 39125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38946,
											"end": 39065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 39061,
											"end": 39064,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 38946,
											"end": 39035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 38999,
											"end": 39013,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38983,
											"end": 39023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39023,
											"name": "PUSH",
											"source": 0,
											"value": "32DA80A3"
										},
										{
											"begin": 39024,
											"end": 39033,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38983,
											"end": 39034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38946,
											"end": 38957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38946,
											"end": 38955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38946,
											"end": 38957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38888,
											"end": 39125,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 38888,
											"end": 39125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39103,
											"end": 39114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 39103,
											"end": 39112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 39103,
											"end": 39114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2298"
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24527,
											"end": 24555,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29681,
											"end": 29696,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29527,
											"end": 29708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29524,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29708,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29354,
											"end": 29715,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41122,
											"end": 41126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41156,
											"end": 41160,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41146,
											"end": 41160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41146,
											"end": 41152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41146,
											"end": 41160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41146,
											"end": 41160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41146,
											"end": 41160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 41138,
											"end": 41161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41138,
											"end": 41161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41161,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 41138,
											"end": 41161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41189,
											"end": 41198,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2294"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41179,
											"end": 41198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41179,
											"end": 41185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41179,
											"end": 41198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41179,
											"end": 41198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41179,
											"end": 41198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 41171,
											"end": 41199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41171,
											"end": 41199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41199,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 41171,
											"end": 41199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41209,
											"end": 41316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 41250,
											"end": 41253,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2298"
										},
										{
											"begin": 41274,
											"end": 41280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41267,
											"end": 41291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41291,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 41300,
											"end": 41304,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41267,
											"end": 41306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41209,
											"end": 41236,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41209,
											"end": 41236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41209,
											"end": 41236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41209,
											"end": 41316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41209,
											"end": 41236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 41209,
											"end": 41316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41209,
											"end": 41316,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 41209,
											"end": 41316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41333,
											"end": 41337,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41062,
											"end": 41344,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2302"
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24695,
											"end": 24734,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38477,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38507,
											"end": 38521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38531,
											"end": 38535,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38524,
											"end": 38548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38548,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38573,
											"end": 38691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 38686,
											"end": 38690,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 38573,
											"end": 38668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 38573,
											"end": 38637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 38606,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 38624,
											"end": 38627,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 38606,
											"end": 38619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38606,
											"end": 38617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 38606,
											"end": 38619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38606,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 38606,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38630,
											"end": 38636,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38573,
											"end": 38605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 38573,
											"end": 38637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38573,
											"end": 38691,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 38573,
											"end": 38691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38435,
											"end": 38698,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27611,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27611,
											"end": 27632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27611,
											"end": 27637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH",
											"source": 0,
											"value": "426F6E6473206D75737420626520696E697469616C697A65642066726F6D2030"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 27603,
											"end": 27674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27692,
											"end": 27925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27935,
											"end": 27944,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 27935,
											"end": 27959,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 27978,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27988,
											"end": 28003,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 28004,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27338,
											"end": 28011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29931,
											"end": 29953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29931,
											"end": 29953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 29923,
											"end": 29954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29923,
											"end": 29954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29954,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 29923,
											"end": 29954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29968,
											"end": 29975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 29964,
											"end": 30136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30000,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29991,
											"end": 30007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29991,
											"end": 30007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30007,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30021,
											"end": 30045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30021,
											"end": 30045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30021,
											"end": 30045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30021,
											"end": 30045,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30021,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30021,
											"end": 30045,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 29964,
											"end": 30136,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30136,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 29964,
											"end": 30136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30076,
											"end": 30085,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30076,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30076,
											"end": 30093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30076,
											"end": 30093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30076,
											"end": 30093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30076,
											"end": 30093,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30107,
											"end": 30125,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 30142,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2300"
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24597,
											"end": 24634,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37191,
											"end": 37205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37226,
											"end": 37311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 37298,
											"end": 37301,
											"name": "PUSH",
											"source": 0,
											"value": "989680"
										},
										{
											"begin": 37226,
											"end": 37280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 37269,
											"end": 37279,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 37226,
											"end": 37264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 37252,
											"end": 37263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 37252,
											"end": 37261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 37252,
											"end": 37263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37252,
											"end": 37263,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 37252,
											"end": 37263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37226,
											"end": 37231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37226,
											"end": 37247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37226,
											"end": 37247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37226,
											"end": 37251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 37226,
											"end": 37264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37226,
											"end": 37264,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 37226,
											"end": 37264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37226,
											"end": 37268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37226,
											"end": 37268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 37226,
											"end": 37280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37226,
											"end": 37311,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 37226,
											"end": 37311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37334,
											"end": 37352,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37334,
											"end": 37352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37217,
											"end": 37311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37217,
											"end": 37311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37325,
											"end": 37352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37325,
											"end": 37352,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37321,
											"end": 37406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37321,
											"end": 37406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 37321,
											"end": 37406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37377,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37377,
											"end": 37395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37149,
											"end": 37412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36496,
											"end": 36630,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 36496,
											"end": 36630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36564,
											"end": 36623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 36616,
											"end": 36622,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 36564,
											"end": 36611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 36595,
											"end": 36600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36595,
											"end": 36610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36595,
											"end": 36610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36595,
											"end": 36610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36571,
											"end": 36575,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36564,
											"end": 36588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36588,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 36564,
											"end": 36611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39544,
											"end": 39553,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 39544,
											"end": 39553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39465,
											"end": 39479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39465,
											"end": 39479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39465,
											"end": 39479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39465,
											"end": 39479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39514,
											"end": 39554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 39514,
											"end": 39554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39544,
											"end": 39553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39521,
											"end": 39536,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 39514,
											"end": 39543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39514,
											"end": 39543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39514,
											"end": 39543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39544,
											"end": 39553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39544,
											"end": 39553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39544,
											"end": 39553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39514,
											"end": 39543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 39514,
											"end": 39554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39514,
											"end": 39554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39514,
											"end": 39554,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 39514,
											"end": 39554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39606,
											"end": 39623,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 39606,
											"end": 39623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39582,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 39573,
											"end": 39582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39491,
											"end": 39554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39491,
											"end": 39554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39573,
											"end": 39624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 39573,
											"end": 39624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39606,
											"end": 39623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39606,
											"end": 39623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39606,
											"end": 39623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39606,
											"end": 39623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39606,
											"end": 39623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39573,
											"end": 39601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39573,
											"end": 39624,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 39573,
											"end": 39624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39564,
											"end": 39624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39564,
											"end": 39624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39647,
											"end": 39656,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 39647,
											"end": 39656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39638,
											"end": 39644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39638,
											"end": 39656,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39634,
											"end": 39701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39634,
											"end": 39701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 39634,
											"end": 39701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39681,
											"end": 39690,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 39681,
											"end": 39690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39672,
											"end": 39690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39672,
											"end": 39690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39634,
											"end": 39701,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 39634,
											"end": 39701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25222,
											"end": 25245,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25162,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2599,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2676,
											"end": 2721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2702,
											"end": 2710,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2721,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2676,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2748,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2758,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2846,
											"end": 2976,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2846,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2930,
											"end": 2969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34310,
											"end": 35038,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 34310,
											"end": 35038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34429,
											"end": 34436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34453,
											"end": 34459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34448,
											"end": 35008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 34448,
											"end": 35008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34528,
											"end": 34532,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34521,
											"end": 34542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34542,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 34543,
											"end": 34553,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34555,
											"end": 34562,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 34521,
											"end": 34563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34448,
											"end": 35008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 34448,
											"end": 35008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34448,
											"end": 35008,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34448,
											"end": 35008,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 34448,
											"end": 35008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34651,
											"end": 34660,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34651,
											"end": 34660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34651,
											"end": 34660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34651,
											"end": 34660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34651,
											"end": 34660,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 34651,
											"end": 34660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34747,
											"end": 34760,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34747,
											"end": 34760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34747,
											"end": 34760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34747,
											"end": 34760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34747,
											"end": 34760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34733,
											"end": 34737,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": 34726,
											"end": 34746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34746,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34746,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 34726,
											"end": 34746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34726,
											"end": 34746,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 34726,
											"end": 34770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7ACB7757"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34823,
											"name": "PUSH",
											"source": 0,
											"value": "7ACB7757"
										},
										{
											"begin": 34788,
											"end": 34823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34803,
											"end": 34816,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 34911,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34904,
											"end": 34911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34904,
											"end": 34911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 34911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34904,
											"end": 34911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34894,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2292"
										},
										{
											"begin": 34883,
											"end": 34903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34903,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34903,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 34883,
											"end": 34903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34883,
											"end": 34903,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7ACB7757"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34962,
											"name": "PUSH",
											"source": 0,
											"value": "7ACB7757"
										},
										{
											"begin": 34939,
											"end": 34962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34883,
											"end": 34921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34948,
											"end": 34955,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 34939,
											"end": 34983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 34647,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35024,
											"end": 35031,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34310,
											"end": 35038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34310,
											"end": 35038,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1874,
											"end": 2008,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1874,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 1966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 1958,
											"end": 2001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2237,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 2320,
											"end": 2365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22349,
											"end": 23083,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 22349,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22454,
											"end": 22470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 22454,
											"end": 22470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 22454,
											"end": 22470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22454,
											"end": 22470,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 22454,
											"end": 22470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22508,
											"end": 22509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22494,
											"end": 22505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH data",
											"source": 0,
											"value": "5E8A6C8DFACD0A41F2501735D8EE26D996B9E7E81FF5467DFDFD11A3728A15E7"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 22486,
											"end": 22552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22566,
											"end": 22580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22562,
											"end": 22612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 22562,
											"end": 22612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22589,
											"end": 22612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22582,
											"end": 22612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 22582,
											"end": 22612,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22562,
											"end": 22612,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 22562,
											"end": 22612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22627,
											"end": 22651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22627,
											"end": 22651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22627,
											"end": 22651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22623,
											"end": 23077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 22623,
											"end": 23077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22667,
											"end": 22681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22712,
											"end": 22723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21751,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 22685,
											"end": 22708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22708,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 22712,
											"end": 22723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22684,
											"end": 22723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 22684,
											"end": 22723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22684,
											"end": 22723,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 22684,
											"end": 22723,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 22684,
											"end": 22723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22684,
											"end": 22723,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22684,
											"end": 22723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22745,
											"end": 22766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22745,
											"end": 22766,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22745,
											"end": 22766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 22737,
											"end": 22801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22840,
											"end": 22846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22822,
											"end": 22848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 22815,
											"end": 22848,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22623,
											"end": 23077,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 22623,
											"end": 23077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22896,
											"end": 22941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 22912,
											"end": 22921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21789,
											"end": 21820,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000"
										},
										{
											"begin": 22929,
											"end": 22940,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22896,
											"end": 22911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 22896,
											"end": 22941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22896,
											"end": 22941,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 22896,
											"end": 22941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22879,
											"end": 22941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22963,
											"end": 22984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22984,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22343,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 22176,
											"end": 22343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22309,
											"end": 22316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 22336,
											"name": "PUSH",
											"source": 0,
											"value": "12725DD1D243AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22301,
											"end": 22317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22301,
											"end": 22317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22301,
											"end": 22317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22301,
											"end": 22336,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22301,
											"end": 22336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22343,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36235,
											"end": 36365,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 36235,
											"end": 36365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36287,
											"end": 36313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 36301,
											"end": 36312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36301,
											"end": 36310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36301,
											"end": 36312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36287,
											"end": 36313,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 36287,
											"end": 36313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36284,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 36275,
											"end": 36313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36323,
											"end": 36332,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36342,
											"end": 36357,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36323,
											"end": 36358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36235,
											"end": 36365,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37533,
											"end": 37876,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 37533,
											"end": 37876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37573,
											"end": 37587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37608,
											"end": 37693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 37680,
											"end": 37683,
											"name": "PUSH",
											"source": 0,
											"value": "989680"
										},
										{
											"begin": 37608,
											"end": 37662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 37651,
											"end": 37661,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 37634,
											"end": 37645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 37634,
											"end": 37643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 37634,
											"end": 37645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37608,
											"end": 37693,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 37608,
											"end": 37693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37734,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37716,
											"end": 37734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37599,
											"end": 37693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37599,
											"end": 37693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37707,
											"end": 37734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37707,
											"end": 37734,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37703,
											"end": 37870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37703,
											"end": 37870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 37703,
											"end": 37870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37759,
											"end": 37777,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37759,
											"end": 37777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37703,
											"end": 37870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 37703,
											"end": 37870,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37703,
											"end": 37870,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 37703,
											"end": 37870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37798,
											"end": 37816,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37798,
											"end": 37816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37798,
											"end": 37821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 37794,
											"end": 37870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37858,
											"end": 37859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37837,
											"end": 37855,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37837,
											"end": 37859,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37533,
											"end": 37876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37533,
											"end": 37876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18370,
											"end": 18645,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 18370,
											"end": 18645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18610,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18560,
											"end": 18628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18508,
											"end": 18638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 18508,
											"end": 18638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18541,
											"end": 18546,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18541,
											"end": 18546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18508,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 18508,
											"end": 18638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18508,
											"end": 18638,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 18508,
											"end": 18638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18370,
											"end": 18645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18370,
											"end": 18645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18370,
											"end": 18645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18370,
											"end": 18645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18370,
											"end": 18645,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18125,
											"end": 18364,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 18125,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18312,
											"end": 18335,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 18237,
											"end": 18357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18270,
											"end": 18275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18270,
											"end": 18275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 18237,
											"end": 18357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18237,
											"end": 18357,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 18237,
											"end": 18357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18125,
											"end": 18364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18125,
											"end": 18364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18125,
											"end": 18364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18125,
											"end": 18364,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1692,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35125,
											"end": 36179,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 35125,
											"end": 36179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35210,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 35210,
											"end": 35227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35162,
											"end": 35183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35162,
											"end": 35183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 35186,
											"end": 35228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35210,
											"end": 35227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35186,
											"end": 35205,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 35186,
											"end": 35205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35205,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35210,
											"end": 35227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35210,
											"end": 35227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35210,
											"end": 35227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 35186,
											"end": 35228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35186,
											"end": 35228,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 35186,
											"end": 35228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 35242,
											"end": 35257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35162,
											"end": 35228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35162,
											"end": 35228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35242,
											"end": 35262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 35242,
											"end": 35298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35285,
											"end": 35298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35266,
											"end": 35281,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 35266,
											"end": 35298,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35266,
											"end": 35298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35242,
											"end": 35298,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 35242,
											"end": 35298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 36173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 36173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 35238,
											"end": 36173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35332,
											"end": 35337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35332,
											"end": 35353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35371,
											"end": 35381,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 35371,
											"end": 35385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35371,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35371,
											"end": 35385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35367,
											"end": 35917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35367,
											"end": 35917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 35367,
											"end": 35917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35476,
											"end": 35491,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 35476,
											"end": 35491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35429,
											"end": 35434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35429,
											"end": 35450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35429,
											"end": 35509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 35429,
											"end": 35509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35429,
											"end": 35454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 35429,
											"end": 35509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35429,
											"end": 35509,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 35429,
											"end": 35509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35405,
											"end": 35509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 35509,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35556,
											"end": 35573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 35527,
											"end": 35635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 35527,
											"end": 35635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35597,
											"end": 35612,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 35597,
											"end": 35616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35527,
											"end": 35635,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 35527,
											"end": 35635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35367,
											"end": 35917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 35367,
											"end": 35917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35367,
											"end": 35917,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 35367,
											"end": 35917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35759,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 35744,
											"end": 35759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35697,
											"end": 35702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35697,
											"end": 35718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35697,
											"end": 35777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 35697,
											"end": 35777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35697,
											"end": 35722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 35697,
											"end": 35777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35697,
											"end": 35777,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 35697,
											"end": 35777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35673,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35673,
											"end": 35777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35673,
											"end": 35777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35673,
											"end": 35777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35824,
											"end": 35841,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35824,
											"end": 35841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 35795,
											"end": 35903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 35795,
											"end": 35903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35883,
											"end": 35884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35865,
											"end": 35880,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 35865,
											"end": 35884,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35795,
											"end": 35903,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 35795,
											"end": 35903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35949,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 35959,
											"end": 35974,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35975,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36062,
											"end": 36083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36101,
											"end": 36116,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 36101,
											"end": 36116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35930,
											"end": 35940,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 36134,
											"end": 36148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36134,
											"end": 36148,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 36134,
											"end": 36148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "PUSH",
											"source": 0,
											"value": "B923E581A0F83128E9E1D8297AA52B18D6744310476E0B54509C054CD7A93B2A"
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 36162,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 36173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 36173,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 35238,
											"end": 36173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35125,
											"end": 36179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35125,
											"end": 36179,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2982,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2982,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3168,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3197,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2982,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2014,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2014,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2231,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2378,
											"end": 2593,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 2378,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21583,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 21247,
											"end": 21583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21349,
											"end": 21356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21369,
											"end": 21378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21380,
											"end": 21389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21393,
											"end": 21406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 21401,
											"end": 21402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21404,
											"end": 21405,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21393,
											"end": 21400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 21393,
											"end": 21406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21393,
											"end": 21406,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 21393,
											"end": 21406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21442,
											"end": 21443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 21429,
											"end": 21444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21444,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21444,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 21429,
											"end": 21444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21439,
											"end": 21440,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21436,
											"end": 21437,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21444,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21464,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 21454,
											"end": 21472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21471,
											"end": 21472,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21466,
											"end": 21472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21466,
											"end": 21472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21466,
											"end": 21472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21466,
											"end": 21472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21472,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 21454,
											"end": 21472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21487,
											"end": 21489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21511,
											"end": 21512,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21512,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "46756C6C4D6174683A3A6D756C4469763A206F766572666C6F77000000000000"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 21499,
											"end": 21543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21560,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 21568,
											"end": 21569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21571,
											"end": 21572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21575,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21560,
											"end": 21567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 21560,
											"end": 21576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21560,
											"end": 21576,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 21560,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21553,
											"end": 21576,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21583,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21247,
											"end": 21583,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20008,
											"end": 20512,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 20008,
											"end": 20512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20111,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 20155,
											"end": 20159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20122,
											"end": 20127,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20114,
											"end": 20141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 20114,
											"end": 20141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 20114,
											"end": 20217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20231,
											"end": 20252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20227,
											"end": 20506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 20227,
											"end": 20506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20400,
											"end": 20410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20389,
											"end": 20419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH data",
											"source": 0,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20624,
											"end": 20633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20624,
											"end": 20633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20624,
											"end": 20633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20683,
											"end": 20684,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20680,
											"end": 20681,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20673,
											"end": 20698,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 20660,
											"end": 20698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20660,
											"end": 20698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20717,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20712,
											"end": 20713,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20717,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20731,
											"end": 20733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20731,
											"end": 20737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20727,
											"end": 20737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20727,
											"end": 20737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20751,
											"end": 20753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20751,
											"end": 20757,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20747,
											"end": 20765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20747,
											"end": 20765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 20747,
											"end": 20765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20765,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20759,
											"end": 20765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20759,
											"end": 20765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20759,
											"end": 20765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20759,
											"end": 20765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20747,
											"end": 20765,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 20747,
											"end": 20765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20772,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20778,
											"end": 21241,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 20778,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20880,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20918,
											"end": 20920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20918,
											"end": 20920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20918,
											"end": 20920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20914,
											"end": 20920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20914,
											"end": 20920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20914,
											"end": 20920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20919,
											"end": 20920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20914,
											"end": 20920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 20958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20988,
											"end": 20992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20980,
											"end": 20984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20979,
											"end": 20984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20979,
											"end": 20984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21035,
											"end": 21036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21035,
											"end": 21044,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21035,
											"end": 21044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21035,
											"end": 21044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21063,
											"end": 21068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21063,
											"end": 21068,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21063,
											"end": 21068,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21059,
											"end": 21068,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21059,
											"end": 21068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21054,
											"end": 21068,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21087,
											"end": 21092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21087,
											"end": 21092,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21087,
											"end": 21092,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21078,
											"end": 21092,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21107,
											"end": 21116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21107,
											"end": 21116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21102,
											"end": 21116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21135,
											"end": 21140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21135,
											"end": 21140,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21135,
											"end": 21140,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21126,
											"end": 21140,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21164,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21164,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21150,
											"end": 21164,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21183,
											"end": 21188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21183,
											"end": 21188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21183,
											"end": 21188,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21174,
											"end": 21188,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21207,
											"end": 21212,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21207,
											"end": 21212,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21207,
											"end": 21212,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21198,
											"end": 21212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21198,
											"end": 21212,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21198,
											"end": 21212,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 20996,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20978,
											"end": 20996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20997,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20997,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21234,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 21241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20778,
											"end": 21241,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4796,
											"end": 5020,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 4796,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4941,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4960,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 4960,
											"end": 5013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4960,
											"end": 5013,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 4960,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5013,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4796,
											"end": 5020,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 5020,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5997,
											"end": 7013,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 5997,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6197,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 6189,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6320,
											"end": 6332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6357,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6361,
											"end": 6367,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6361,
											"end": 6372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6380,
											"end": 6388,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6319,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6319,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6319,
											"end": 6417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6319,
											"end": 6417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 7007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 6427,
											"end": 7007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6461,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6454,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 6454,
											"end": 6471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6454,
											"end": 6471,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 7007,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 6427,
											"end": 7007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 6568,
											"end": 6997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6873,
											"end": 6875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6869,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6862,
											"end": 6906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6779,
											"end": 6924,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 6779,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6981,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6981,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4128,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 3882,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4087,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4128,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "169"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "364"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
										"5E8A6C8DFACD0A41F2501735D8EE26D996B9E7E81FF5467DFDFD11A3728A15E7": "4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9B1EACAF7B3B2D412DF286FEF87F078C0C28D492DEA75275391EE8422DB5360C": "536c697070616765206c696d69743a206d6f7265207468616e206d6178207072696365",
										"9BF0496B18F4DB662847E65668D0AE3D4D7F5EBC115D137B3B0990AE2896F44E": "56657374696e67206d757374206265206c6f6e676572207468616e20333620686f757273",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Bash()": "3c4e6da7",
							"DAO()": "98fabd3a",
							"adjustment()": "451ee4a1",
							"bondCalculator()": "c5332b7c",
							"bondInfo(address)": "cd1234b3",
							"bondPrice()": "d7ccfb0b",
							"bondPriceInUSD()": "844b5c7c",
							"currentDebt()": "759076e5",
							"debtDecay()": "e392a262",
							"debtRatio()": "cea55f57",
							"deposit(uint256,uint256,address)": "8dbdbe6d",
							"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)": "cf37a891",
							"isLiquidityBond()": "d7969060",
							"lastDecay()": "f5c2ab5b",
							"maxPayout()": "e0176de8",
							"payoutFor(uint256)": "7927ebf8",
							"pendingPayoutFor(address)": "01b88ee8",
							"percentVestedFor(address)": "507930ec",
							"policy()": "0505c8c9",
							"principle()": "016a4284",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"recoverLostToken(address)": "b4abccba",
							"redeem(address,bool)": "1feed31f",
							"renounceManagement()": "089208d8",
							"setAdjustment(bool,uint256,uint256,uint32)": "ae9832cf",
							"setBondTerms(uint8,uint256)": "1e321a0f",
							"setStaking(address,bool)": "d4d863ce",
							"staking()": "4cf088d9",
							"stakingHelper()": "77b81895",
							"standardizedDebtRatio()": "904b3ece",
							"terms()": "d5025625",
							"totalDebt()": "fc7b9c18",
							"treasury()": "61d027b3",
							"useHelper()": "2f3f470a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bash\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_principle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DAO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bondCalculator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"priceInUSD\",\"type\":\"uint256\"}],\"name\":\"BondCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"priceInUSD\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"internalPrice\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"debtRatio\",\"type\":\"uint256\"}],\"name\":\"BondPriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"BondRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialBCV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBCV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"adjustment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"addition\",\"type\":\"bool\"}],\"name\":\"ControlVariableAdjustment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Bash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adjustment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"buffer\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondCalculator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bondInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"lastTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"vesting\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondPriceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtDecay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"decay_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"debtRatio_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_controlVariable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_vestingTerm\",\"type\":\"uint32\"}],\"name\":\"initializeBondTerms\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLiquidityBond\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDecay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"pendingPayoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingPayout_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"percentVestedFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"percentVested_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"principle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"recoverLostToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stake\",\"type\":\"bool\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_addition\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_buffer\",\"type\":\"uint32\"}],\"name\":\"setAdjustment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ExodusBondDepository.PARAMETER\",\"name\":\"_parameter\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_input\",\"type\":\"uint256\"}],\"name\":\"setBondTerms\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_helper\",\"type\":\"bool\"}],\"name\":\"setStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingHelper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standardizedDebtRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"controlVariable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"vestingTerm\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useHelper\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bondPrice()\":{\"returns\":{\"price_\":\"uint\"}},\"bondPriceInUSD()\":{\"returns\":{\"price_\":\"uint\"}},\"currentDebt()\":{\"returns\":{\"_0\":\"uint\"}},\"debtDecay()\":{\"returns\":{\"decay_\":\"uint\"}},\"debtRatio()\":{\"returns\":{\"debtRatio_\":\"uint\"}},\"deposit(uint256,uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_depositor\":\"address\",\"_maxPrice\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)\":{\"params\":{\"_controlVariable\":\"uint\",\"_fee\":\"uint\",\"_initialDebt\":\"uint\",\"_maxDebt\":\"uint\",\"_maxPayout\":\"uint\",\"_minimumPrice\":\"uint\",\"_vestingTerm\":\"uint32\"}},\"maxPayout()\":{\"returns\":{\"_0\":\"uint\"}},\"payoutFor(uint256)\":{\"params\":{\"_value\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"pendingPayoutFor(address)\":{\"params\":{\"_depositor\":\"address\"},\"returns\":{\"pendingPayout_\":\"uint\"}},\"percentVestedFor(address)\":{\"params\":{\"_depositor\":\"address\"},\"returns\":{\"percentVested_\":\"uint\"}},\"recoverLostToken(address)\":{\"returns\":{\"_0\":\"bool\"}},\"redeem(address,bool)\":{\"params\":{\"_recipient\":\"address\",\"_stake\":\"bool\"},\"returns\":{\"_0\":\"uint\"}},\"setAdjustment(bool,uint256,uint256,uint32)\":{\"params\":{\"_addition\":\"bool\",\"_buffer\":\"uint\",\"_increment\":\"uint\",\"_target\":\"uint\"}},\"setBondTerms(uint8,uint256)\":{\"params\":{\"_input\":\"uint\",\"_parameter\":\"PARAMETER\"}},\"setStaking(address,bool)\":{\"params\":{\"_helper\":\"bool\",\"_staking\":\"address\"}},\"standardizedDebtRatio()\":{\"returns\":{\"_0\":\"uint\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bondPrice()\":{\"notice\":\"calculate current bond premium\"},\"bondPriceInUSD()\":{\"notice\":\"converts bond price to DAI value\"},\"currentDebt()\":{\"notice\":\"calculate debt factoring in decay\"},\"debtDecay()\":{\"notice\":\"amount to decay total debt by\"},\"debtRatio()\":{\"notice\":\"calculate current ratio of debt to BASH supply\"},\"deposit(uint256,uint256,address)\":{\"notice\":\"deposit bond\"},\"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)\":{\"notice\":\"initializes bond parameters\"},\"maxPayout()\":{\"notice\":\"determine maximum bond size\"},\"payoutFor(uint256)\":{\"notice\":\"calculate interest due for new bond\"},\"pendingPayoutFor(address)\":{\"notice\":\"calculate amount of OHM available for claim by depositor\"},\"percentVestedFor(address)\":{\"notice\":\"calculate how far into vesting a depositor is\"},\"recoverLostToken(address)\":{\"notice\":\"allow anyone to send lost tokens (excluding principle or OHM) to the DAO\"},\"redeem(address,bool)\":{\"notice\":\"redeem bond for user\"},\"setAdjustment(bool,uint256,uint256,uint32)\":{\"notice\":\"set control variable adjustment\"},\"setBondTerms(uint8,uint256)\":{\"notice\":\"set parameters for new bonds\"},\"setStaking(address,bool)\":{\"notice\":\"set contract for auto stake\"},\"standardizedDebtRatio()\":{\"notice\":\"debt ratio in same terms for reserve or liquidity bonds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"ExodusBondDepository\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2304,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "staking",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2306,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "stakingHelper",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2308,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "useHelper",
								"offset": 20,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 2310,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "terms",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(Terms)2333_storage"
							},
							{
								"astId": 2312,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "adjustment",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(Adjust)2353_storage"
							},
							{
								"astId": 2316,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "bondInfo",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_struct(Bond)2342_storage)"
							},
							{
								"astId": 2318,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "totalDebt",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 2320,
								"contract": "daibond/BondDepository.sol:ExodusBondDepository",
								"label": "lastDecay",
								"offset": 0,
								"slot": "16",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Bond)2342_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ExodusBondDepository.Bond)",
								"numberOfBytes": "32",
								"value": "t_struct(Bond)2342_storage"
							},
							"t_struct(Adjust)2353_storage": {
								"encoding": "inplace",
								"label": "struct ExodusBondDepository.Adjust",
								"members": [
									{
										"astId": 2344,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "add",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 2346,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "rate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2348,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "target",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2350,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "buffer",
										"offset": 0,
										"slot": "3",
										"type": "t_uint32"
									},
									{
										"astId": 2352,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "lastTime",
										"offset": 4,
										"slot": "3",
										"type": "t_uint32"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Bond)2342_storage": {
								"encoding": "inplace",
								"label": "struct ExodusBondDepository.Bond",
								"members": [
									{
										"astId": 2335,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "payout",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2337,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "pricePaid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2339,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "lastTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint32"
									},
									{
										"astId": 2341,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "vesting",
										"offset": 4,
										"slot": "2",
										"type": "t_uint32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Terms)2333_storage": {
								"encoding": "inplace",
								"label": "struct ExodusBondDepository.Terms",
								"members": [
									{
										"astId": 2322,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "controlVariable",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2324,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "minimumPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2326,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "maxPayout",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2328,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "fee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2330,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "maxDebt",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2332,
										"contract": "daibond/BondDepository.sol:ExodusBondDepository",
										"label": "vestingTerm",
										"offset": 0,
										"slot": "5",
										"type": "t_uint32"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bondPrice()": {
								"notice": "calculate current bond premium"
							},
							"bondPriceInUSD()": {
								"notice": "converts bond price to DAI value"
							},
							"currentDebt()": {
								"notice": "calculate debt factoring in decay"
							},
							"debtDecay()": {
								"notice": "amount to decay total debt by"
							},
							"debtRatio()": {
								"notice": "calculate current ratio of debt to BASH supply"
							},
							"deposit(uint256,uint256,address)": {
								"notice": "deposit bond"
							},
							"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint32)": {
								"notice": "initializes bond parameters"
							},
							"maxPayout()": {
								"notice": "determine maximum bond size"
							},
							"payoutFor(uint256)": {
								"notice": "calculate interest due for new bond"
							},
							"pendingPayoutFor(address)": {
								"notice": "calculate amount of OHM available for claim by depositor"
							},
							"percentVestedFor(address)": {
								"notice": "calculate how far into vesting a depositor is"
							},
							"recoverLostToken(address)": {
								"notice": "allow anyone to send lost tokens (excluding principle or OHM) to the DAO"
							},
							"redeem(address,bool)": {
								"notice": "redeem bond for user"
							},
							"setAdjustment(bool,uint256,uint256,uint32)": {
								"notice": "set control variable adjustment"
							},
							"setBondTerms(uint8,uint256)": {
								"notice": "set parameters for new bonds"
							},
							"setStaking(address,bool)": {
								"notice": "set contract for auto stake"
							},
							"standardizedDebtRatio()": {
								"notice": "debt ratio in same terms for reserve or liquidity bonds"
							}
						},
						"version": 1
					}
				},
				"FixedPoint": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":21587:23085  library FixedPoint {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":21587:23085  library FixedPoint {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209832c27665ca81806d0da0365a8cfa2c0cbc18518c168671b90a37787aeee16864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209832c27665ca81806d0da0365a8cfa2c0cbc18518c168671b90a37787aeee16864736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 ORIGIN 0xC2 PUSH23 0x65CA81806D0DA0365A8CFA2C0CBC18518C168671B90A37 PUSH25 0x7AEEE16864736F6C6343000705003300000000000000000000 ",
							"sourceMap": "21587:1498:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209832c27665ca81806d0da0365a8cfa2c0cbc18518c168671b90a37787aeee16864736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 ORIGIN 0xC2 PUSH23 0x65CA81806D0DA0365A8CFA2C0CBC18518C168671B90A37 PUSH25 0x7AEEE16864736F6C6343000705003300000000000000000000 ",
							"sourceMap": "21587:1498:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decode(struct FixedPoint.uq112x112 memory)": "infinite",
								"decode112with18(struct FixedPoint.uq112x112 memory)": "infinite",
								"fraction(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21587,
									"end": 23085,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209832c27665ca81806d0da0365a8cfa2c0cbc18518c168671b90a37787aeee16864736f6c63430007050033",
									".code": [
										{
											"begin": 21587,
											"end": 23085,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 23085,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"FixedPoint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FullMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":20516:21585  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":20516:21585  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220de8d42a8cb4d79cd2c7c2da5f3c7ae67506bdc4d44596010f4077bf637829bbf64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de8d42a8cb4d79cd2c7c2da5f3c7ae67506bdc4d44596010f4077bf637829bbf64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE DUP14 TIMESTAMP 0xA8 0xCB 0x4D PUSH26 0xCD2C7C2DA5F3C7AE67506BDC4D44596010F4077BF637829BBF64 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "20516:1069:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de8d42a8cb4d79cd2c7c2da5f3c7ae67506bdc4d44596010f4077bf637829bbf64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE DUP14 TIMESTAMP 0xA8 0xCB 0x4D PUSH26 0xCD2C7C2DA5F3C7AE67506BDC4D44596010F4077BF637829BBF64 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "20516:1069:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"fullDiv(uint256,uint256,uint256)": "infinite",
								"fullMul(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20516,
									"end": 21585,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de8d42a8cb4d79cd2c7c2da5f3c7ae67506bdc4d44596010f4077bf637829bbf64736f6c63430007050033",
									".code": [
										{
											"begin": 20516,
											"end": 21585,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20516,
											"end": 21585,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBondCalculator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LP",
									"type": "address"
								}
							],
							"name": "markdown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LP",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "valuation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"markdown(address)": "32da80a3",
							"valuation(address,uint256)": "4249719f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LP\",\"type\":\"address\"}],\"name\":\"markdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LP\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"valuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"IBondCalculator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC2612Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"IERC2612Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "policy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"policy()": "0505c8c9",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"stake(uint256,address)": "7acb7757"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"IStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStakingHelper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"stake(uint256,address)": "7acb7757"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"IStakingHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "policy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":339:1667  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"daibond/BondDepository.sol\":649:749  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"daibond/BondDepository.sol\":673:679  _owner */\n  0x00\n    /* \"daibond/BondDepository.sol\":673:692  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"daibond/BondDepository.sol\":682:692  msg.sender */\n  caller\n    /* \"daibond/BondDepository.sol\":673:692  _owner = msg.sender */\n  or\n  dup1\n  dup3\n  sstore\n    /* \"daibond/BondDepository.sol\":707:742  OwnershipPushed(address(0), _owner) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"daibond/BondDepository.sol\":735:741  _owner */\n  swap2\n  swap1\n  swap2\n  and\n  swap2\n    /* \"daibond/BondDepository.sol\":673:679  _owner */\n  swap1\n    /* \"daibond/BondDepository.sol\":707:742  OwnershipPushed(address(0), _owner) */\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  swap1\n    /* \"daibond/BondDepository.sol\":673:679  _owner */\n  dup3\n  swap1\n    /* \"daibond/BondDepository.sol\":707:742  OwnershipPushed(address(0), _owner) */\n  log3\n    /* \"daibond/BondDepository.sol\":339:1667  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":339:1667  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0505c8c9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"daibond/BondDepository.sol\":755:842  function policy() public view override returns (address) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"daibond/BondDepository.sol\":969:1120  function renounceManagement() public virtual override onlyPolicy {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"daibond/BondDepository.sol\":1126:1445  function pushManagement(address newOwner_)... */\n    tag_5:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_13\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":1451:1665  function pullManagement() public virtual override {... */\n    tag_6:\n      tag_9\n      tag_15\n      jump\t// in\n        /* \"daibond/BondDepository.sol\":755:842  function policy() public view override returns (address) {... */\n    tag_8:\n        /* \"daibond/BondDepository.sol\":803:810  address */\n      0x00\n        /* \"daibond/BondDepository.sol\":829:835  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"daibond/BondDepository.sol\":755:842  function policy() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":969:1120  function renounceManagement() public virtual override onlyPolicy {... */\n    tag_10:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_18\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_18:\n        /* \"daibond/BondDepository.sol\":1081:1082  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":1065:1071  _owner */\n      dup1\n      sload\n        /* \"daibond/BondDepository.sol\":1049:1084  OwnershipPushed(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1065:1071  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"daibond/BondDepository.sol\":1049:1084  OwnershipPushed(_owner, address(0)) */\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      swap1\n        /* \"daibond/BondDepository.sol\":1081:1082  0 */\n      dup4\n      swap1\n        /* \"daibond/BondDepository.sol\":1049:1084  OwnershipPushed(_owner, address(0)) */\n      log3\n        /* \"daibond/BondDepository.sol\":1111:1112  0 */\n      0x00\n        /* \"daibond/BondDepository.sol\":1094:1113  _owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":969:1120  function renounceManagement() public virtual override onlyPolicy {... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":1126:1445  function pushManagement(address newOwner_)... */\n    tag_13:\n        /* \"daibond/BondDepository.sol\":888:894  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"daibond/BondDepository.sol\":898:908  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":888:908  _owner == msg.sender */\n      eq\n        /* \"daibond/BondDepository.sol\":880:945  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1271:1294  newOwner_ != address(0) */\n      dup2\n      and\n        /* \"daibond/BondDepository.sol\":1250:1358  require(... */\n      tag_23\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"daibond/BondDepository.sol\":1389:1395  _owner */\n      0x00\n      dup1\n      sload\n        /* \"daibond/BondDepository.sol\":1373:1407  OwnershipPushed(_owner, newOwner_) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"daibond/BondDepository.sol\":1389:1395  _owner */\n      swap3\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":1373:1407  OwnershipPushed(_owner, newOwner_) */\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      swap2\n      log3\n        /* \"daibond/BondDepository.sol\":1417:1426  _newOwner */\n      0x01\n        /* \"daibond/BondDepository.sol\":1417:1438  _newOwner = newOwner_ */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":1126:1445  function pushManagement(address newOwner_)... */\n      jump\t// out\n        /* \"daibond/BondDepository.sol\":1451:1665  function pullManagement() public virtual override {... */\n    tag_15:\n        /* \"daibond/BondDepository.sol\":1533:1542  _newOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"daibond/BondDepository.sol\":1519:1529  msg.sender */\n      caller\n        /* \"daibond/BondDepository.sol\":1519:1542  msg.sender == _newOwner */\n      eq\n        /* \"daibond/BondDepository.sol\":1511:1581  require(msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"daibond/BondDepository.sol\":1620:1629  _newOwner */\n      sload(0x01)\n      0x00\n        /* \"daibond/BondDepository.sol\":1612:1618  _owner */\n      dup1\n      sload\n        /* \"daibond/BondDepository.sol\":1596:1630  OwnershipPulled(_owner, _newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1620:1629  _newOwner */\n      swap4\n      dup5\n      and\n      swap4\n        /* \"daibond/BondDepository.sol\":1612:1618  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"daibond/BondDepository.sol\":1596:1630  OwnershipPulled(_owner, _newOwner) */\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      swap2\n      log3\n        /* \"daibond/BondDepository.sol\":1649:1658  _newOwner */\n      sload(0x01)\n      0x00\n        /* \"daibond/BondDepository.sol\":1640:1658  _owner = _newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"daibond/BondDepository.sol\":1649:1658  _newOwner */\n      swap1\n      swap3\n      and\n        /* \"daibond/BondDepository.sol\":1640:1658  _owner = _newOwner */\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"daibond/BondDepository.sol\":1451:1665  function pullManagement() public virtual override {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n\n    auxdata: 0xa264697066735822122073c5ad85a8558c796067fe87d500df44ad2f38fc710380a8b53de73483e7450464736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36103b3806100696000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630505c8c914610051578063089208d81461007557806346f68ee91461007f5780635a96ac0a146100a5575b600080fd5b6100596100ad565b604080516001600160a01b039092168252519081900360200190f35b61007d6100bc565b005b61007d6004803603602081101561009557600080fd5b50356001600160a01b0316610172565b61007d61027e565b6000546001600160a01b031690565b6000546001600160a01b0316331461011b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146101d1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166102165760405162461bcd60e51b81526004018080602001828103825260268152602001806103366026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b031633146102c75760405162461bcd60e51b815260040180806020018281038252602281526020018061035c6022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a36001546000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca264697066735822122073c5ad85a8558c796067fe87d500df44ad2f38fc710380a8b53de73483e7450464736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x3B3 DUP1 PUSH2 0x69 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x505C8C9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x7D PUSH2 0x27E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x336 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA264697066735822122073C5AD DUP6 0xA8 SSTORE DUP13 PUSH26 0x6067FE87D500DF44AD2F38FC710380A8B53DE73483E745046473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "339:1328:0:-:0;;;649:100;;;;;;;;;-1:-1:-1;673:6:0;:19;;-1:-1:-1;;;;;;673:19:0;682:10;673:19;;;;707:35;;-1:-1:-1;;;;;735:6:0;;;;;673;707:35;;673:6;;707:35;339:1328;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630505c8c914610051578063089208d81461007557806346f68ee91461007f5780635a96ac0a146100a5575b600080fd5b6100596100ad565b604080516001600160a01b039092168252519081900360200190f35b61007d6100bc565b005b61007d6004803603602081101561009557600080fd5b50356001600160a01b0316610172565b61007d61027e565b6000546001600160a01b031690565b6000546001600160a01b0316331461011b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146101d1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166102165760405162461bcd60e51b81526004018080602001828103825260268152602001806103366026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b031633146102c75760405162461bcd60e51b815260040180806020018281038252602281526020018061035c6022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a36001546000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca264697066735822122073c5ad85a8558c796067fe87d500df44ad2f38fc710380a8b53de73483e7450464736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x505C8C9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x7D PUSH2 0x27E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x336 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA264697066735822122073C5AD DUP6 0xA8 SSTORE DUP13 PUSH26 0x6067FE87D500DF44AD2F38FC710380A8B53DE73483E745046473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "339:1328:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:87;;;:::i;:::-;;;;-1:-1:-1;;;;;755:87:0;;;;;;;;;;;;;;969:151;;;:::i;:::-;;1126:319;;;;;;;;;;;;;;;;-1:-1:-1;1126:319:0;-1:-1:-1;;;;;1126:319:0;;:::i;1451:214::-;;;:::i;755:87::-;803:7;829:6;-1:-1:-1;;;;;829:6:0;755:87;:::o;969:151::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:1:::1;1065:6:::0;;1049:35:::1;::::0;-1:-1:-1;;;;;1065:6:0;;::::1;::::0;1049:35:::1;::::0;1081:1;;1049:35:::1;1111:1;1094:19:::0;;-1:-1:-1;;1094:19:0::1;::::0;;969:151::o;1126:319::-;888:6;;-1:-1:-1;;;;;888:6:0;898:10;888:20;880:65;;;;;-1:-1:-1;;;880:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1271:23:0;::::1;1250:108;;;;-1:-1:-1::0;;;1250:108:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:6;::::0;;1373:34:::1;::::0;-1:-1:-1;;;;;1373:34:0;;::::1;::::0;1389:6;::::1;::::0;1373:34:::1;::::0;::::1;1417:9;:21:::0;;-1:-1:-1;;1417:21:0::1;-1:-1:-1::0;;;;;1417:21:0;;;::::1;::::0;;;::::1;::::0;;1126:319::o;1451:214::-;1533:9;;-1:-1:-1;;;;;1533:9:0;1519:10;:23;1511:70;;;;-1:-1:-1;;;1511:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:9;;;1612:6;;1596:34;;-1:-1:-1;;;;;1620:9:0;;;;1612:6;;;;1596:34;;;1649:9;;;1640:18;;-1:-1:-1;;1640:18:0;-1:-1:-1;;;;;1649:9:0;;;1640:18;;;;;;1451:214::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "189400",
								"executionCost": "22621",
								"totalCost": "212021"
							},
							"external": {
								"policy()": "1015",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"renounceManagement()": "24153"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 749,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 749,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 649,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 649,
									"end": 749,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 649,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 749,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 649,
									"end": 749,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 649,
									"end": 749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 673,
									"end": 679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 673,
									"end": 692,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 673,
									"end": 692,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 707,
									"end": 742,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 707,
									"end": 742,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 735,
									"end": 741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 673,
									"end": 679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 707,
									"end": 742,
									"name": "PUSH",
									"source": 0,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 707,
									"end": 742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 679,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 673,
									"end": 679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 707,
									"end": 742,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1667,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073c5ad85a8558c796067fe87d500df44ad2f38fc710380a8b53de73483e7450464736f6c63430007050033",
									".code": [
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "505C8C9"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "89208D8"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "46F68EE9"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "5A96AC0A"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 1667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 829,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1084,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1120,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 880,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1250,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1542,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH data",
											"source": 0,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1511,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1630,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"policy()": "0505c8c9",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "daibond/BondDepository.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "daibond/BondDepository.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":18037:20514  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":18037:20514  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206b66ba292d0b04dc5211475fcc9a184019f3f104bbb87aae1506a98bff540b0e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b66ba292d0b04dc5211475fcc9a184019f3f104bbb87aae1506a98bff540b0e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x66BA292D0B04DC5211475FCC SWAP11 XOR BLOCKHASH NOT RETURN CALL DIV 0xBB 0xB8 PUSH27 0xAE1506A98BFF540B0E64736F6C6343000705003300000000000000 ",
							"sourceMap": "18037:2477:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b66ba292d0b04dc5211475fcc9a184019f3f104bbb87aae1506a98bff540b0e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x66BA292D0B04DC5211475FCC SWAP11 XOR BLOCKHASH NOT RETURN CALL DIV 0xBB 0xB8 PUSH27 0xAE1506A98BFF540B0E64736F6C6343000705003300000000000000 ",
							"sourceMap": "18037:2477:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18037,
									"end": 20514,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b66ba292d0b04dc5211475fcc9a184019f3f104bbb87aae1506a98bff540b0e64736f6c63430007050033",
									".code": [
										{
											"begin": 18037,
											"end": 20514,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 20514,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"daibond/BondDepository.sol\":1669:3858  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"daibond/BondDepository.sol\":1669:3858  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a41819670536a9d3fbad711d0b8a3558435f5fd914513affcc541d436a5f3e6864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a41819670536a9d3fbad711d0b8a3558435f5fd914513affcc541d436a5f3e6864736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 XOR NOT PUSH8 0x536A9D3FBAD711D SIGNEXTEND DUP11 CALLDATALOAD PC NUMBER 0x5F 0x5F 0xD9 EQ MLOAD GASPRICE SELFDESTRUCT 0xCC SLOAD SAR NUMBER PUSH11 0x5F3E6864736F6C63430007 SDIV STOP CALLER ",
							"sourceMap": "1669:2189:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a41819670536a9d3fbad711d0b8a3558435f5fd914513affcc541d436a5f3e6864736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 XOR NOT PUSH8 0x536A9D3FBAD711D SIGNEXTEND DUP11 CALLDATALOAD PC NUMBER 0x5F 0x5F 0xD9 EQ MLOAD GASPRICE SELFDESTRUCT 0xCC SLOAD SAR NUMBER PUSH11 0x5F3E6864736F6C63430007 SDIV STOP CALLER ",
							"sourceMap": "1669:2189:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"sub32(uint32,uint32)": "infinite",
								"sub32(uint32,uint32,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1669,
									"end": 3858,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a41819670536a9d3fbad711d0b8a3558435f5fd914513affcc541d436a5f3e6864736f6c63430007050033",
									".code": [
										{
											"begin": 1669,
											"end": 3858,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 3858,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/BondDepository.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/BondDepository.sol\":{\"keccak256\":\"0x5af1d268772fc5a03bb1ff121eed70fbc40f197b879cbc6891151c3047653711\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://df565b1f5a3650b946873e97f3cbfb302171ea1d9ddd32aa1d53e5e0b2091ca7\",\"dweb:/ipfs/QmbkNVqTaU3gxdSdoaoFscogGAxJhpNMgwBVCYLSjiTbLu\"]},\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"daibond/ITreasury.sol": {
				"ITreasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_profit",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mintRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "tokenValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,address,uint256)": "bc157ac1",
							"mintRewards(address,uint256)": "6a20de92",
							"tokenValue(address,uint256)": "f1821783"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokenValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"daibond/ITreasury.sol\":\"ITreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"daibond/ITreasury.sol\":{\"keccak256\":\"0xe211e5efbbf1dc57ff63f1217f97a8fe0188333f2b4d15204e95ad885334373c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://459661ef94605dcda52af05c18beb5543044fd6ec589ff85cd1d8124bfc76e2f\",\"dweb:/ipfs/Qmauo3czbPWty97km7G93jsqdyW7gSCRxGK4s7a36LzTRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"daibond/BondDepository.sol": {
				"ast": {
					"absolutePath": "daibond/BondDepository.sol",
					"exportedSymbols": {
						"Address": [
							868
						],
						"Counters": [
							1486
						],
						"ERC20": [
							1415
						],
						"ERC20Permit": [
							1649
						],
						"ExodusBondDepository": [
							3561
						],
						"FixedPoint": [
							2206
						],
						"FullMath": [
							2065
						],
						"IBondCalculator": [
							2223
						],
						"IERC20": [
							940
						],
						"IERC2612Permit": [
							1440
						],
						"IOwnable": [
							20
						],
						"IStaking": [
							2233
						],
						"IStakingHelper": [
							2241
						],
						"ITreasury": [
							3591
						],
						"Ownable": [
							149
						],
						"SafeERC20": [
							1854
						],
						"SafeMath": [
							435
						]
					},
					"id": 3562,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:0"
						},
						{
							"absolutePath": "daibond/ITreasury.sol",
							"file": "./ITreasury.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 3562,
							"sourceUnit": 3592,
							"src": "70:44:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ITreasury",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "79:9:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IOwnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0505c8c9",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "policy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "182:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:9:0"
									},
									"scope": 20,
									"src": "141:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "089208d8",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:0"
									},
									"scope": 20,
									"src": "197:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46f68ee9",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "266:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:19:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:0"
									},
									"scope": 20,
									"src": "242:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a96ac0a",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:0:0"
									},
									"scope": 20,
									"src": "300:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3562,
							"src": "116:221:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "IOwnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 20,
										"src": "359:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwnable_$20",
											"typeString": "contract IOwnable"
										}
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "359:8:0"
								}
							],
							"contractDependencies": [
								20
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 149,
							"linearizedBaseContracts": [
								149,
								20
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "374:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "403:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "403:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 32,
									"name": "OwnershipPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "467:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "506:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:79:0"
									},
									"src": "436:101:0"
								},
								{
									"anonymous": false,
									"id": 38,
									"name": "OwnershipPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "573:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "612:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:79:0"
									},
									"src": "542:101:0"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "663:86:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "673:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 42,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "682:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "682:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "673:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "673:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "731:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 47,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "723:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "723:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 51,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 46,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "707:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "707:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "EmitStatement",
												"src": "702:40:0"
											}
										]
									},
									"id": 55,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:0:0"
									},
									"scope": 149,
									"src": "649:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "812:30:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "829:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "822:13:0"
											}
										]
									},
									"functionSelector": "0505c8c9",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "policy",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "785:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "803:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:9:0"
									},
									"scope": 149,
									"src": "755:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "870:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 67,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 68,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "898:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "898:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "888:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "910:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "880:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "880:65:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "955:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyPolicy",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:2:0"
									},
									"src": "848:115:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										11
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1034:86:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 83,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1065:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1081:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1073:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 84,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1073:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1073:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 82,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1049:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "EmitStatement",
												"src": "1044:40:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1094:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1111:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 91,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1103:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1103:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1094:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1094:19:0"
											}
										]
									},
									"functionSelector": "089208d8",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 80,
											"modifierName": {
												"id": 79,
												"name": "onlyPolicy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 76,
												"src": "1023:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:10:0"
										}
									],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 78,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1014:8:0"
									},
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:0"
									},
									"scope": 149,
									"src": "969:151:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1240:205:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 107,
																"name": "newOwner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "1271:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1292:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 108,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1284:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1284:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1271:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1250:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1250:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1250:108:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 117,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1389:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 118,
															"name": "newOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1397:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 116,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1373:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "EmitStatement",
												"src": "1368:39:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1417:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "newOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1429:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1417:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1417:21:0"
											}
										]
									},
									"functionSelector": "46f68ee9",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"modifierName": {
												"id": 103,
												"name": "onlyPolicy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 76,
												"src": "1225:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1225:10:0"
										}
									],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 102,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1208:8:0"
									},
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1150:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:19:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:0:0"
									},
									"scope": 149,
									"src": "1126:319:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1501:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 131,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1519:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1519:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 133,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1533:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1519:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1544:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															},
															"value": "Ownable: must be new owner to pull"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1511:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1511:70:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 139,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1612:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1620:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 138,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1596:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "EmitStatement",
												"src": "1591:39:0"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1640:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1649:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1640:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1640:18:0"
											}
										]
									},
									"functionSelector": "5a96ac0a",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1492:8:0"
									},
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1501:0:0"
									},
									"scope": 149,
									"src": "1451:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3562,
							"src": "339:1328:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1759:109:0",
										"statements": [
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "1769:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 160,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "1781:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 161,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1769:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 165,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "1804:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 166,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "1809:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1804:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1812:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1796:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1796:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1796:46:0"
											},
											{
												"expression": {
													"id": 171,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 159,
													"src": "1860:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 157,
												"id": 172,
												"nodeType": "Return",
												"src": "1853:8:0"
											}
										]
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1705:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1716:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:22:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1750:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1749:9:0"
									},
									"scope": 435,
									"src": "1692:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1941:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "1962:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 185,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1965:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1968:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 183,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															190,
															217
														],
														"referencedDeclaration": 217,
														"src": "1958:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1958:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 182,
												"id": 188,
												"nodeType": "Return",
												"src": "1951:50:0"
											}
										]
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:22:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1932:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:9:0"
									},
									"scope": 435,
									"src": "1874:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2139:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 202,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "2157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 203,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "2162:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2157:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2165:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2149:29:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "2188:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2200:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 211,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2204:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2200:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2188:17:0"
											},
											{
												"expression": {
													"id": 214,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 209,
													"src": "2223:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 200,
												"id": 215,
												"nodeType": "Return",
												"src": "2216:8:0"
											}
										]
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2036:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2055:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2074:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:80:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2130:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:9:0"
									},
									"scope": 435,
									"src": "2014:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2303:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2326:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 228,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2332:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 226,
														"name": "sub32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															233,
															260
														],
														"referencedDeclaration": 260,
														"src": "2320:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint32,uint32,string memory) pure returns (uint32)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 225,
												"id": 231,
												"nodeType": "Return",
												"src": "2313:52:0"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2252:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 218,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2262:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 220,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2262:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2251:20:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2295:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 223,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2295:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:8:0"
									},
									"scope": 435,
									"src": "2237:135:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "2502:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 245,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2520:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 246,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "2525:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "2520:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 248,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2528:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2512:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "2512:29:0"
											},
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 259,
														"src": "2551:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 251,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 253,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2562:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 254,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2566:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2562:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2551:16:0"
											},
											{
												"expression": {
													"id": 257,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "2585:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 243,
												"id": 258,
												"nodeType": "Return",
												"src": "2578:8:0"
											}
										]
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2402:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 234,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2420:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 236,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2420:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2438:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2438:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:78:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2494:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 241,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:8:0"
									},
									"scope": 435,
									"src": "2378:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2666:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2680:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2680:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2676:45:0",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "2688:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 268,
															"id": 273,
															"nodeType": "Return",
															"src": "2702:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 293,
														"src": "2731:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2743:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2731:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 283,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "2766:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 284,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "2770:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2766:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2766:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2778:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2758:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2758:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "2758:56:0"
											},
											{
												"expression": {
													"id": 291,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 277,
													"src": "2832:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 292,
												"nodeType": "Return",
												"src": "2825:8:0"
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2623:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2611:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2657:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:9:0"
									},
									"scope": 435,
									"src": "2599:241:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2913:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2934:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 305,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "2937:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2940:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 303,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															310,
															337
														],
														"referencedDeclaration": 337,
														"src": "2930:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2930:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 308,
												"nodeType": "Return",
												"src": "2923:46:0"
											}
										]
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2859:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2870:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:22:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2904:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:9:0"
									},
									"scope": 435,
									"src": "2846:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "3107:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "3125:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3129:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3125:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 325,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3132:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "3117:28:0"
											},
											{
												"assignments": [
													329
												],
												"declarations": [
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "3155:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3155:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 330,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "3167:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 331,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "3171:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3155:17:0"
											},
											{
												"expression": {
													"id": 334,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 329,
													"src": "3189:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 320,
												"id": 335,
												"nodeType": "Return",
												"src": "3182:8:0"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3023:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3042:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3042:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2994:80:0"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3098:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3097:9:0"
									},
									"scope": 435,
									"src": "2982:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "3270:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3291:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 348,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3294:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3297:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 346,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															353,
															376
														],
														"referencedDeclaration": 376,
														"src": "3287:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 351,
												"nodeType": "Return",
												"src": "3280:44:0"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "3216:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "3227:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3215:22:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "3261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:9:0"
									},
									"scope": 435,
									"src": "3203:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "3462:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "3480:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3485:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3480:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3488:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3472:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "3472:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 371,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3518:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 372,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "3522:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3518:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 363,
												"id": 374,
												"nodeType": "Return",
												"src": "3511:12:0"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3359:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3378:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3397:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3397:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:80:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3453:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:9:0"
									},
									"scope": 435,
									"src": "3337:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3596:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "3610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3610:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 423,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3812:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3817:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3812:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 431,
													"nodeType": "IfStatement",
													"src": "3808:42:0",
													"trueBody": {
														"id": 430,
														"nodeType": "Block",
														"src": "3820:30:0",
														"statements": [
															{
																"expression": {
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 426,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "3834:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3838:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3834:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 429,
																"nodeType": "ExpressionStatement",
																"src": "3834:5:0"
															}
														]
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "3606:244:0",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "3617:185:0",
													"statements": [
														{
															"expression": {
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 386,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "3631:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 387,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "3635:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3631:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "3631:5:0"
														},
														{
															"assignments": [
																391
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 391,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 422,
																	"src": "3650:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3650:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 399,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 394,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 378,
																				"src": "3670:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3673:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 393,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				310,
																				337
																			],
																			"referencedDeclaration": 310,
																			"src": "3666:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3666:9:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3677:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 392,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "3662:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3662:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3650:29:0"
														},
														{
															"body": {
																"id": 420,
																"nodeType": "Block",
																"src": "3707:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 403,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "3725:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 404,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "3729:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3725:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 406,
																		"nodeType": "ExpressionStatement",
																		"src": "3725:5:0"
																	},
																	{
																		"expression": {
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 407,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "3748:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 411,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 378,
																										"src": "3764:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 412,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 391,
																										"src": "3767:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 410,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										310,
																										337
																									],
																									"referencedDeclaration": 310,
																									"src": "3760:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 413,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3760:9:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 414,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 391,
																								"src": "3771:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 409,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 174,
																							"src": "3756:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 415,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3756:17:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 416,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3775:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 408,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						310,
																						337
																					],
																					"referencedDeclaration": 310,
																					"src": "3752:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3752:25:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3748:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 419,
																		"nodeType": "ExpressionStatement",
																		"src": "3748:29:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 400,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "3700:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 401,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "3704:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 421,
															"nodeType": "WhileStatement",
															"src": "3693:99:0"
														}
													]
												}
											}
										]
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:11:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3585:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3584:11:0"
									},
									"scope": 435,
									"src": "3536:320:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3562,
							"src": "1669:2189:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 868,
							"linearizedBaseContracts": [
								868
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "3948:180:0",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "3958:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"nodeType": "VariableDeclarationStatement",
												"src": "3958:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4045:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4059:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "4079:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "4067:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4059:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 437,
														"isOffset": false,
														"isSlot": false,
														"src": "4079:7:0",
														"valueSize": 1
													},
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": false,
														"src": "4059:4:0",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "4036:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 446,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "4113:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4120:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4113:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 441,
												"id": 449,
												"nodeType": "Return",
												"src": "4106:15:0"
											}
										]
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3902:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:17:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3942:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3941:6:0"
									},
									"scope": 868,
									"src": "3882:246:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "4205:386:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 461,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4244:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$868",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$868",
																				"typeString": "library Address"
																			}
																		],
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4236:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 459,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4236:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4236:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4236:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 464,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "4261:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4236:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4281:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "4215:107:0"
											},
											{
												"assignments": [
													470,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "4411:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 469,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 471,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "4429:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4429:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 473,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "4451:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4429:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4429:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4410:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 479,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4514:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4472:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "4472:112:0"
											}
										]
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4153:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4153:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4152:43:0"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4205:0:0"
									},
									"scope": 868,
									"src": "4134:457:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "4706:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4736:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4744:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4750:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 493,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															500,
															519
														],
														"referencedDeclaration": 519,
														"src": "4723:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 492,
												"id": 498,
												"nodeType": "Return",
												"src": "4716:67:0"
											}
										]
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "4619:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "4635:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4635:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:35:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "4688:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4688:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:14:0"
									},
									"scope": 868,
									"src": "4597:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "4943:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4983:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "4991:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4997:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 515,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5000:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 511,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "4960:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4960:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 510,
												"id": 517,
												"nodeType": "Return",
												"src": "4953:60:0"
											}
										]
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "4827:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "4851:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 503,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4851:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "4878:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4817:93:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "4929:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4929:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:14:0"
									},
									"scope": 868,
									"src": "4796:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "5169:201:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5237:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "5261:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 533,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "5283:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5306:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 530,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															538,
															587
														],
														"referencedDeclaration": 587,
														"src": "5198:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5198:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 536,
												"nodeType": "Return",
												"src": "5179:184:0"
											}
										]
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5066:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5090:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5090:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5117:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5056:80:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5155:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5155:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5154:14:0"
									},
									"scope": 868,
									"src": "5026:344:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "5555:436:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 554,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5594:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$868",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$868",
																				"typeString": "library Address"
																			}
																		],
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5586:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 552,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5586:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5586:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5586:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 557,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "5611:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5586:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5630:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5565:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5565:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "5565:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 564,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "5709:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 563,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "5698:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5698:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5718:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5690:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5690:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "5690:60:0"
											},
											{
												"assignments": [
													570,
													572
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "5821:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 569,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5821:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "5835:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 571,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5835:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"arguments": [
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "5901:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 573,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "5862:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5862:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 575,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "5881:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5862:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5820:95:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 582,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "5959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 583,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5971:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 580,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5932:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5932:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 550,
												"id": 585,
												"nodeType": "Return",
												"src": "5925:59:0"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5416:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5440:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5440:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5467:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5490:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5406:116:0"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5541:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:14:0"
									},
									"scope": 868,
									"src": "5376:615:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "6179:834:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 602,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "6208:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 601,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "6197:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6197:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6217:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6189:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6189:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "6189:60:0"
											},
											{
												"assignments": [
													608,
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "6320:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 607,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6320:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "6334:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 609,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6334:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "6403:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 611,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "6361:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6361:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 613,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "6380:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6361:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6361:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6319:98:0"
											},
											{
												"condition": {
													"id": 618,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 608,
													"src": "6431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "6488:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 622,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6572:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6572:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6592:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6572:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 632,
																"nodeType": "Block",
																"src": "6944:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 629,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "6969:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 628,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6962:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6962:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 631,
																		"nodeType": "ExpressionStatement",
																		"src": "6962:20:0"
																	}
																]
															},
															"id": 633,
															"nodeType": "IfStatement",
															"src": "6568:429:0",
															"trueBody": {
																"id": 627,
																"nodeType": "Block",
																"src": "6595:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6779:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6801:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6830:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6824:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6824:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6805:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6873:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6877:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6869:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6869:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6890:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6862:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6862:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6862:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 610,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6830:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 610,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6877:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 626,
																		"nodeType": "InlineAssembly",
																		"src": "6770:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "6427:580:0",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "6440:42:0",
													"statements": [
														{
															"expression": {
																"id": 619,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "6461:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 599,
															"id": 620,
															"nodeType": "Return",
															"src": "6454:17:0"
														}
													]
												}
											}
										]
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6062:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6089:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6115:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 594,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6028:119:0"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6165:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 597,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:14:0"
									},
									"scope": 868,
									"src": "5997:1016:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "7147:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7212:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "7236:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7258:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 646,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															653,
															687
														],
														"referencedDeclaration": 687,
														"src": "7176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7176:135:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 645,
												"id": 651,
												"nodeType": "Return",
												"src": "7157:154:0"
											}
										]
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "7047:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "7063:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7046:35:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "7129:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7129:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7128:14:0"
									},
									"scope": 868,
									"src": "7019:299:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "7482:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 666,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "7511:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 665,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "7500:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7500:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7520:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7492:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "7492:67:0"
											},
											{
												"assignments": [
													672,
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "7630:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 671,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7630:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "7644:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 673,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7644:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "7689:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 675,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "7671:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7671:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7629:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "7729:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 682,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7738:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 683,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "7750:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 680,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "7711:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 663,
												"id": 685,
												"nodeType": "Return",
												"src": "7704:59:0"
											}
										]
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "7361:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "7385:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7385:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "7412:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7412:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7351:93:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "7468:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7467:14:0"
									},
									"scope": 868,
									"src": "7324:446:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "7893:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "7960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "7984:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8006:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 696,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															703,
															737
														],
														"referencedDeclaration": 737,
														"src": "7922:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7922:139:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 695,
												"id": 701,
												"nodeType": "Return",
												"src": "7903:158:0"
											}
										]
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "7806:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "7822:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7805:35:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "7875:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7875:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7874:14:0"
									},
									"scope": 868,
									"src": "7776:292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8229:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 716,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "8258:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 715,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "8247:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8247:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8267:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8239:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8239:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "8239:69:0"
											},
											{
												"assignments": [
													722,
													724
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8379:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 721,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8379:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 724,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8393:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 723,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8393:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [
														{
															"id": 727,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8440:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 725,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "8420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8420:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8420:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "8480:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 732,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "8489:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 733,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8501:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 730,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "8462:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8462:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 713,
												"id": 735,
												"nodeType": "Return",
												"src": "8455:59:0"
											}
										]
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8113:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8137:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8137:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8164:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 708,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8164:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8103:93:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8215:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8214:14:0"
									},
									"scope": 868,
									"src": "8074:447:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "8687:373:0",
										"statements": [
											{
												"condition": {
													"id": 748,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "8701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 764,
													"nodeType": "Block",
													"src": "8758:296:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 752,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "8776:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8776:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8796:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8776:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 762,
																"nodeType": "Block",
																"src": "8991:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 759,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 743,
																					"src": "9016:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 758,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9009:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9009:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 761,
																		"nodeType": "ExpressionStatement",
																		"src": "9009:20:0"
																	}
																]
															},
															"id": 763,
															"nodeType": "IfStatement",
															"src": "8772:272:0",
															"trueBody": {
																"id": 757,
																"nodeType": "Block",
																"src": "8799:186:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8826:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8848:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8877:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8871:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8871:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8852:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8920:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8924:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8916:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8916:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8937:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8909:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8909:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8909:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 741,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8877:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 741,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8924:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 756,
																		"nodeType": "InlineAssembly",
																		"src": "8817:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 765,
												"nodeType": "IfStatement",
												"src": "8697:357:0",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "8710:42:0",
													"statements": [
														{
															"expression": {
																"id": 749,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "8731:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 747,
															"id": 750,
															"nodeType": "Return",
															"src": "8724:17:0"
														}
													]
												}
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "8563:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8563:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "8585:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8585:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "8618:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8553:97:0"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "8673:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8673:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8672:14:0"
									},
									"scope": 868,
									"src": "8527:533:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "9175:415:0",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "_bytes",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "9185:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 774,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 780,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "9218:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 778,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9210:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9210:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 776,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9202:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9202:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9185:43:0"
											},
											{
												"assignments": [
													785
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "HEX",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "9238:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 784,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9238:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"hexValue": "30313233343536373839616263646566",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9257:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
														"typeString": "literal_string \"0123456789abcdef\""
													},
													"value": "0123456789abcdef"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9238:37:0"
											},
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "_addr",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "9285:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 788,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9285:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3432",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9316:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															},
															"value": "42"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															}
														],
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9306:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 790,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9306:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9285:34:0"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 795,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "9330:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 797,
														"indexExpression": {
															"hexValue": "30",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9336:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9330:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9341:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "9330:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "9330:14:0"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 801,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "9354:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 803,
														"indexExpression": {
															"hexValue": "31",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9360:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9354:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9365:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "9354:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "9354:14:0"
											},
											{
												"body": {
													"id": 859,
													"nodeType": "Block",
													"src": "9412:141:0",
													"statements": [
														{
															"expression": {
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 817,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "9426:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 823,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "32",
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9432:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 819,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "9436:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9440:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9436:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9432:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9426:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 824,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "9445:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 835,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 827,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 775,
																						"src": "9455:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 831,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 830,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 828,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 808,
																							"src": "9462:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 829,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9466:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9462:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9455:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9473:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "9455:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9449:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 825,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9449:5:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9449:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9445:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9426:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "9426:50:0"
														},
														{
															"expression": {
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 838,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "9490:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 844,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9496:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 840,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "9500:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9504:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9500:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9496:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9490:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 845,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "9509:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 856,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 848,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 775,
																						"src": "9519:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 852,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 849,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 808,
																							"src": "9526:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 850,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9530:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9526:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9519:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"hexValue": "30783066",
																					"id": 853,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9536:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0x0f"
																				},
																				"src": "9519:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9513:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 846,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9513:5:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9513:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9509:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9490:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "9490:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 811,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "9399:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3230",
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9403:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "9399:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"initializationExpression": {
													"assignments": [
														808
													],
													"declarations": [
														{
															"constant": false,
															"id": 808,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 860,
															"src": "9384:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 807,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9384:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 810,
													"initialValue": {
														"hexValue": "30",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9396:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9384:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9407:3:0",
														"subExpression": {
															"id": 814,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "9407:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 816,
													"nodeType": "ExpressionStatement",
													"src": "9407:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9379:174:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "9577:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9570:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 861,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9570:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9570:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 773,
												"id": 865,
												"nodeType": "Return",
												"src": "9563:20:0"
											}
										]
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "9091:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9090:18:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "9156:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9156:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9155:15:0"
									},
									"scope": 868,
									"src": "9066:524:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3562,
							"src": "3860:5732:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 940,
							"linearizedBaseContracts": [
								940
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9634:2:0"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "9660:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 870,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9660:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9659:7:0"
									},
									"scope": 940,
									"src": "9617:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9693:2:0"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "9719:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:9:0"
									},
									"scope": 940,
									"src": "9673:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "9753:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9752:17:0"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "9793:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9792:9:0"
									},
									"scope": 940,
									"src": "9734:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "9826:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "9845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9825:35:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "9895:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9895:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9894:6:0"
									},
									"scope": 940,
									"src": "9808:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "9926:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "9941:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9925:32:0"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "10005:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10004:9:0"
									},
									"scope": 940,
									"src": "9907:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "10037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "10054:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10036:33:0"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "10088:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10087:6:0"
									},
									"scope": 940,
									"src": "10020:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "10131:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "10155:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "10182:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10121:81:0"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "10221:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 920,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10221:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10220:6:0"
									},
									"scope": 940,
									"src": "10100:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 931,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "10248:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "10270:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "10290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10247:57:0"
									},
									"src": "10233:72:0"
								},
								{
									"anonymous": false,
									"id": 939,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "10335:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "10366:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "10399:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10325:93:0"
									},
									"src": "10311:108:0"
								}
							],
							"scope": 3562,
							"src": "9594:827:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 941,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 940,
										"src": "10450:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$940",
											"typeString": "contract IERC20"
										}
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "10450:6:0"
								}
							],
							"contractDependencies": [
								940
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1415,
							"linearizedBaseContracts": [
								1415,
								940
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 945,
									"libraryName": {
										"id": 943,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "10469:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$435",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "10463:27:0",
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10482:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 950,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "10535:90:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 946,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "10535:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 948,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "10612:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 947,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "10602:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10602:23:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 954,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "10632:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 953,
										"keyType": {
											"id": 951,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10640:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10632:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 952,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "10651:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 960,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "10685:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 959,
										"keyType": {
											"id": 955,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10693:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10685:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 958,
											"keyType": {
												"id": 956,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10712:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "10704:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 957,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10723:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 962,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "10760:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 961,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10760:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 964,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "10796:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 963,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10796:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 966,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "10824:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 965,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10824:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 968,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "10854:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 967,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "10854:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "10988:88:0",
										"statements": [
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "10998:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "11006:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10998:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "10998:13:0"
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 981,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "11021:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "11031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11021:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "11021:17:0"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "11048:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "11060:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "11048:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "11048:21:0"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "10906:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10906:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "10935:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 971,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10935:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "10966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 973,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10966:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10896:91:0"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10988:0:0"
									},
									"scope": 1415,
									"src": "10885:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "11134:29:0",
										"statements": [
											{
												"expression": {
													"id": 995,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 964,
													"src": "11151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 994,
												"id": 996,
												"nodeType": "Return",
												"src": "11144:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11095:2:0"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "11119:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 992,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11118:15:0"
									},
									"scope": 1415,
									"src": "11082:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11223:31:0",
										"statements": [
											{
												"expression": {
													"id": 1003,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 966,
													"src": "11240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1004,
												"nodeType": "Return",
												"src": "11233:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11184:2:0"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11208:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1000,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11208:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11207:15:0"
									},
									"scope": 1415,
									"src": "11169:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										873
									],
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "11317:33:0",
										"statements": [
											{
												"expression": {
													"id": 1012,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "11334:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1013,
												"nodeType": "Return",
												"src": "11327:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1008,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11292:8:0"
									},
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11277:2:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "11310:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1009,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11310:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11309:7:0"
									},
									"scope": 1415,
									"src": "11260:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										878
									],
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "11418:36:0",
										"statements": [
											{
												"expression": {
													"id": 1021,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 962,
													"src": "11435:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1020,
												"id": 1022,
												"nodeType": "Return",
												"src": "11428:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1017,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11391:8:0"
									},
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11376:2:0"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "11409:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11408:9:0"
									},
									"scope": 1415,
									"src": "11356:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										885
									],
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "11587:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1032,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "11604:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1034,
													"indexExpression": {
														"id": 1033,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "11614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11604:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1031,
												"id": 1035,
												"nodeType": "Return",
												"src": "11597:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1028,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11548:8:0"
									},
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "11479:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11478:17:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "11574:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11573:9:0"
									},
									"scope": 1415,
									"src": "11460:169:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										894
									],
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "11763:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "11783:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11783:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1050,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11795:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "11806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "11773:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11773:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "11773:40:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1046,
												"id": 1055,
												"nodeType": "Return",
												"src": "11823:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1043,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11727:8:0"
									},
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "11653:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "11672:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11652:35:0"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "11753:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11752:6:0"
									},
									"scope": 1415,
									"src": "11635:206:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										903
									],
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "11989:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1067,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "12006:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1069,
														"indexExpression": {
															"id": 1068,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "12018:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12006:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1071,
													"indexExpression": {
														"id": 1070,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "12025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12006:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1072,
												"nodeType": "Return",
												"src": "11999:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1063,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11950:8:0"
									},
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "11866:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "11881:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11865:32:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "11976:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11975:9:0"
									},
									"scope": 1415,
									"src": "11847:193:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										912
									],
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "12171:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "12190:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12190:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1087,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "12202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "12181:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12181:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "12181:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1083,
												"id": 1092,
												"nodeType": "Return",
												"src": "12228:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12135:8:0"
									},
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "12063:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "12080:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12062:33:0"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "12161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12160:6:0"
									},
									"scope": 1415,
									"src": "12046:200:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										923
									],
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "12394:293:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "12414:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "12422:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "12433:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1106,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "12404:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12404:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "12404:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1113,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "12472:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "12492:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12492:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1123,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "12569:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12593:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1116,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "12516:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1118,
																		"indexExpression": {
																			"id": 1117,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "12528:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12516:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1121,
																	"indexExpression": {
																		"expression": {
																			"id": 1119,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "12536:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12536:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12516:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 217,
																"src": "12516:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12516:133:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "12450:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12450:209:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "12450:209:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12676:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1105,
												"id": 1129,
												"nodeType": "Return",
												"src": "12669:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1102,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12370:8:0"
									},
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "12283:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "12307:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "12334:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12273:81:0"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "12388:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12387:6:0"
									},
									"scope": 1415,
									"src": "12252:435:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "12815:163:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "12847:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "12871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1151,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "12929:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1144,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "12892:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1147,
																		"indexExpression": {
																			"expression": {
																				"id": 1145,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "12904:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "12904:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12892:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1149,
																	"indexExpression": {
																		"id": 1148,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "12916:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12892:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 174,
																"src": "12892:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12892:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1140,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "12825:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12825:125:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "12825:125:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1139,
												"id": 1156,
												"nodeType": "Return",
												"src": "12960:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12737:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12719:37:0"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "12805:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12805:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12804:6:0"
									},
									"scope": 1415,
									"src": "12693:285:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "13111:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1168,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13143:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13143:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1170,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "13167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1178,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "13242:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13275:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1171,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "13188:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1174,
																		"indexExpression": {
																			"expression": {
																				"id": 1172,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "13200:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "13200:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13188:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1176,
																	"indexExpression": {
																		"id": 1175,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "13212:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13188:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 217,
																"src": "13188:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13188:140:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "13121:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13121:217:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "13121:217:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13355:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1166,
												"id": 1184,
												"nodeType": "Return",
												"src": "13348:11:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "13011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "13028:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13010:42:0"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "13101:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13100:6:0"
									},
									"scope": 1415,
									"src": "12984:382:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "13489:477:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1196,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "13507:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13525:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13517:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1197,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13517:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13517:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13507:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13529:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13499:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13499:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "13499:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "13587:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13608:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13600:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13600:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13600:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13587:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13612:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13579:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13579:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "13579:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "13682:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "13690:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "13701:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "13661:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13661:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "13661:47:0"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1221,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "13719:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1223,
														"indexExpression": {
															"id": 1222,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "13729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13719:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1228,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "13774:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13794:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1224,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "13739:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1226,
																"indexExpression": {
																	"id": 1225,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "13749:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13739:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 217,
															"src": "13739:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13739:105:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13719:125:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "13719:125:0"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1233,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "13854:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1235,
														"indexExpression": {
															"id": 1234,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "13864:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13854:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1240,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "13902:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1236,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "13877:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1238,
																"indexExpression": {
																	"id": 1237,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "13887:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13877:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 174,
															"src": "13877:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13877:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13854:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "13854:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1245,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "13933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "13941:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "13952:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "13924:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13924:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "EmitStatement",
												"src": "13919:40:0"
											}
										]
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13400:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13424:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13451:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13390:81:0"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13489:0:0"
									},
									"scope": 1415,
									"src": "13372:594:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "14040:322:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"name": "account_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "14058:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14078:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14070:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1260,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14070:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14070:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14058:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14082:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14050:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14050:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "14050:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1271,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "14155:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1415",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$1415",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1269,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14147:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "14162:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1274,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "14172:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "14126:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14126:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "14126:55:0"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1277,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "14191:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1280,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "14223:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1278,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "14206:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 174,
															"src": "14206:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14206:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14191:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "14191:41:0"
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1284,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "14242:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1286,
														"indexExpression": {
															"id": 1285,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "14252:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14242:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1291,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "14288:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1287,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "14264:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1289,
																"indexExpression": {
																	"id": 1288,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "14274:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14264:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 174,
															"src": "14264:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14264:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14242:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "14242:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1298,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "14329:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1415",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$1415",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14321:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1296,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14321:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14321:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1300,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "14336:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "14346:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1295,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "14312:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14312:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "EmitStatement",
												"src": "14307:48:0"
											}
										]
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "13987:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ammount_",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "14005:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13986:36:0"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14040:0:0"
									},
									"scope": 1415,
									"src": "13972:390:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "14433:379:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "14451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14470:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14462:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1314,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14462:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14462:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14451:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14474:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14443:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "14443:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "14542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14559:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14551:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14551:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14551:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1328,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "14563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1322,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "14521:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14521:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "14521:49:0"
											},
											{
												"expression": {
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1331,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "14581:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1333,
														"indexExpression": {
															"id": 1332,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "14591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14581:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1338,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "14638:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14658:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1334,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "14602:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1336,
																"indexExpression": {
																	"id": 1335,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "14612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14602:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 217,
															"src": "14602:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14602:102:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14581:123:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "14581:123:0"
											},
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1343,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "14714:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1346,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "14746:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1344,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "14729:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "14729:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14729:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14714:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "14714:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1351,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "14777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14794:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14786:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14786:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "14798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1350,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "14768:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14768:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "14763:42:0"
											}
										]
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "14383:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "14400:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14382:33:0"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14433:0:0"
									},
									"scope": 1415,
									"src": "14368:444:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1403,
										"nodeType": "Block",
										"src": "14931:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1370,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "14949:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14966:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14958:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1371,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14958:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14958:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14949:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14970:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14941:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "14941:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1380,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "15027:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15038:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1381,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15038:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15038:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15027:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15050:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15019:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "15019:68:0"
											},
											{
												"expression": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1389,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "15098:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1392,
															"indexExpression": {
																"id": 1390,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "15110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15098:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1393,
														"indexExpression": {
															"id": 1391,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "15117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15098:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1394,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "15128:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15098:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "15098:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1398,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "15158:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1399,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "15165:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "15174:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1397,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "15149:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15149:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "EmitStatement",
												"src": "15144:37:0"
											}
										]
									},
									"id": 1404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "14845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "14868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "14893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14835:78:0"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14931:0:0"
									},
									"scope": 1415,
									"src": "14818:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "15316:2:0",
										"statements": []
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "15233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "15256:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "15277:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15223:75:0"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15316:0:0"
									},
									"scope": 1415,
									"src": "15194:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3562,
							"src": "10423:4897:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1440,
							"linearizedBaseContracts": [
								1440
							],
							"name": "IERC2612Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d505accf",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "15378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "15401:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "15426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "15450:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "15476:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15476:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "15493:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "15512:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15368:159:0"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15536:0:0"
									},
									"scope": 1440,
									"src": "15353:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "15559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15558:15:0"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "15597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15596:9:0"
									},
									"scope": 1440,
									"src": "15543:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3562,
							"src": "15322:286:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1443,
									"libraryName": {
										"id": 1441,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "15639:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$435",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15633:27:0",
									"typeName": {
										"id": 1442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15652:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 1446,
									"members": [
										{
											"constant": false,
											"id": 1445,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 1446,
											"src": "15691:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1444,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "15691:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 1486,
									"src": "15666:60:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "15806:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1453,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "15823:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1445,
													"src": "15823:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1455,
												"nodeType": "Return",
												"src": "15816:21:0"
											}
										]
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "15749:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1447,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1446,
													"src": "15749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15748:25:0"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "15797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15796:9:0"
									},
									"scope": 1486,
									"src": "15732:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "15903:36:0",
										"statements": [
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1462,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "15913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1445,
														"src": "15913:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15931:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15913:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "15913:19:0"
											}
										]
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "15869:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1458,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1446,
													"src": "15869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15868:25:0"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15903:0:0"
									},
									"scope": 1486,
									"src": "15850:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "15998:55:0",
										"statements": [
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1474,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "16008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1445,
														"src": "16008:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16044:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 1477,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "16025:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1445,
																"src": "16025:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "16025:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16025:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16008:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "16008:38:0"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "15964:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1470,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1446,
													"src": "15964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15963:25:0"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15998:0:0"
									},
									"scope": 1486,
									"src": "15945:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3562,
							"src": "15610:445:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1487,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1415,
										"src": "16090:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1415",
											"typeString": "contract ERC20"
										}
									},
									"id": 1488,
									"nodeType": "InheritanceSpecifier",
									"src": "16090:5:0"
								},
								{
									"baseName": {
										"id": 1489,
										"name": "IERC2612Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1440,
										"src": "16097:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612Permit_$1440",
											"typeString": "contract IERC2612Permit"
										}
									},
									"id": 1490,
									"nodeType": "InheritanceSpecifier",
									"src": "16097:14:0"
								}
							],
							"contractDependencies": [
								940,
								1415,
								1440
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1649,
							"linearizedBaseContracts": [
								1649,
								1440,
								1415,
								940
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1493,
									"libraryName": {
										"id": 1491,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1486,
										"src": "16124:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$1486",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16118:36:0",
									"typeName": {
										"id": 1492,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1446,
										"src": "16137:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1497,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1649,
									"src": "16160:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1446_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1496,
										"keyType": {
											"id": 1494,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "16168:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "16160:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1446_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 1495,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1446,
											"src": "16179:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$1446_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 1500,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1649,
									"src": "16323:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1498,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "16323:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 1499,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16373:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 1502,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 1649,
									"src": "16446:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1501,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "16446:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "16498:480:0",
										"statements": [
											{
												"assignments": [
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "16508:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1507,
												"nodeType": "VariableDeclarationStatement",
												"src": "16508:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16542:44:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16556:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "16567:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "16567:9:0"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "16556:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1506,
														"isOffset": false,
														"isSlot": false,
														"src": "16556:7:0",
														"valueSize": 1
													}
												],
												"id": 1508,
												"nodeType": "InlineAssembly",
												"src": "16533:53:0"
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1509,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "16596:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16697:84:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 1513,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "16666:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16666:133:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1519,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 998,
																							"src": "16833:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 1520,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16833:6:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "16827:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1517,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "16827:5:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16827:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1516,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "16817:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16817:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1526,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16875:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 1525,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "16869:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1524,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "16869:5:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16869:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1523,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "16859:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16859:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1529,
																		"name": "chainID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "16909:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1532,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "16942:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Permit_$1649",
																					"typeString": "contract ERC20Permit"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Permit_$1649",
																					"typeString": "contract ERC20Permit"
																				}
																			],
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16934:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1530,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16934:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16934:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1511,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "16638:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "16638:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16638:323:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1510,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "16615:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16615:356:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "16596:375:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "16596:375:0"
											}
										]
									},
									"id": 1539,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16495:2:0"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16498:0:0"
									},
									"scope": 1649,
									"src": "16484:494:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1432
									],
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "17183:726:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1558,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "17201:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "17201:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1560,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1547,
																"src": "17220:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17201:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5065726d69743a206578706972656420646561646c696e65",
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17230:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															},
															"value": "Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															}
														],
														"id": 1557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17193:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "17193:64:0"
											},
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "hashStruct",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "17268:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1565,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1582,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1570,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "17340:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1571,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "17373:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1572,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1543,
																	"src": "17396:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1573,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "17421:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"baseExpression": {
																				"id": 1574,
																				"name": "_nonces",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "17445:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1446_storage_$",
																					"typeString": "mapping(address => struct Counters.Counter storage ref)"
																				}
																			},
																			"id": 1576,
																			"indexExpression": {
																				"id": 1575,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1541,
																				"src": "17453:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17445:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$1446_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1457,
																		"src": "17445:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1446_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17445:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1579,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "17487:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1568,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17312:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "17312:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17312:197:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1567,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "17289:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17289:230:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17268:251:0"
											},
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "_hash",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "17530:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1583,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "307831393031",
																			"id": 1590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17593:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			},
																			"value": "0x1901"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			}
																		],
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17586:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1588,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "17586:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17586:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 1592,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "17602:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1593,
																	"name": "hashStruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "17620:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1586,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17569:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "17569:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17569:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1585,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "17546:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17546:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17530:111:0"
											},
											{
												"assignments": [
													1598
												],
												"declarations": [
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "17652:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1597,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17652:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"arguments": [
														{
															"id": 1600,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "17679:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1601,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "17686:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1602,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "17689:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1603,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "17692:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1599,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "17669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17669:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17652:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1607,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "17725:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17743:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17735:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1608,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17735:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17735:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "17725:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "17749:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1614,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "17759:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17749:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17725:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17778:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															},
															"value": "ZeroSwapPermit: Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															}
														],
														"id": 1606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17704:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "17704:119:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1620,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "17834:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1446_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1622,
															"indexExpression": {
																"id": 1621,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "17842:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17834:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1446_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1469,
														"src": "17834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1446_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1446_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "17834:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "17879:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1628,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "17886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "17895:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1626,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "17870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17870:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "17870:32:0"
											}
										]
									},
									"functionSelector": "d505accf",
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1555,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17174:8:0"
									},
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "17009:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "17032:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "17057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "17081:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "17107:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1548,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "17124:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "17143:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1552,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16999:159:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17183:0:0"
									},
									"scope": 1649,
									"src": "16984:925:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1439
									],
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "17985:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1641,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "18002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1446_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1643,
															"indexExpression": {
																"id": 1642,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1635,
																"src": "18010:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18002:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1446_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1457,
														"src": "18002:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1446_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18002:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1640,
												"id": 1646,
												"nodeType": "Return",
												"src": "17995:31:0"
											}
										]
									},
									"functionSelector": "7ecebe00",
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1637,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17958:8:0"
									},
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "17931:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17930:15:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "17976:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17975:9:0"
									},
									"scope": 1649,
									"src": "17915:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3562,
							"src": "16057:1978:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1854,
							"linearizedBaseContracts": [
								1854
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1652,
									"libraryName": {
										"id": 1650,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "18067:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$435",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "18061:27:0",
									"typeName": {
										"id": 1651,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18080:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1655,
									"libraryName": {
										"id": 1653,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 868,
										"src": "18099:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$868",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "18093:26:0",
									"typeName": {
										"id": 1654,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18111:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "18227:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "18270:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1668,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "18312:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$940",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 894,
																		"src": "18312:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "18312:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1671,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "18337:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1672,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "18341:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1666,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "18289:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18289:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18289:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1664,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "18237:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18237:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "18237:120:0"
											}
										]
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "18156:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$940",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1656,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "18156:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$940",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "18178:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "18198:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18146:71:0"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18227:0:0"
									},
									"scope": 1854,
									"src": "18125:239:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "18498:147:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1689,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "18541:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1692,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1679,
																			"src": "18583:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$940",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 923,
																		"src": "18583:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "18583:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1695,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "18612:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1696,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "18618:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1697,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "18622:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1690,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "18560:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18560:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18560:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1688,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "18508:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18508:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "18508:130:0"
											}
										]
									},
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "18405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$940",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1678,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "18405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$940",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "18427:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "18449:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "18469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18395:93:0"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18498:0:0"
									},
									"scope": 1854,
									"src": "18370:275:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "18757:314:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1712,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "18789:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18798:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "18789:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1715,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18788:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1720,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "18829:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1854",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1854",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1719,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "18821:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1718,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "18821:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1721,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18821:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1722,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1706,
																					"src": "18836:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1716,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1704,
																					"src": "18805:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$940",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 903,
																				"src": "18805:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18805:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18848:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "18805:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1726,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18804:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "18788:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18864:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18767:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "18767:163:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1732,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "18973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1735,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "19015:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$940",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 912,
																		"src": "19015:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19015:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1738,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "19039:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1739,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "19048:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1733,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "18992:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18992:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18992:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1731,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "18940:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18940:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "18940:124:0"
											}
										]
									},
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "18681:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$940",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1703,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "18681:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$940",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "18703:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "18728:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18671:76:0"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18757:0:0"
									},
									"scope": 1854,
									"src": "18651:420:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "19193:315:0",
										"statements": [
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "19203:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19203:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1766,
												"initialValue": {
													"arguments": [
														{
															"id": 1764,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "19283:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1759,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "19250:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1854",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1854",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19242:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1757,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "19242:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19242:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1761,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "19257:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1755,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "19226:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$940",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 903,
																"src": "19226:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19226:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 174,
														"src": "19226:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19226:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19203:95:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1768,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "19341:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1771,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "19400:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$940",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 912,
																		"src": "19400:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19400:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1774,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "19440:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1775,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "19465:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1769,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "19360:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19360:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19360:131:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1767,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "19308:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19308:193:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "19308:193:0"
											}
										]
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "19117:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$940",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1745,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "19117:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$940",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "19139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "19164:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19107:76:0"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19193:0:0"
									},
									"scope": 1854,
									"src": "19077:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "19630:372:0",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "19640:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1803,
												"initialValue": {
													"arguments": [
														{
															"id": 1800,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "19720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19739:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1795,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "19687:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1854",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1854",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19679:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1793,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "19679:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19679:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1797,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "19694:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1791,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "19663:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$940",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 903,
																"src": "19663:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19663:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 217,
														"src": "19663:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19663:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19640:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1805,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "19835:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1808,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "19894:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$940",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 912,
																		"src": "19894:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19894:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1811,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "19934:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1812,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "19959:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1806,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "19854:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19854:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19854:131:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1804,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "19802:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19802:193:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "19802:193:0"
											}
										]
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "19554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$940",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1781,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "19554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$940",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "19576:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "19601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19544:76:0"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19630:0:0"
									},
									"scope": 1854,
									"src": "19514:488:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "20078:434:0",
										"statements": [
											{
												"assignments": [
													1825
												],
												"declarations": [
													{
														"constant": false,
														"id": 1825,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "20088:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1824,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "20088:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1834,
												"initialValue": {
													"arguments": [
														{
															"id": 1831,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "20155:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20173:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1828,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "20122:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$940",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$940",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20114:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20114:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 519,
														"src": "20114:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20114:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20088:129:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1835,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "20231:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20231:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20231:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"nodeType": "IfStatement",
												"src": "20227:279:0",
												"trueBody": {
													"id": 1850,
													"nodeType": "Block",
													"src": "20254:252:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1842,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1825,
																				"src": "20400:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1844,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20413:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1843,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "20413:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1845,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "20412:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1840,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "20389:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "20389:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20389:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20437:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1839,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "20364:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20364:131:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "20364:131:0"
														}
													]
												}
											}
										]
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "20037:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$940",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1818,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "20037:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$940",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "20051:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20051:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20036:33:0"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20078:0:0"
									},
									"scope": 1854,
									"src": "20008:504:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3562,
							"src": "18037:2477:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2065,
							"linearizedBaseContracts": [
								2065
							],
							"name": "FullMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "20650:122:0",
										"statements": [
											{
												"assignments": [
													1866
												],
												"declarations": [
													{
														"constant": false,
														"id": 1866,
														"mutability": "mutable",
														"name": "mm",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "20660:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"arguments": [
														{
															"id": 1868,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "20680:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1869,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "20683:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "20694:2:0",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 1872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20695:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20686:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1870,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20686:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20686:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1867,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -16,
														"src": "20673:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20673:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20660:38:0"
											},
											{
												"expression": {
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1877,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "20708:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1878,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "20712:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1879,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "20716:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20712:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20708:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1882,
												"nodeType": "ExpressionStatement",
												"src": "20708:9:0"
											},
											{
												"expression": {
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1883,
														"name": "h",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "20727:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1884,
															"name": "mm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "20731:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1885,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "20736:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20731:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20727:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "20727:10:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1889,
														"name": "mm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "20751:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1890,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "20756:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20751:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1896,
												"nodeType": "IfStatement",
												"src": "20747:18:0",
												"trueBody": {
													"expression": {
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1892,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "20759:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20764:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "20759:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1895,
													"nodeType": "ExpressionStatement",
													"src": "20759:6:0"
												}
											}
										]
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fullMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "20556:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "20567:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20555:22:0"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "20624:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "20635:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20623:22:0"
									},
									"scope": 2065,
									"src": "20539:233:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2009,
										"nodeType": "Block",
										"src": "20889:352:0",
										"statements": [
											{
												"assignments": [
													1910
												],
												"declarations": [
													{
														"constant": false,
														"id": 1910,
														"mutability": "mutable",
														"name": "pow2",
														"nodeType": "VariableDeclaration",
														"scope": 2009,
														"src": "20899:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1915,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1911,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "20914:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "20918:2:0",
														"subExpression": {
															"id": 1912,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "20919:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20899:21:0"
											},
											{
												"expression": {
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1916,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "20930:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "/=",
													"rightHandSide": {
														"id": 1917,
														"name": "pow2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "20935:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20930:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "20930:9:0"
											},
											{
												"expression": {
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1920,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "20949:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "/=",
													"rightHandSide": {
														"id": 1921,
														"name": "pow2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "20954:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20949:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "20949:9:0"
											},
											{
												"expression": {
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1924,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "20968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1925,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "20973:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 1927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "20979:5:0",
																					"subExpression": {
																						"id": 1926,
																						"name": "pow2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1910,
																						"src": "20980:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1928,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "20978:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1929,
																			"name": "pow2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1910,
																			"src": "20988:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20978:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20995:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "20978:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1933,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20977:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20973:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20968:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "20968:29:0"
											},
											{
												"assignments": [
													1938
												],
												"declarations": [
													{
														"constant": false,
														"id": 1938,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 2009,
														"src": "21007:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1940,
												"initialValue": {
													"hexValue": "31",
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21019:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21007:13:0"
											},
											{
												"expression": {
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1941,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21030:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21035:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1943,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1944,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21039:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21035:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21030:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1948,
												"nodeType": "ExpressionStatement",
												"src": "21030:14:0"
											},
											{
												"expression": {
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1949,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21054:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21059:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1951,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21063:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1952,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21067:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21059:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21054:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1956,
												"nodeType": "ExpressionStatement",
												"src": "21054:14:0"
											},
											{
												"expression": {
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1957,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21078:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21083:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1959,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21087:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1960,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21087:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21083:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21078:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "21078:14:0"
											},
											{
												"expression": {
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1965,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21102:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21107:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1967,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21111:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1968,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21115:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21111:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21107:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21102:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "21102:14:0"
											},
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1973,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21131:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1975,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1976,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21139:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21135:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21131:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21126:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "21126:14:0"
											},
											{
												"expression": {
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1981,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21150:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21155:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1984,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21163:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21159:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21150:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "21150:14:0"
											},
											{
												"expression": {
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1989,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21174:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21179:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21183:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1992,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21187:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21183:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21179:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21174:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "21174:14:0"
											},
											{
												"expression": {
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1997,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21198:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21203:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1999,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21207:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2000,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "21211:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21207:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21203:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21198:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "21198:14:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2005,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "21229:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2006,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "21233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1908,
												"id": 2008,
												"nodeType": "Return",
												"src": "21222:12:0"
											}
										]
									},
									"id": 2010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fullDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "20804:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "20823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "20842:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20794:63:0"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "20880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20879:9:0"
									},
									"scope": 2065,
									"src": "20778:463:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "21358:225:0",
										"statements": [
											{
												"assignments": [
													2022,
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2022,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "21369:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21369:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "h",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "21380:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2029,
												"initialValue": {
													"arguments": [
														{
															"id": 2026,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "21401:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2027,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "21404:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2025,
														"name": "fullMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "21393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21393:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21368:38:0"
											},
											{
												"assignments": [
													2031
												],
												"declarations": [
													{
														"constant": false,
														"id": 2031,
														"mutability": "mutable",
														"name": "mm",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "21416:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2030,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21416:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"initialValue": {
													"arguments": [
														{
															"id": 2033,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "21436:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2034,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "21439:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2035,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "21442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2032,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -16,
														"src": "21429:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21429:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21416:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2038,
														"name": "mm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "21458:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2039,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "21463:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21458:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2045,
												"nodeType": "IfStatement",
												"src": "21454:18:0",
												"trueBody": {
													"expression": {
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2041,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "21466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21471:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "21466:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2044,
													"nodeType": "ExpressionStatement",
													"src": "21466:6:0"
												}
											},
											{
												"expression": {
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2046,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "21482:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2047,
														"name": "mm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "21487:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2049,
												"nodeType": "ExpressionStatement",
												"src": "21482:7:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2051,
																"name": "h",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2024,
																"src": "21507:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2052,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "21511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77",
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21514:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d8f253108e4d4b19e46b96dbf8146a15e54bdb216a9274a7b9cb853ec41b501",
																"typeString": "literal_string \"FullMath::mulDiv: overflow\""
															},
															"value": "FullMath::mulDiv: overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d8f253108e4d4b19e46b96dbf8146a15e54bdb216a9274a7b9cb853ec41b501",
																"typeString": "literal_string \"FullMath::mulDiv: overflow\""
															}
														],
														"id": 2050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21499:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21499:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "21499:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2058,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "21568:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2059,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "21571:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2060,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "21574:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2057,
														"name": "fullDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "21560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21560:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2020,
												"id": 2062,
												"nodeType": "Return",
												"src": "21553:23:0"
											}
										]
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "21272:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "21291:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "21310:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21262:63:0"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "21349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21348:9:0"
									},
									"scope": 2065,
									"src": "21247:336:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3562,
							"src": "20516:1069:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2206,
							"linearizedBaseContracts": [
								2206
							],
							"name": "FixedPoint",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "FixedPoint.uq112x112",
									"id": 2068,
									"members": [
										{
											"constant": false,
											"id": 2067,
											"mutability": "mutable",
											"name": "_x",
											"nodeType": "VariableDeclaration",
											"scope": 2068,
											"src": "21639:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint224",
												"typeString": "uint224"
											},
											"typeName": {
												"id": 2066,
												"name": "uint224",
												"nodeType": "ElementaryTypeName",
												"src": "21639:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "uq112x112",
									"nodeType": "StructDefinition",
									"scope": 2206,
									"src": "21612:44:0",
									"visibility": "public"
								},
								{
									"canonicalName": "FixedPoint.uq144x112",
									"id": 2071,
									"members": [
										{
											"constant": false,
											"id": 2070,
											"mutability": "mutable",
											"name": "_x",
											"nodeType": "VariableDeclaration",
											"scope": 2071,
											"src": "21689:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2069,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "21689:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "uq144x112",
									"nodeType": "StructDefinition",
									"scope": 2206,
									"src": "21662:44:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2074,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "21712:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2072,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "21712:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "313132",
										"id": 2073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21748:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_112_by_1",
											"typeString": "int_const 112"
										},
										"value": "112"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2077,
									"mutability": "constant",
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "21757:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2075,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "21757:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783130303030303030303030303030303030303030303030303030303030",
										"id": 2076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21789:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"value": "0x10000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2080,
									"mutability": "constant",
									"name": "Q224",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "21826:99:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "21826:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 2079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21866:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"value": "0x100000000000000000000000000000000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2083,
									"mutability": "constant",
									"name": "LOWER_MASK",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "21931:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "21931:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307866666666666666666666666666666666666666666666666666666666",
										"id": 2082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21969:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220095_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0095"
										},
										"value": "0xffffffffffffffffffffffffffff"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "22116:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2092,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "22141:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
																		"typeString": "struct FixedPoint.uq112x112 memory"
																	}
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_x",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2067,
																"src": "22141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2094,
																"name": "RESOLUTION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "22152:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22141:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														],
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "22133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 2090,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "22133:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22133:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2097,
												"nodeType": "Return",
												"src": "22126:37:0"
											}
										]
									},
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "22061:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 2084,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2068,
													"src": "22061:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$2068_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22060:23:0"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "22107:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2087,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "22107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22106:9:0"
									},
									"scope": 2206,
									"src": "22045:125:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "22284:59:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2108,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "22309:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
																		"typeString": "struct FixedPoint.uq112x112 memory"
																	}
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_x",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2067,
																"src": "22309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															],
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2106,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "22301:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22301:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "35313932323936383538353334383237",
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22320:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5192296858534827_by_1",
															"typeString": "int_const 5192296858534827"
														},
														"value": "5192296858534827"
													},
													"src": "22301:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2113,
												"nodeType": "Return",
												"src": "22294:42:0"
											}
										]
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decode112with18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "22201:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 2100,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2068,
													"src": "22201:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$2068_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22200:23:0"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "22271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22270:9:0"
									},
									"scope": 2206,
									"src": "22176:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "22476:607:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2125,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "22494:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22508:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22494:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f",
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22511:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7",
																"typeString": "literal_string \"FixedPoint::fraction: division by zero\""
															},
															"value": "FixedPoint::fraction: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7",
																"typeString": "literal_string \"FixedPoint::fraction: division by zero\""
															}
														],
														"id": 2124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22486:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22486:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "22486:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2131,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "22566:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22579:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22566:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2139,
												"nodeType": "IfStatement",
												"src": "22562:50:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22610:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 2134,
																"name": "FixedPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "22589:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint_$2206_$",
																	"typeString": "type(library FixedPoint)"
																}
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "uq112x112",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2068,
															"src": "22589:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_uq112x112_$2068_storage_ptr_$",
																"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22589:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
															"typeString": "struct FixedPoint.uq112x112 memory"
														}
													},
													"functionReturnParameters": 2123,
													"id": 2138,
													"nodeType": "Return",
													"src": "22582:30:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2140,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "22627:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [
															{
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "22648:2:0",
																"subExpression": {
																	"hexValue": "31",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint144_$",
																"typeString": "type(uint144)"
															},
															"typeName": {
																"id": 2141,
																"name": "uint144",
																"nodeType": "ElementaryTypeName",
																"src": "22640:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22640:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "22627:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2202,
													"nodeType": "Block",
													"src": "22865:212:0",
													"statements": [
														{
															"assignments": [
																2176
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2176,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"scope": 2202,
																	"src": "22879:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2175,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22879:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2183,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2179,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "22912:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2180,
																		"name": "Q112",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "22923:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2181,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2119,
																		"src": "22929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2177,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "22896:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$2065_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2064,
																	"src": "22896:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22896:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "22879:62:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2185,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "22963:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "22981:2:0",
																					"subExpression": {
																						"hexValue": "31",
																						"id": 2188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22982:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22973:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint224_$",
																					"typeString": "type(uint224)"
																				},
																				"typeName": {
																					"id": 2186,
																					"name": "uint224",
																					"nodeType": "ElementaryTypeName",
																					"src": "22973:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22973:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint224",
																				"typeString": "uint224"
																			}
																		},
																		"src": "22963:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f77",
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22986:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		},
																		"value": "FixedPoint::fraction: overflow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		}
																	],
																	"id": 2184,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "22955:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22955:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "22955:64:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2198,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2176,
																				"src": "23058:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23050:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 2196,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "23050:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23050:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	],
																	"id": 2195,
																	"name": "uq112x112",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "23040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_uq112x112_$2068_storage_ptr_$",
																		"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
																	}
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23040:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
																	"typeString": "struct FixedPoint.uq112x112 memory"
																}
															},
															"functionReturnParameters": 2123,
															"id": 2201,
															"nodeType": "Return",
															"src": "23033:33:0"
														}
													]
												},
												"id": 2203,
												"nodeType": "IfStatement",
												"src": "22623:454:0",
												"trueBody": {
													"id": 2174,
													"nodeType": "Block",
													"src": "22653:206:0",
													"statements": [
														{
															"assignments": [
																2148
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2148,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"scope": 2174,
																	"src": "22667:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2147,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22667:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2155,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2149,
																				"name": "numerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "22685:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2150,
																				"name": "RESOLUTION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2074,
																				"src": "22698:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "22685:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2152,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22684:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2153,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2119,
																	"src": "22712:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22684:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "22667:56:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2148,
																			"src": "22745:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "22763:2:0",
																					"subExpression": {
																						"hexValue": "31",
																						"id": 2160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22764:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 2159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22755:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint224_$",
																					"typeString": "type(uint224)"
																				},
																				"typeName": {
																					"id": 2158,
																					"name": "uint224",
																					"nodeType": "ElementaryTypeName",
																					"src": "22755:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22755:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint224",
																				"typeString": "uint224"
																			}
																		},
																		"src": "22745:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f77",
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22768:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		},
																		"value": "FixedPoint::fraction: overflow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		}
																	],
																	"id": 2156,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "22737:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22737:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2166,
															"nodeType": "ExpressionStatement",
															"src": "22737:64:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2170,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2148,
																				"src": "22840:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22832:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 2168,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "22832:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22832:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	],
																	"id": 2167,
																	"name": "uq112x112",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "22822:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_uq112x112_$2068_storage_ptr_$",
																		"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
																	}
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22822:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
																	"typeString": "struct FixedPoint.uq112x112 memory"
																}
															},
															"functionReturnParameters": 2123,
															"id": 2173,
															"nodeType": "Return",
															"src": "22815:33:0"
														}
													]
												}
											}
										]
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fraction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "numerator",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "22367:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "22386:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22366:40:0"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "22454:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 2121,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2068,
													"src": "22454:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$2068_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22453:18:0"
									},
									"scope": 2206,
									"src": "22349:734:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3562,
							"src": "21587:1498:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2223,
							"linearizedBaseContracts": [
								2223
							],
							"name": "IBondCalculator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4249719f",
									"id": 2215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "valuation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "_LP",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "23138:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "23151:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23137:30:0"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "23215:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23214:9:0"
									},
									"scope": 2223,
									"src": "23119:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "32da80a3",
									"id": 2222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "markdown",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "_LP",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "23248:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23247:13:0"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "23284:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23283:9:0"
									},
									"scope": 2223,
									"src": "23230:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3562,
							"src": "23087:208:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2233,
							"linearizedBaseContracts": [
								2233
							],
							"name": "IStaking",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7acb7757",
									"id": 2232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "23337:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "23354:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23336:37:0"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "23392:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23391:6:0"
									},
									"scope": 2233,
									"src": "23322:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3562,
							"src": "23297:103:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2241,
							"linearizedBaseContracts": [
								2241
							],
							"name": "IStakingHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7acb7757",
									"id": 2240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "23448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "23465:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23447:37:0"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23493:0:0"
									},
									"scope": 2241,
									"src": "23433:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3562,
							"src": "23402:94:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2242,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 149,
										"src": "23531:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$149",
											"typeString": "contract Ownable"
										}
									},
									"id": 2243,
									"nodeType": "InheritanceSpecifier",
									"src": "23531:7:0"
								}
							],
							"contractDependencies": [
								20,
								149
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3561,
							"linearizedBaseContracts": [
								3561,
								149,
								20
							],
							"name": "ExodusBondDepository",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2245,
									"libraryName": {
										"id": 2244,
										"name": "FixedPoint",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2206,
										"src": "23551:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_FixedPoint_$2206",
											"typeString": "library FixedPoint"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "23545:23:0"
								},
								{
									"id": 2248,
									"libraryName": {
										"id": 2246,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1854,
										"src": "23579:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1854",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "23573:27:0",
									"typeName": {
										"id": 2247,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 940,
										"src": "23593:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$940",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 2251,
									"libraryName": {
										"id": 2249,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "23611:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$435",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "23605:27:0",
									"typeName": {
										"id": 2250,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23624:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2254,
									"libraryName": {
										"id": 2252,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "23643:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$435",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "23637:26:0",
									"typeName": {
										"id": 2253,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "23656:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									}
								},
								{
									"anonymous": false,
									"id": 2264,
									"name": "BondCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"indexed": false,
												"mutability": "mutable",
												"name": "deposit",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "23732:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"indexed": true,
												"mutability": "mutable",
												"name": "payout",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "23757:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"indexed": true,
												"mutability": "mutable",
												"name": "expires",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "23789:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"indexed": true,
												"mutability": "mutable",
												"name": "priceInUSD",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "23822:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23722:132:0"
									},
									"src": "23705:150:0"
								},
								{
									"anonymous": false,
									"id": 2272,
									"name": "BondRedeemed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "23888:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"indexed": false,
												"mutability": "mutable",
												"name": "payout",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "23923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"indexed": false,
												"mutability": "mutable",
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "23947:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23878:92:0"
									},
									"src": "23860:111:0"
								},
								{
									"anonymous": false,
									"id": 2280,
									"name": "BondPriceChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"indexed": true,
												"mutability": "mutable",
												"name": "priceInUSD",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "24008:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"indexed": true,
												"mutability": "mutable",
												"name": "internalPrice",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "24044:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtRatio",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "24083:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23998:116:0"
									},
									"src": "23976:139:0"
								},
								{
									"anonymous": false,
									"id": 2290,
									"name": "ControlVariableAdjustment",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"indexed": false,
												"mutability": "mutable",
												"name": "initialBCV",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "24161:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBCV",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "24189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"indexed": false,
												"mutability": "mutable",
												"name": "adjustment",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "24213:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"indexed": false,
												"mutability": "mutable",
												"name": "addition",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "24241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24151:109:0"
									},
									"src": "24120:141:0"
								},
								{
									"constant": false,
									"functionSelector": "3c4e6da7",
									"id": 2292,
									"mutability": "immutable",
									"name": "Bash",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24312:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2291,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24312:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "016a4284",
									"id": 2294,
									"mutability": "immutable",
									"name": "principle",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24382:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24382:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 2296,
									"mutability": "immutable",
									"name": "treasury",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24451:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2295,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24451:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "98fabd3a",
									"id": 2298,
									"mutability": "immutable",
									"name": "DAO",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24527:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2297,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24527:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7969060",
									"id": 2300,
									"mutability": "immutable",
									"name": "isLiquidityBond",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24597:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2299,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "24597:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c5332b7c",
									"id": 2302,
									"mutability": "immutable",
									"name": "bondCalculator",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24695:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24695:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4cf088d9",
									"id": 2304,
									"mutability": "mutable",
									"name": "staking",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24774:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2303,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24774:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "77b81895",
									"id": 2306,
									"mutability": "mutable",
									"name": "stakingHelper",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24826:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2305,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24826:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f3f470a",
									"id": 2308,
									"mutability": "mutable",
									"name": "useHelper",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24903:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2307,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "24903:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5025625",
									"id": 2310,
									"mutability": "mutable",
									"name": "terms",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24931:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Terms_$2333_storage",
										"typeString": "struct ExodusBondDepository.Terms"
									},
									"typeName": {
										"id": 2309,
										"name": "Terms",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2333,
										"src": "24931:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Terms_$2333_storage_ptr",
											"typeString": "struct ExodusBondDepository.Terms"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "451ee4a1",
									"id": 2312,
									"mutability": "mutable",
									"name": "adjustment",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "24985:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Adjust_$2353_storage",
										"typeString": "struct ExodusBondDepository.Adjust"
									},
									"typeName": {
										"id": 2311,
										"name": "Adjust",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2353,
										"src": "24985:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Adjust_$2353_storage_ptr",
											"typeString": "struct ExodusBondDepository.Adjust"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cd1234b3",
									"id": 2316,
									"mutability": "mutable",
									"name": "bondInfo",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "25049:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
										"typeString": "mapping(address => struct ExodusBondDepository.Bond)"
									},
									"typeName": {
										"id": 2315,
										"keyType": {
											"id": 2313,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25057:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25049:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
											"typeString": "mapping(address => struct ExodusBondDepository.Bond)"
										},
										"valueType": {
											"id": 2314,
											"name": "Bond",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 2342,
											"src": "25068:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bond_$2342_storage_ptr",
												"typeString": "struct ExodusBondDepository.Bond"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc7b9c18",
									"id": 2318,
									"mutability": "mutable",
									"name": "totalDebt",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "25138:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2317,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25138:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5c2ab5b",
									"id": 2320,
									"mutability": "mutable",
									"name": "lastDecay",
									"nodeType": "VariableDeclaration",
									"scope": 3561,
									"src": "25222:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2319,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "25222:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ExodusBondDepository.Terms",
									"id": 2333,
									"members": [
										{
											"constant": false,
											"id": 2322,
											"mutability": "mutable",
											"name": "controlVariable",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "25380:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2321,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25380:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2324,
											"mutability": "mutable",
											"name": "minimumPrice",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "25443:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25443:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2326,
											"mutability": "mutable",
											"name": "maxPayout",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "25495:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2325,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25495:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2328,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "25564:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25564:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2330,
											"mutability": "mutable",
											"name": "maxDebt",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "25659:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25659:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2332,
											"mutability": "mutable",
											"name": "vestingTerm",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "25744:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2331,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "25744:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Terms",
									"nodeType": "StructDefinition",
									"scope": 3561,
									"src": "25357:426:0",
									"visibility": "public"
								},
								{
									"canonicalName": "ExodusBondDepository.Bond",
									"id": 2342,
									"members": [
										{
											"constant": false,
											"id": 2335,
											"mutability": "mutable",
											"name": "payout",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "25839:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2334,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25839:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2337,
											"mutability": "mutable",
											"name": "pricePaid",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "25891:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25891:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2339,
											"mutability": "mutable",
											"name": "lastTime",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "25951:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2338,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "25951:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2341,
											"mutability": "mutable",
											"name": "vesting",
											"nodeType": "VariableDeclaration",
											"scope": 2342,
											"src": "25996:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2340,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "25996:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bond",
									"nodeType": "StructDefinition",
									"scope": 3561,
									"src": "25817:224:0",
									"visibility": "public"
								},
								{
									"canonicalName": "ExodusBondDepository.Adjust",
									"id": 2353,
									"members": [
										{
											"constant": false,
											"id": 2344,
											"mutability": "mutable",
											"name": "add",
											"nodeType": "VariableDeclaration",
											"scope": 2353,
											"src": "26131:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2343,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "26131:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2346,
											"mutability": "mutable",
											"name": "rate",
											"nodeType": "VariableDeclaration",
											"scope": 2353,
											"src": "26176:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2345,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26176:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2348,
											"mutability": "mutable",
											"name": "target",
											"nodeType": "VariableDeclaration",
											"scope": 2353,
											"src": "26211:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2347,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26211:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2350,
											"mutability": "mutable",
											"name": "buffer",
											"nodeType": "VariableDeclaration",
											"scope": 2353,
											"src": "26267:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2349,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "26267:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2352,
											"mutability": "mutable",
											"name": "lastTime",
											"nodeType": "VariableDeclaration",
											"scope": 2353,
											"src": "26341:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2351,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "26341:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Adjust",
									"nodeType": "StructDefinition",
									"scope": 3561,
									"src": "26107:290:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "26614:434:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2367,
																"name": "_bash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "26632:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26649:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26641:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26641:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26632:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26624:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "26624:28:0"
											},
											{
												"expression": {
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2375,
														"name": "Bash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2292,
														"src": "26662:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2376,
														"name": "_bash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "26669:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26662:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "26662:12:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "_principle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2357,
																"src": "26692:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26714:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26706:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2381,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26706:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26706:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26692:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26684:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2387,
												"nodeType": "ExpressionStatement",
												"src": "26684:33:0"
											},
											{
												"expression": {
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2388,
														"name": "principle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2294,
														"src": "26727:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2389,
														"name": "_principle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "26739:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26727:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "26727:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2393,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "26767:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26788:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26780:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26780:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26780:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26767:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26759:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2400,
												"nodeType": "ExpressionStatement",
												"src": "26759:32:0"
											},
											{
												"expression": {
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2401,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "26801:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2402,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "26812:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26801:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "26801:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2406,
																"name": "_DAO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2361,
																"src": "26839:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26855:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26847:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2407,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26847:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26847:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26839:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26831:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2413,
												"nodeType": "ExpressionStatement",
												"src": "26831:27:0"
											},
											{
												"expression": {
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2414,
														"name": "DAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "26868:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2415,
														"name": "_DAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "26874:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26868:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "26868:10:0"
											},
											{
												"expression": {
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2418,
														"name": "bondCalculator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "26950:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2419,
														"name": "_bondCalculator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "26967:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26950:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2421,
												"nodeType": "ExpressionStatement",
												"src": "26950:32:0"
											},
											{
												"expression": {
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2422,
														"name": "isLiquidityBond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2300,
														"src": "26992:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2423,
																	"name": "_bondCalculator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2363,
																	"src": "27011:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27038:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27030:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2424,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "27030:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27030:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "27011:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2429,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "27010:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26992:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2431,
												"nodeType": "ExpressionStatement",
												"src": "26992:49:0"
											}
										]
									},
									"id": 2433,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "_bash",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "26468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "_principle",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "26491:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "26535:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "_DAO",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "26562:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "_bondCalculator",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "26584:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26458:155:0"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26614:0:0"
									},
									"scope": 3561,
									"src": "26447:601:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "27593:418:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2454,
																	"name": "terms",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "27611:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Terms_$2333_storage",
																		"typeString": "struct ExodusBondDepository.Terms storage ref"
																	}
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "controlVariable",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2322,
																"src": "27611:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27611:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6473206d75737420626520696e697469616c697a65642066726f6d2030",
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27639:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a97fbf569f541630678552d7fe1f4061774362343ab217ee5d80160844b8f2d4",
																"typeString": "literal_string \"Bonds must be initialized from 0\""
															},
															"value": "Bonds must be initialized from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a97fbf569f541630678552d7fe1f4061774362343ab217ee5d80160844b8f2d4",
																"typeString": "literal_string \"Bonds must be initialized from 0\""
															}
														],
														"id": 2453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27603:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27603:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2460,
												"nodeType": "ExpressionStatement",
												"src": "27603:71:0"
											},
											{
												"expression": {
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2461,
														"name": "terms",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "27684:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Terms_$2333_storage",
															"typeString": "struct ExodusBondDepository.Terms storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2463,
																"name": "_controlVariable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2436,
																"src": "27729:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2464,
																"name": "_minimumPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "27773:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2465,
																"name": "_maxPayout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "27811:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2466,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "27840:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2467,
																"name": "_maxDebt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2444,
																"src": "27867:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2468,
																"name": "_vestingTerm",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "27902:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"id": 2462,
															"name": "Terms",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "27692:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Terms_$2333_storage_ptr_$",
																"typeString": "type(struct ExodusBondDepository.Terms storage pointer)"
															}
														},
														"id": 2469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"controlVariable",
															"minimumPrice",
															"maxPayout",
															"fee",
															"maxDebt",
															"vestingTerm"
														],
														"nodeType": "FunctionCall",
														"src": "27692:233:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Terms_$2333_memory_ptr",
															"typeString": "struct ExodusBondDepository.Terms memory"
														}
													},
													"src": "27684:241:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Terms_$2333_storage",
														"typeString": "struct ExodusBondDepository.Terms storage ref"
													}
												},
												"id": 2471,
												"nodeType": "ExpressionStatement",
												"src": "27684:241:0"
											},
											{
												"expression": {
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2472,
														"name": "totalDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "27935:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2473,
														"name": "_initialDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "27947:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27935:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "27935:24:0"
											},
											{
												"expression": {
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2476,
														"name": "lastDecay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "27969:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2479,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "27988:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "27988:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27981:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 2477,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "27981:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27981:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "27969:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2483,
												"nodeType": "ExpressionStatement",
												"src": "27969:35:0"
											}
										]
									},
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "27054:279:0",
										"text": "  @notice initializes bond parameters\n  @param _controlVariable uint\n  @param _vestingTerm uint32\n  @param _minimumPrice uint\n  @param _maxPayout uint\n  @param _fee uint\n  @param _maxDebt uint\n  @param _initialDebt uint"
									},
									"functionSelector": "cf37a891",
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2451,
											"modifierName": {
												"id": 2450,
												"name": "onlyPolicy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 76,
												"src": "27582:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "27582:10:0"
										}
									],
									"name": "initializeBondTerms",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "_controlVariable",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "27376:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "_minimumPrice",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "27410:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "_maxPayout",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "27441:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "27469:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "_maxDebt",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "27491:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "_initialDebt",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "27517:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "_vestingTerm",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "27547:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2447,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "27547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27366:206:0"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27593:0:0"
									},
									"scope": 3561,
									"src": "27338:673:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ExodusBondDepository.PARAMETER",
									"id": 2491,
									"members": [
										{
											"id": 2486,
											"name": "VESTING",
											"nodeType": "EnumValue",
											"src": "28088:7:0"
										},
										{
											"id": 2487,
											"name": "PAYOUT",
											"nodeType": "EnumValue",
											"src": "28105:6:0"
										},
										{
											"id": 2488,
											"name": "FEE",
											"nodeType": "EnumValue",
											"src": "28121:3:0"
										},
										{
											"id": 2489,
											"name": "DEBT",
											"nodeType": "EnumValue",
											"src": "28134:4:0"
										},
										{
											"id": 2490,
											"name": "MINPRICE",
											"nodeType": "EnumValue",
											"src": "28148:8:0"
										}
									],
									"name": "PARAMETER",
									"nodeType": "EnumDefinition",
									"src": "28063:99:0"
								},
								{
									"body": {
										"id": 2585,
										"nodeType": "Block",
										"src": "28392:775:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PARAMETER_$2491",
														"typeString": "enum ExodusBondDepository.PARAMETER"
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2501,
														"name": "_parameter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2494,
														"src": "28406:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PARAMETER_$2491",
															"typeString": "enum ExodusBondDepository.PARAMETER"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2502,
															"name": "PARAMETER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "28420:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PARAMETER_$2491_$",
																"typeString": "type(enum ExodusBondDepository.PARAMETER)"
															}
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "VESTING",
														"nodeType": "MemberAccess",
														"src": "28420:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PARAMETER_$2491",
															"typeString": "enum ExodusBondDepository.PARAMETER"
														}
													},
													"src": "28406:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_PARAMETER_$2491",
															"typeString": "enum ExodusBondDepository.PARAMETER"
														},
														"id": 2525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2522,
															"name": "_parameter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2494,
															"src": "28604:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PARAMETER_$2491",
																"typeString": "enum ExodusBondDepository.PARAMETER"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2523,
																"name": "PARAMETER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2491,
																"src": "28618:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_PARAMETER_$2491_$",
																	"typeString": "type(enum ExodusBondDepository.PARAMETER)"
																}
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "PAYOUT",
															"nodeType": "MemberAccess",
															"src": "28618:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PARAMETER_$2491",
																"typeString": "enum ExodusBondDepository.PARAMETER"
															}
														},
														"src": "28604:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_PARAMETER_$2491",
																"typeString": "enum ExodusBondDepository.PARAMETER"
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2540,
																"name": "_parameter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "28785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PARAMETER_$2491",
																	"typeString": "enum ExodusBondDepository.PARAMETER"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2541,
																	"name": "PARAMETER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "28799:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PARAMETER_$2491_$",
																		"typeString": "type(enum ExodusBondDepository.PARAMETER)"
																	}
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "FEE",
																"nodeType": "MemberAccess",
																"src": "28799:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PARAMETER_$2491",
																	"typeString": "enum ExodusBondDepository.PARAMETER"
																}
															},
															"src": "28785:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_PARAMETER_$2491",
																	"typeString": "enum ExodusBondDepository.PARAMETER"
																},
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2558,
																	"name": "_parameter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2494,
																	"src": "28954:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PARAMETER_$2491",
																		"typeString": "enum ExodusBondDepository.PARAMETER"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2559,
																		"name": "PARAMETER",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "28968:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_PARAMETER_$2491_$",
																			"typeString": "type(enum ExodusBondDepository.PARAMETER)"
																		}
																	},
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "DEBT",
																	"nodeType": "MemberAccess",
																	"src": "28968:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PARAMETER_$2491",
																		"typeString": "enum ExodusBondDepository.PARAMETER"
																	}
																},
																"src": "28954:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_PARAMETER_$2491",
																		"typeString": "enum ExodusBondDepository.PARAMETER"
																	},
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2569,
																		"name": "_parameter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2494,
																		"src": "29058:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PARAMETER_$2491",
																			"typeString": "enum ExodusBondDepository.PARAMETER"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 2570,
																			"name": "PARAMETER",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "29072:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_PARAMETER_$2491_$",
																				"typeString": "type(enum ExodusBondDepository.PARAMETER)"
																			}
																		},
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "MINPRICE",
																		"nodeType": "MemberAccess",
																		"src": "29072:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PARAMETER_$2491",
																			"typeString": "enum ExodusBondDepository.PARAMETER"
																		}
																	},
																	"src": "29058:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2580,
																"nodeType": "IfStatement",
																"src": "29054:107:0",
																"trueBody": {
																	"id": 2579,
																	"nodeType": "Block",
																	"src": "29092:69:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 2577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 2573,
																						"name": "terms",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2310,
																						"src": "29123:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Terms_$2333_storage",
																							"typeString": "struct ExodusBondDepository.Terms storage ref"
																						}
																					},
																					"id": 2575,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "minimumPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2324,
																					"src": "29123:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 2576,
																					"name": "_input",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2496,
																					"src": "29144:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29123:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2578,
																			"nodeType": "ExpressionStatement",
																			"src": "29123:27:0"
																		}
																	]
																}
															},
															"id": 2581,
															"nodeType": "IfStatement",
															"src": "28950:211:0",
															"trueBody": {
																"id": 2568,
																"nodeType": "Block",
																"src": "28984:64:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2562,
																					"name": "terms",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "29015:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Terms_$2333_storage",
																						"typeString": "struct ExodusBondDepository.Terms storage ref"
																					}
																				},
																				"id": 2564,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "maxDebt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2330,
																				"src": "29015:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2565,
																				"name": "_input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2496,
																				"src": "29031:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29015:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2567,
																		"nodeType": "ExpressionStatement",
																		"src": "29015:22:0"
																	}
																]
															}
														},
														"id": 2582,
														"nodeType": "IfStatement",
														"src": "28781:380:0",
														"trueBody": {
															"id": 2557,
															"nodeType": "Block",
															"src": "28814:130:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2545,
																					"name": "_input",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2496,
																					"src": "28853:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "3130303030",
																					"id": 2546,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28863:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"src": "28853:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "44414f206665652063616e6e6f7420657863656564207061796f7574",
																				"id": 2548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28870:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_00061fa753d0d86ba29a647fc34a6c0f45ba0e4fe7380aeafdcd1777ac78a6ef",
																					"typeString": "literal_string \"DAO fee cannot exceed payout\""
																				},
																				"value": "DAO fee cannot exceed payout"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_00061fa753d0d86ba29a647fc34a6c0f45ba0e4fe7380aeafdcd1777ac78a6ef",
																					"typeString": "literal_string \"DAO fee cannot exceed payout\""
																				}
																			],
																			"id": 2544,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-18,
																				-18
																			],
																			"referencedDeclaration": -18,
																			"src": "28845:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28845:56:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2550,
																	"nodeType": "ExpressionStatement",
																	"src": "28845:56:0"
																},
																{
																	"expression": {
																		"id": 2555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2551,
																				"name": "terms",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2310,
																				"src": "28915:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Terms_$2333_storage",
																					"typeString": "struct ExodusBondDepository.Terms storage ref"
																				}
																			},
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2328,
																			"src": "28915:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 2554,
																			"name": "_input",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2496,
																			"src": "28927:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28915:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2556,
																	"nodeType": "ExpressionStatement",
																	"src": "28915:18:0"
																}
															]
														}
													},
													"id": 2583,
													"nodeType": "IfStatement",
													"src": "28600:561:0",
													"trueBody": {
														"id": 2539,
														"nodeType": "Block",
														"src": "28636:139:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2527,
																				"name": "_input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2496,
																				"src": "28675:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "31303030",
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28685:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			},
																			"src": "28675:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "5061796f75742063616e6e6f742062652061626f766520312070657263656e74",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28691:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_25818207a3ce45502b424180abf0c0c4732a7419008c4068858fb0806228f14b",
																				"typeString": "literal_string \"Payout cannot be above 1 percent\""
																			},
																			"value": "Payout cannot be above 1 percent"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_25818207a3ce45502b424180abf0c0c4732a7419008c4068858fb0806228f14b",
																				"typeString": "literal_string \"Payout cannot be above 1 percent\""
																			}
																		],
																		"id": 2526,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			-18,
																			-18
																		],
																		"referencedDeclaration": -18,
																		"src": "28667:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28667:59:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2532,
																"nodeType": "ExpressionStatement",
																"src": "28667:59:0"
															},
															{
																"expression": {
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 2533,
																			"name": "terms",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "28740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Terms_$2333_storage",
																				"typeString": "struct ExodusBondDepository.Terms storage ref"
																			}
																		},
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "maxPayout",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2326,
																		"src": "28740:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2536,
																		"name": "_input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "28758:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "28740:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2538,
																"nodeType": "ExpressionStatement",
																"src": "28740:24:0"
															}
														]
													}
												},
												"id": 2584,
												"nodeType": "IfStatement",
												"src": "28402:759:0",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "28439:155:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2506,
																			"name": "_input",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2496,
																			"src": "28478:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "313239363030",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28488:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_129600_by_1",
																				"typeString": "int_const 129600"
																			},
																			"value": "129600"
																		},
																		"src": "28478:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "56657374696e67206d757374206265206c6f6e676572207468616e20333620686f757273",
																		"id": 2509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28496:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9bf0496b18f4db662847e65668d0ae3d4d7f5ebc115d137b3b0990ae2896f44e",
																			"typeString": "literal_string \"Vesting must be longer than 36 hours\""
																		},
																		"value": "Vesting must be longer than 36 hours"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9bf0496b18f4db662847e65668d0ae3d4d7f5ebc115d137b3b0990ae2896f44e",
																			"typeString": "literal_string \"Vesting must be longer than 36 hours\""
																		}
																	],
																	"id": 2505,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "28470:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28470:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2511,
															"nodeType": "ExpressionStatement",
															"src": "28470:65:0"
														},
														{
															"expression": {
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2512,
																		"name": "terms",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "28549:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Terms_$2333_storage",
																			"typeString": "struct ExodusBondDepository.Terms storage ref"
																		}
																	},
																	"id": 2514,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "vestingTerm",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2332,
																	"src": "28549:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2517,
																			"name": "_input",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2496,
																			"src": "28576:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "28569:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 2515,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "28569:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28569:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "28549:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 2520,
															"nodeType": "ExpressionStatement",
															"src": "28549:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "28168:119:0",
										"text": "  @notice set parameters for new bonds\n  @param _parameter PARAMETER\n  @param _input uint"
									},
									"functionSelector": "1e321a0f",
									"id": 2586,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2499,
											"modifierName": {
												"id": 2498,
												"name": "onlyPolicy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 76,
												"src": "28377:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28377:10:0"
										}
									],
									"name": "setBondTerms",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "_parameter",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "28314:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PARAMETER_$2491",
													"typeString": "enum ExodusBondDepository.PARAMETER"
												},
												"typeName": {
													"id": 2493,
													"name": "PARAMETER",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2491,
													"src": "28314:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PARAMETER_$2491",
														"typeString": "enum ExodusBondDepository.PARAMETER"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "_input",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "28336:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28313:38:0"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28392:0:0"
									},
									"scope": 3561,
									"src": "28292:875:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2614,
										"nodeType": "Block",
										"src": "29504:211:0",
										"statements": [
											{
												"expression": {
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2600,
														"name": "adjustment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "29514:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Adjust_$2353_storage",
															"typeString": "struct ExodusBondDepository.Adjust storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2602,
																"name": "_addition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "29553:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 2603,
																"name": "_increment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "29582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2604,
																"name": "_target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "29614:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2605,
																"name": "_buffer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2595,
																"src": "29643:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2608,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "29681:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "29681:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29674:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 2606,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "29674:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29674:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"id": 2601,
															"name": "Adjust",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "29527:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Adjust_$2353_storage_ptr_$",
																"typeString": "type(struct ExodusBondDepository.Adjust storage pointer)"
															}
														},
														"id": 2611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"add",
															"rate",
															"target",
															"buffer",
															"lastTime"
														],
														"nodeType": "FunctionCall",
														"src": "29527:181:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Adjust_$2353_memory_ptr",
															"typeString": "struct ExodusBondDepository.Adjust memory"
														}
													},
													"src": "29514:194:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Adjust_$2353_storage",
														"typeString": "struct ExodusBondDepository.Adjust storage ref"
													}
												},
												"id": 2613,
												"nodeType": "ExpressionStatement",
												"src": "29514:194:0"
											}
										]
									},
									"documentation": {
										"id": 2587,
										"nodeType": "StructuredDocumentation",
										"src": "29173:176:0",
										"text": "  @notice set control variable adjustment\n  @param _addition bool\n  @param _increment uint\n  @param _target uint\n  @param _buffer uint"
									},
									"functionSelector": "ae9832cf",
									"id": 2615,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2598,
											"modifierName": {
												"id": 2597,
												"name": "onlyPolicy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 76,
												"src": "29493:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29493:10:0"
										}
									],
									"name": "setAdjustment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "_addition",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "29386:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "_increment",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "29410:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "29438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "_buffer",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "29463:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2594,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "29463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29376:107:0"
									},
									"returnParameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29504:0:0"
									},
									"scope": 3561,
									"src": "29354:361:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2654,
										"nodeType": "Block",
										"src": "29913:229:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2626,
																"name": "_staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "29931:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29951:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29943:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2627,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29943:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29943:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "29931:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "29923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29923:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2633,
												"nodeType": "ExpressionStatement",
												"src": "29923:31:0"
											},
											{
												"condition": {
													"id": 2634,
													"name": "_helper",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2620,
													"src": "29968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2652,
													"nodeType": "Block",
													"src": "30062:74:0",
													"statements": [
														{
															"expression": {
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2644,
																	"name": "useHelper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "30076:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30088:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "30076:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2647,
															"nodeType": "ExpressionStatement",
															"src": "30076:17:0"
														},
														{
															"expression": {
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2648,
																	"name": "staking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "30107:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2649,
																	"name": "_staking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2618,
																	"src": "30117:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "30107:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2651,
															"nodeType": "ExpressionStatement",
															"src": "30107:18:0"
														}
													]
												},
												"id": 2653,
												"nodeType": "IfStatement",
												"src": "29964:172:0",
												"trueBody": {
													"id": 2643,
													"nodeType": "Block",
													"src": "29977:79:0",
													"statements": [
														{
															"expression": {
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2635,
																	"name": "useHelper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "29991:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30003:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "29991:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2638,
															"nodeType": "ExpressionStatement",
															"src": "29991:16:0"
														},
														{
															"expression": {
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2639,
																	"name": "stakingHelper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "30021:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2640,
																	"name": "_staking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2618,
																	"src": "30037:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "30021:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2642,
															"nodeType": "ExpressionStatement",
															"src": "30021:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2616,
										"nodeType": "StructuredDocumentation",
										"src": "29721:115:0",
										"text": "  @notice set contract for auto stake\n  @param _staking address\n  @param _helper bool"
									},
									"functionSelector": "d4d863ce",
									"id": 2655,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2623,
											"modifierName": {
												"id": 2622,
												"name": "onlyPolicy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 76,
												"src": "29902:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29902:10:0"
										}
									],
									"name": "setStaking",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "_staking",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "29861:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "_helper",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "29879:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29860:32:0"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29913:0:0"
									},
									"scope": 3561,
									"src": "29841:301:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2858,
										"nodeType": "Block",
										"src": "30480:2217:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2668,
																"name": "_depositor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2662,
																"src": "30498:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30520:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30512:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2669,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30512:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30512:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "30498:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30524:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 2667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30490:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2676,
												"nodeType": "ExpressionStatement",
												"src": "30490:52:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2677,
														"name": "decayDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "30553:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30553:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2679,
												"nodeType": "ExpressionStatement",
												"src": "30553:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2681,
																"name": "totalDebt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "30582:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 2682,
																	"name": "terms",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "30595:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Terms_$2333_storage",
																		"typeString": "struct ExodusBondDepository.Terms storage ref"
																	}
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "maxDebt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2330,
																"src": "30595:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30582:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61782063617061636974792072656163686564",
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30610:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79ba9d5bf7a0c0d62aef55aa9299fa48dc27fc34524dc8e67ea9d1bcdbf0decb",
																"typeString": "literal_string \"Max capacity reached\""
															},
															"value": "Max capacity reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79ba9d5bf7a0c0d62aef55aa9299fa48dc27fc34524dc8e67ea9d1bcdbf0decb",
																"typeString": "literal_string \"Max capacity reached\""
															}
														],
														"id": 2680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30574:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30574:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2687,
												"nodeType": "ExpressionStatement",
												"src": "30574:59:0"
											},
											{
												"assignments": [
													2689
												],
												"declarations": [
													{
														"constant": false,
														"id": 2689,
														"mutability": "mutable",
														"name": "priceInUSD",
														"nodeType": "VariableDeclaration",
														"scope": 2858,
														"src": "30644:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2692,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2690,
														"name": "bondPriceInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3316,
														"src": "30665:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30665:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30644:37:0"
											},
											{
												"assignments": [
													2694
												],
												"declarations": [
													{
														"constant": false,
														"id": 2694,
														"mutability": "mutable",
														"name": "nativePrice",
														"nodeType": "VariableDeclaration",
														"scope": 2858,
														"src": "30714:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2693,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2695,
														"name": "_bondPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3272,
														"src": "30736:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30736:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30714:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2699,
																"name": "_maxPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2660,
																"src": "30780:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2700,
																"name": "nativePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "30793:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30780:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c697070616765206c696d69743a206d6f7265207468616e206d6178207072696365",
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30818:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b1eacaf7b3b2d412df286fef87f078c0c28d492dea75275391ee8422db5360c",
																"typeString": "literal_string \"Slippage limit: more than max price\""
															},
															"value": "Slippage limit: more than max price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b1eacaf7b3b2d412df286fef87f078c0c28d492dea75275391ee8422db5360c",
																"typeString": "literal_string \"Slippage limit: more than max price\""
															}
														],
														"id": 2698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30759:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "30759:106:0"
											},
											{
												"assignments": [
													2706
												],
												"declarations": [
													{
														"constant": false,
														"id": 2706,
														"mutability": "mutable",
														"name": "value",
														"nodeType": "VariableDeclaration",
														"scope": 2858,
														"src": "30899:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2714,
												"initialValue": {
													"arguments": [
														{
															"id": 2711,
															"name": "principle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "30946:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2712,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "30957:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2708,
																	"name": "treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "30925:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2707,
																"name": "ITreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3591,
																"src": "30915:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ITreasury_$3591_$",
																	"typeString": "type(contract ITreasury)"
																}
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30915:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITreasury_$3591",
																"typeString": "contract ITreasury"
															}
														},
														"id": 2710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3572,
														"src": "30915:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view external returns (uint256)"
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30915:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30899:66:0"
											},
											{
												"assignments": [
													2716
												],
												"declarations": [
													{
														"constant": false,
														"id": 2716,
														"mutability": "mutable",
														"name": "payout",
														"nodeType": "VariableDeclaration",
														"scope": 2858,
														"src": "31005:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2720,
												"initialValue": {
													"arguments": [
														{
															"id": 2718,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2706,
															"src": "31032:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2717,
														"name": "payoutFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3194,
														"src": "31022:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31022:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31005:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2722,
																"name": "payout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "31089:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3130303030303030",
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31099:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000_by_1",
																	"typeString": "int_const 10000000"
																},
																"value": "10000000"
															},
															"src": "31089:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6f20736d616c6c",
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31109:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80339602d4539731e183aa5a83efb1dfe21342751d98d255b10c906856dae2e3",
																"typeString": "literal_string \"Bond too small\""
															},
															"value": "Bond too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80339602d4539731e183aa5a83efb1dfe21342751d98d255b10c906856dae2e3",
																"typeString": "literal_string \"Bond too small\""
															}
														],
														"id": 2721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "31081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31081:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2727,
												"nodeType": "ExpressionStatement",
												"src": "31081:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2729,
																"name": "payout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "31192:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2730,
																	"name": "maxPayout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3173,
																	"src": "31202:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31202:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31192:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6f206c61726765",
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31215:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c70eff5eab81657037a0e432eeb5dbfa43093daaccfa2484453f9e0bd6e8b30a",
																"typeString": "literal_string \"Bond too large\""
															},
															"value": "Bond too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c70eff5eab81657037a0e432eeb5dbfa43093daaccfa2484453f9e0bd6e8b30a",
																"typeString": "literal_string \"Bond too large\""
															}
														],
														"id": 2728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "31184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31184:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2735,
												"nodeType": "ExpressionStatement",
												"src": "31184:48:0"
											},
											{
												"assignments": [
													2737
												],
												"declarations": [
													{
														"constant": false,
														"id": 2737,
														"mutability": "mutable",
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 2858,
														"src": "31325:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2740,
																		"name": "terms",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "31350:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Terms_$2333_storage",
																			"typeString": "struct ExodusBondDepository.Terms storage ref"
																		}
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2328,
																	"src": "31350:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2738,
																	"name": "payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "31339:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 294,
																"src": "31339:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31339:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "31339:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31339:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31325:46:0"
											},
											{
												"assignments": [
													2748
												],
												"declarations": [
													{
														"constant": false,
														"id": 2748,
														"mutability": "mutable",
														"name": "profit",
														"nodeType": "VariableDeclaration",
														"scope": 2858,
														"src": "31381:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2756,
												"initialValue": {
													"arguments": [
														{
															"id": 2754,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "31420:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2751,
																	"name": "payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "31408:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2749,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "31398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "31398:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31398:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "31398:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31398:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31381:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2761,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "31634:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31634:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2765,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "31654:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ExodusBondDepository_$3561",
																		"typeString": "contract ExodusBondDepository"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ExodusBondDepository_$3561",
																		"typeString": "contract ExodusBondDepository"
																	}
																],
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31646:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2763,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31646:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31646:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2767,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "31661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2758,
																	"name": "principle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "31606:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2757,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "31599:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31599:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														"id": 2760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1702,
														"src": "31599:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$940_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31599:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "ExpressionStatement",
												"src": "31599:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2776,
																	"name": "treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "31713:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2774,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31705:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31705:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2778,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "31724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2771,
																	"name": "principle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "31686:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2770,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "31679:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31679:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														"id": 2773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 912,
														"src": "31679:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31679:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "31679:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2785,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "31770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2786,
															"name": "principle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "31779:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2787,
															"name": "profit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2748,
															"src": "31790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2782,
																	"name": "treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "31752:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2781,
																"name": "ITreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3591,
																"src": "31742:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ITreasury_$3591_$",
																	"typeString": "type(contract ITreasury)"
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31742:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITreasury_$3591",
																"typeString": "contract ITreasury"
															}
														},
														"id": 2784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3583,
														"src": "31742:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,uint256) external returns (uint256)"
														}
													},
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31742:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2789,
												"nodeType": "ExpressionStatement",
												"src": "31742:55:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2790,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "31812:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31819:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31812:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2802,
												"nodeType": "IfStatement",
												"src": "31808:115:0",
												"trueBody": {
													"id": 2801,
													"nodeType": "Block",
													"src": "31822:101:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2797,
																		"name": "DAO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "31903:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2798,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2737,
																		"src": "31908:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2794,
																				"name": "Bash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2292,
																				"src": "31884:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2793,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "31877:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31877:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$940",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1677,
																	"src": "31877:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$940_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31877:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2800,
															"nodeType": "ExpressionStatement",
															"src": "31877:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2803,
														"name": "totalDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "31968:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2806,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2706,
																"src": "31994:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2804,
																"name": "totalDebt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "31980:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 174,
															"src": "31980:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31980:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31968:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2809,
												"nodeType": "ExpressionStatement",
												"src": "31968:32:0"
											},
											{
												"expression": {
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2810,
															"name": "bondInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "32126:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
																"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
															}
														},
														"id": 2812,
														"indexExpression": {
															"id": 2811,
															"name": "_depositor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "32135:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32126:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bond_$2342_storage",
															"typeString": "struct ExodusBondDepository.Bond storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2819,
																		"name": "payout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2716,
																		"src": "32208:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2814,
																				"name": "bondInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2316,
																				"src": "32176:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
																					"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
																				}
																			},
																			"id": 2816,
																			"indexExpression": {
																				"id": 2815,
																				"name": "_depositor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2662,
																				"src": "32185:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32176:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Bond_$2342_storage",
																				"typeString": "struct ExodusBondDepository.Bond storage ref"
																			}
																		},
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "payout",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2335,
																		"src": "32176:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 174,
																	"src": "32176:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32176:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2821,
																	"name": "terms",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "32238:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Terms_$2333_storage",
																		"typeString": "struct ExodusBondDepository.Terms storage ref"
																	}
																},
																"id": 2822,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "vestingTerm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2332,
																"src": "32238:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2825,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "32286:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "32286:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32279:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 2823,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "32279:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32279:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2828,
																"name": "priceInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2689,
																"src": "32327:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2813,
															"name": "Bond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "32149:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Bond_$2342_storage_ptr_$",
																"typeString": "type(struct ExodusBondDepository.Bond storage pointer)"
															}
														},
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"payout",
															"vesting",
															"lastTime",
															"pricePaid"
														],
														"nodeType": "FunctionCall",
														"src": "32149:199:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
															"typeString": "struct ExodusBondDepository.Bond memory"
														}
													},
													"src": "32126:222:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bond_$2342_storage",
														"typeString": "struct ExodusBondDepository.Bond storage ref"
													}
												},
												"id": 2831,
												"nodeType": "ExpressionStatement",
												"src": "32126:222:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2833,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "32427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2834,
															"name": "payout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "32448:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2838,
																		"name": "terms",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "32488:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Terms_$2333_storage",
																			"typeString": "struct ExodusBondDepository.Terms storage ref"
																		}
																	},
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vestingTerm",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2332,
																	"src": "32488:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 2835,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "32468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "32468:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 174,
																"src": "32468:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32468:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2841,
															"name": "priceInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "32520:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2832,
														"name": "BondCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "32402:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32402:138:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2843,
												"nodeType": "EmitStatement",
												"src": "32397:143:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2845,
																"name": "bondPriceInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3316,
																"src": "32572:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32572:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2847,
																"name": "_bondPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3272,
																"src": "32590:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
																	"typeString": "function () returns (uint256)"
																}
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32590:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2849,
																"name": "debtRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3348,
																"src": "32604:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32604:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2844,
														"name": "BondPriceChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "32555:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32555:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2852,
												"nodeType": "EmitStatement",
												"src": "32550:66:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2853,
														"name": "adjust",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3132,
														"src": "32627:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32627:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2855,
												"nodeType": "ExpressionStatement",
												"src": "32627:8:0"
											},
											{
												"expression": {
													"id": 2856,
													"name": "payout",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2716,
													"src": "32684:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2666,
												"id": 2857,
												"nodeType": "Return",
												"src": "32677:13:0"
											}
										]
									},
									"documentation": {
										"id": 2656,
										"nodeType": "StructuredDocumentation",
										"src": "30192:153:0",
										"text": "  @notice deposit bond\n  @param _amount uint\n  @param _maxPrice uint\n  @param _depositor address\n  @return uint"
									},
									"functionSelector": "8dbdbe6d",
									"id": 2859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "30376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "_maxPrice",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "30401:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "_depositor",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "30428:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30366:86:0"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "30471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30470:9:0"
									},
									"scope": 3561,
									"src": "30350:2347:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "32934:1166:0",
										"statements": [
											{
												"assignments": [
													2870
												],
												"declarations": [
													{
														"constant": false,
														"id": 2870,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 2964,
														"src": "32944:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
															"typeString": "struct ExodusBondDepository.Bond"
														},
														"typeName": {
															"id": 2869,
															"name": "Bond",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2342,
															"src": "32944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bond_$2342_storage_ptr",
																"typeString": "struct ExodusBondDepository.Bond"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2874,
												"initialValue": {
													"baseExpression": {
														"id": 2871,
														"name": "bondInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "32963:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
															"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
														}
													},
													"id": 2873,
													"indexExpression": {
														"id": 2872,
														"name": "_recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2862,
														"src": "32972:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32963:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bond_$2342_storage",
														"typeString": "struct ExodusBondDepository.Bond storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32944:39:0"
											},
											{
												"assignments": [
													2876
												],
												"declarations": [
													{
														"constant": false,
														"id": 2876,
														"mutability": "mutable",
														"name": "percentVested",
														"nodeType": "VariableDeclaration",
														"scope": 2964,
														"src": "33062:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2875,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2880,
												"initialValue": {
													"arguments": [
														{
															"id": 2878,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "33103:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2877,
														"name": "percentVestedFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3479,
														"src": "33086:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33086:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33062:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2881,
														"name": "percentVested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2876,
														"src": "33129:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33146:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "33129:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2962,
													"nodeType": "Block",
													"src": "33431:663:0",
													"statements": [
														{
															"assignments": [
																2905
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2905,
																	"mutability": "mutable",
																	"name": "payout",
																	"nodeType": "VariableDeclaration",
																	"scope": 2962,
																	"src": "33513:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2904,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33513:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2914,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "3130303030",
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33565:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2909,
																				"name": "percentVested",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2876,
																				"src": "33546:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 2906,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2870,
																					"src": "33530:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																						"typeString": "struct ExodusBondDepository.Bond memory"
																					}
																				},
																				"id": 2907,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "payout",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2335,
																				"src": "33530:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 294,
																			"src": "33530:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33530:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 310,
																	"src": "33530:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33530:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33513:58:0"
														},
														{
															"expression": {
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2915,
																		"name": "bondInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2316,
																		"src": "33627:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
																			"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
																		}
																	},
																	"id": 2917,
																	"indexExpression": {
																		"id": 2916,
																		"name": "_recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "33636:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33627:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bond_$2342_storage",
																		"typeString": "struct ExodusBondDepository.Bond storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2922,
																					"name": "payout",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2905,
																					"src": "33697:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 2919,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2870,
																						"src": "33681:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																							"typeString": "struct ExodusBondDepository.Bond memory"
																						}
																					},
																					"id": 2920,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "payout",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2335,
																					"src": "33681:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2921,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 190,
																				"src": "33681:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33681:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 2933,
																								"name": "info",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2870,
																								"src": "33801:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																									"typeString": "struct ExodusBondDepository.Bond memory"
																								}
																							},
																							"id": 2934,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2339,
																							"src": "33801:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 2929,
																										"name": "block",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -4,
																										"src": "33778:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_block",
																											"typeString": "block"
																										}
																									},
																									"id": 2930,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "timestamp",
																									"nodeType": "MemberAccess",
																									"src": "33778:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2928,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "33771:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint32_$",
																									"typeString": "type(uint32)"
																								},
																								"typeName": {
																									"id": 2927,
																									"name": "uint32",
																									"nodeType": "ElementaryTypeName",
																									"src": "33771:6:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2931,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33771:23:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"id": 2932,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub32",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 233,
																						"src": "33771:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$returns$_t_uint32_$bound_to$_t_uint32_$",
																							"typeString": "function (uint32,uint32) pure returns (uint32)"
																						}
																					},
																					"id": 2935,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33771:44:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 2924,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2870,
																						"src": "33731:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																							"typeString": "struct ExodusBondDepository.Bond memory"
																						}
																					},
																					"id": 2925,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "vesting",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2341,
																					"src": "33731:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"id": 2926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub32",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 233,
																				"src": "33731:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$returns$_t_uint32_$bound_to$_t_uint32_$",
																					"typeString": "function (uint32,uint32) pure returns (uint32)"
																				}
																			},
																			"id": 2936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33731:102:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2939,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -4,
																						"src": "33868:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 2940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "33868:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "33861:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint32_$",
																					"typeString": "type(uint32)"
																				},
																				"typeName": {
																					"id": 2937,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "33861:6:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33861:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"expression": {
																				"id": 2942,
																				"name": "info",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2870,
																				"src": "33913:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																					"typeString": "struct ExodusBondDepository.Bond memory"
																				}
																			},
																			"id": 2943,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "pricePaid",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "33913:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2918,
																		"name": "Bond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2342,
																		"src": "33650:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Bond_$2342_storage_ptr_$",
																			"typeString": "type(struct ExodusBondDepository.Bond storage pointer)"
																		}
																	},
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [
																		"payout",
																		"vesting",
																		"lastTime",
																		"pricePaid"
																	],
																	"nodeType": "FunctionCall",
																	"src": "33650:292:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																		"typeString": "struct ExodusBondDepository.Bond memory"
																	}
																},
																"src": "33627:315:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bond_$2342_storage",
																	"typeString": "struct ExodusBondDepository.Bond storage ref"
																}
															},
															"id": 2946,
															"nodeType": "ExpressionStatement",
															"src": "33627:315:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2948,
																		"name": "_recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "33975:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2949,
																		"name": "payout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2905,
																		"src": "33987:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2950,
																				"name": "bondInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2316,
																				"src": "33995:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
																					"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
																				}
																			},
																			"id": 2952,
																			"indexExpression": {
																				"id": 2951,
																				"name": "_recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2862,
																				"src": "34004:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33995:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Bond_$2342_storage",
																				"typeString": "struct ExodusBondDepository.Bond storage ref"
																			}
																		},
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "payout",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2335,
																		"src": "33995:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2947,
																	"name": "BondRedeemed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "33962:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33962:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2955,
															"nodeType": "EmitStatement",
															"src": "33957:66:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2957,
																		"name": "_recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "34056:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2958,
																		"name": "_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2864,
																		"src": "34068:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"id": 2959,
																		"name": "payout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2905,
																		"src": "34076:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2956,
																	"name": "stakeOrSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "34044:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,bool,uint256) returns (uint256)"
																	}
																},
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34044:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2868,
															"id": 2961,
															"nodeType": "Return",
															"src": "34037:46:0"
														}
													]
												},
												"id": 2963,
												"nodeType": "IfStatement",
												"src": "33125:969:0",
												"trueBody": {
													"id": 2903,
													"nodeType": "Block",
													"src": "33153:272:0",
													"statements": [
														{
															"expression": {
																"id": 2887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "33198:27:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 2884,
																		"name": "bondInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2316,
																		"src": "33205:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
																			"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
																		}
																	},
																	"id": 2886,
																	"indexExpression": {
																		"id": 2885,
																		"name": "_recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "33214:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33205:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bond_$2342_storage",
																		"typeString": "struct ExodusBondDepository.Bond storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2888,
															"nodeType": "ExpressionStatement",
															"src": "33198:27:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2890,
																		"name": "_recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "33277:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2891,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2870,
																			"src": "33289:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																				"typeString": "struct ExodusBondDepository.Bond memory"
																			}
																		},
																		"id": 2892,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "payout",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2335,
																		"src": "33289:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 2893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33302:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2889,
																	"name": "BondRedeemed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "33264:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33264:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2895,
															"nodeType": "EmitStatement",
															"src": "33259:45:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2897,
																		"name": "_recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "33355:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2898,
																		"name": "_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2864,
																		"src": "33367:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"expression": {
																			"id": 2899,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2870,
																			"src": "33375:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																				"typeString": "struct ExodusBondDepository.Bond memory"
																			}
																		},
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "payout",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2335,
																		"src": "33375:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2896,
																	"name": "stakeOrSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "33343:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,bool,uint256) returns (uint256)"
																	}
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33343:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2868,
															"id": 2902,
															"nodeType": "Return",
															"src": "33336:51:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2860,
										"nodeType": "StructuredDocumentation",
										"src": "32703:130:0",
										"text": "  @notice redeem bond for user\n  @param _recipient address\n  @param _stake bool\n  @return uint"
									},
									"functionSelector": "1feed31f",
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "32854:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "_stake",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "32874:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32874:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32853:33:0"
									},
									"returnParameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "32921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32920:9:0"
									},
									"scope": 3561,
									"src": "32838:1262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3028,
										"nodeType": "Block",
										"src": "34438:600:0",
										"statements": [
											{
												"condition": {
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "34452:7:0",
													"subExpression": {
														"id": 2977,
														"name": "_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2970,
														"src": "34453:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3024,
													"nodeType": "Block",
													"src": "34595:413:0",
													"statements": [
														{
															"condition": {
																"id": 2988,
																"name": "useHelper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "34651:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3022,
																"nodeType": "Block",
																"src": "34865:133:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3010,
																					"name": "staking",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2304,
																					"src": "34904:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3011,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2972,
																					"src": "34913:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3007,
																							"name": "Bash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2292,
																							"src": "34890:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3006,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 940,
																						"src": "34883:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 3008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34883:12:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$940",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 3009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 912,
																				"src": "34883:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34883:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3013,
																		"nodeType": "ExpressionStatement",
																		"src": "34883:38:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3018,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2972,
																					"src": "34963:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3019,
																					"name": "_recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2968,
																					"src": "34972:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3015,
																							"name": "staking",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2304,
																							"src": "34948:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3014,
																						"name": "IStaking",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2233,
																						"src": "34939:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IStaking_$2233_$",
																							"typeString": "type(contract IStaking)"
																						}
																					},
																					"id": 3016,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34939:17:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IStaking_$2233",
																						"typeString": "contract IStaking"
																					}
																				},
																				"id": 3017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stake",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2232,
																				"src": "34939:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (uint256,address) external returns (bool)"
																				}
																			},
																			"id": 3020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34939:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3021,
																		"nodeType": "ExpressionStatement",
																		"src": "34939:44:0"
																	}
																]
															},
															"id": 3023,
															"nodeType": "IfStatement",
															"src": "34647:351:0",
															"trueBody": {
																"id": 3005,
																"nodeType": "Block",
																"src": "34662:197:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2993,
																					"name": "stakingHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2306,
																					"src": "34747:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2994,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2972,
																					"src": "34762:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2990,
																							"name": "Bash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2292,
																							"src": "34733:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2989,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 940,
																						"src": "34726:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 2991,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34726:12:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$940",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 912,
																				"src": "34726:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34726:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2996,
																		"nodeType": "ExpressionStatement",
																		"src": "34726:44:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3001,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2972,
																					"src": "34824:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3002,
																					"name": "_recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2968,
																					"src": "34833:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2998,
																							"name": "stakingHelper",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2306,
																							"src": "34803:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2997,
																						"name": "IStakingHelper",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2241,
																						"src": "34788:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IStakingHelper_$2241_$",
																							"typeString": "type(contract IStakingHelper)"
																						}
																					},
																					"id": 2999,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34788:29:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IStakingHelper_$2241",
																						"typeString": "contract IStakingHelper"
																					}
																				},
																				"id": 3000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stake",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2240,
																				"src": "34788:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
																					"typeString": "function (uint256,address) external"
																				}
																			},
																			"id": 3003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34788:56:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3004,
																		"nodeType": "ExpressionStatement",
																		"src": "34788:56:0"
																	}
																]
															}
														}
													]
												},
												"id": 3025,
												"nodeType": "IfStatement",
												"src": "34448:560:0",
												"trueBody": {
													"id": 2987,
													"nodeType": "Block",
													"src": "34461:128:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2983,
																		"name": "_recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2968,
																		"src": "34543:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2984,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2972,
																		"src": "34555:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2980,
																				"name": "Bash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2292,
																				"src": "34528:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2979,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "34521:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34521:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$940",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 894,
																	"src": "34521:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34521:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2986,
															"nodeType": "ExpressionStatement",
															"src": "34521:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3026,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2972,
													"src": "35024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2976,
												"id": 3027,
												"nodeType": "Return",
												"src": "35017:14:0"
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "34161:144:0",
										"text": "  @notice allow user to stake payout automatically\n  @param _stake bool\n  @param _amount uint\n  @return uint"
									},
									"id": 3029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeOrSend",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "34340:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "_stake",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "34368:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34368:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "34389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34330:80:0"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "34429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34428:9:0"
									},
									"scope": 3561,
									"src": "34310:728:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3131,
										"nodeType": "Block",
										"src": "35152:1027:0",
										"statements": [
											{
												"assignments": [
													3034
												],
												"declarations": [
													{
														"constant": false,
														"id": 3034,
														"mutability": "mutable",
														"name": "timeCanAdjust",
														"nodeType": "VariableDeclaration",
														"scope": 3131,
														"src": "35162:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3033,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3041,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3038,
																"name": "adjustment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "35210:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																	"typeString": "struct ExodusBondDepository.Adjust storage ref"
																}
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buffer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2350,
															"src": "35210:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"expression": {
															"expression": {
																"id": 3035,
																"name": "adjustment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "35186:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																	"typeString": "struct ExodusBondDepository.Adjust storage ref"
																}
															},
															"id": 3036,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2352,
															"src": "35186:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 174,
														"src": "35186:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35186:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35162:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3042,
																"name": "adjustment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "35242:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																	"typeString": "struct ExodusBondDepository.Adjust storage ref"
																}
															},
															"id": 3043,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2346,
															"src": "35242:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 3044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35261:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "35242:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3046,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "35266:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "35266:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 3048,
															"name": "timeCanAdjust",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3034,
															"src": "35285:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "35266:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35242:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3130,
												"nodeType": "IfStatement",
												"src": "35238:935:0",
												"trueBody": {
													"id": 3129,
													"nodeType": "Block",
													"src": "35300:873:0",
													"statements": [
														{
															"assignments": [
																3052
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3052,
																	"mutability": "mutable",
																	"name": "initial",
																	"nodeType": "VariableDeclaration",
																	"scope": 3129,
																	"src": "35314:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3051,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35314:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3055,
															"initialValue": {
																"expression": {
																	"id": 3053,
																	"name": "terms",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "35332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Terms_$2333_storage",
																		"typeString": "struct ExodusBondDepository.Terms storage ref"
																	}
																},
																"id": 3054,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "controlVariable",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2322,
																"src": "35332:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35314:39:0"
														},
														{
															"condition": {
																"expression": {
																	"id": 3056,
																	"name": "adjustment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "35371:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																		"typeString": "struct ExodusBondDepository.Adjust storage ref"
																	}
																},
																"id": 3057,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2344,
																"src": "35371:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3107,
																"nodeType": "Block",
																"src": "35655:262:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 3083,
																					"name": "terms",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "35673:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Terms_$2333_storage",
																						"typeString": "struct ExodusBondDepository.Terms storage ref"
																					}
																				},
																				"id": 3085,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "controlVariable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2322,
																				"src": "35673:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 3089,
																							"name": "adjustment",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2312,
																							"src": "35744:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																								"typeString": "struct ExodusBondDepository.Adjust storage ref"
																							}
																						},
																						"id": 3090,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rate",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2346,
																						"src": "35744:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 3086,
																							"name": "terms",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2310,
																							"src": "35697:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Terms_$2333_storage",
																								"typeString": "struct ExodusBondDepository.Terms storage ref"
																							}
																						},
																						"id": 3087,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "controlVariable",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2322,
																						"src": "35697:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 190,
																					"src": "35697:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35697:80:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "35673:104:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3093,
																		"nodeType": "ExpressionStatement",
																		"src": "35673:104:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3094,
																					"name": "terms",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "35799:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Terms_$2333_storage",
																						"typeString": "struct ExodusBondDepository.Terms storage ref"
																					}
																				},
																				"id": 3095,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "controlVariable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2322,
																				"src": "35799:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"id": 3096,
																					"name": "adjustment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2312,
																					"src": "35824:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																						"typeString": "struct ExodusBondDepository.Adjust storage ref"
																					}
																				},
																				"id": 3097,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "target",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2348,
																				"src": "35824:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "35799:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3106,
																		"nodeType": "IfStatement",
																		"src": "35795:108:0",
																		"trueBody": {
																			"id": 3105,
																			"nodeType": "Block",
																			"src": "35843:60:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 3103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 3099,
																								"name": "adjustment",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2312,
																								"src": "35865:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																									"typeString": "struct ExodusBondDepository.Adjust storage ref"
																								}
																							},
																							"id": 3101,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2346,
																							"src": "35865:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 3102,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35883:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "35865:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3104,
																					"nodeType": "ExpressionStatement",
																					"src": "35865:19:0"
																				}
																			]
																		}
																	}
																]
															},
															"id": 3108,
															"nodeType": "IfStatement",
															"src": "35367:550:0",
															"trueBody": {
																"id": 3082,
																"nodeType": "Block",
																"src": "35387:262:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 3058,
																					"name": "terms",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "35405:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Terms_$2333_storage",
																						"typeString": "struct ExodusBondDepository.Terms storage ref"
																					}
																				},
																				"id": 3060,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "controlVariable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2322,
																				"src": "35405:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 3064,
																							"name": "adjustment",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2312,
																							"src": "35476:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																								"typeString": "struct ExodusBondDepository.Adjust storage ref"
																							}
																						},
																						"id": 3065,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rate",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2346,
																						"src": "35476:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 3061,
																							"name": "terms",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2310,
																							"src": "35429:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Terms_$2333_storage",
																								"typeString": "struct ExodusBondDepository.Terms storage ref"
																							}
																						},
																						"id": 3062,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "controlVariable",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2322,
																						"src": "35429:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 174,
																					"src": "35429:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35429:80:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "35405:104:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3068,
																		"nodeType": "ExpressionStatement",
																		"src": "35405:104:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3069,
																					"name": "terms",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "35531:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Terms_$2333_storage",
																						"typeString": "struct ExodusBondDepository.Terms storage ref"
																					}
																				},
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "controlVariable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2322,
																				"src": "35531:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"expression": {
																					"id": 3071,
																					"name": "adjustment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2312,
																					"src": "35556:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																						"typeString": "struct ExodusBondDepository.Adjust storage ref"
																					}
																				},
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "target",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2348,
																				"src": "35556:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "35531:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3081,
																		"nodeType": "IfStatement",
																		"src": "35527:108:0",
																		"trueBody": {
																			"id": 3080,
																			"nodeType": "Block",
																			"src": "35575:60:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 3078,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 3074,
																								"name": "adjustment",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2312,
																								"src": "35597:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																									"typeString": "struct ExodusBondDepository.Adjust storage ref"
																								}
																							},
																							"id": 3076,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2346,
																							"src": "35597:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 3077,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35615:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "35597:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3079,
																					"nodeType": "ExpressionStatement",
																					"src": "35597:19:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3109,
																		"name": "adjustment",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "35930:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																			"typeString": "struct ExodusBondDepository.Adjust storage ref"
																		}
																	},
																	"id": 3111,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2352,
																	"src": "35930:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3114,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "35959:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "35959:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "35952:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 3112,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "35952:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35952:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "35930:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3118,
															"nodeType": "ExpressionStatement",
															"src": "35930:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3120,
																		"name": "initial",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3052,
																		"src": "36037:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3121,
																			"name": "terms",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "36062:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Terms_$2333_storage",
																				"typeString": "struct ExodusBondDepository.Terms storage ref"
																			}
																		},
																		"id": 3122,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "controlVariable",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2322,
																		"src": "36062:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3123,
																			"name": "adjustment",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2312,
																			"src": "36101:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																				"typeString": "struct ExodusBondDepository.Adjust storage ref"
																			}
																		},
																		"id": 3124,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2346,
																		"src": "36101:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3125,
																			"name": "adjustment",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2312,
																			"src": "36134:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Adjust_$2353_storage",
																				"typeString": "struct ExodusBondDepository.Adjust storage ref"
																			}
																		},
																		"id": 3126,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2344,
																		"src": "36134:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3119,
																	"name": "ControlVariableAdjustment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "35994:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,bool)"
																	}
																},
																"id": 3127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35994:168:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3128,
															"nodeType": "EmitStatement",
															"src": "35989:173:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3030,
										"nodeType": "StructuredDocumentation",
										"src": "35044:76:0",
										"text": "  @notice makes incremental adjustment to control variable"
									},
									"id": 3132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "adjust",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35140:2:0"
									},
									"returnParameters": {
										"id": 3032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35152:0:0"
									},
									"scope": 3561,
									"src": "35125:1054:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3152,
										"nodeType": "Block",
										"src": "36265:100:0",
										"statements": [
											{
												"expression": {
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3136,
														"name": "totalDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "36275:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3139,
																	"name": "debtDecay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3427,
																	"src": "36301:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 3140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36301:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3137,
																"name": "totalDebt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "36287:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "36287:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36287:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36275:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3143,
												"nodeType": "ExpressionStatement",
												"src": "36275:38:0"
											},
											{
												"expression": {
													"id": 3150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3144,
														"name": "lastDecay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "36323:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3147,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "36342:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "36342:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36335:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 3145,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "36335:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 3149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36335:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "36323:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3151,
												"nodeType": "ExpressionStatement",
												"src": "36323:35:0"
											}
										]
									},
									"documentation": {
										"id": 3133,
										"nodeType": "StructuredDocumentation",
										"src": "36185:45:0",
										"text": "  @notice reduce total debt"
									},
									"id": 3153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decayDebt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36253:2:0"
									},
									"returnParameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36265:0:0"
									},
									"scope": 3561,
									"src": "36235:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3172,
										"nodeType": "Block",
										"src": "36547:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "313030303030",
															"id": 3169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36616:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000_by_1",
																"typeString": "int_const 100000"
															},
															"value": "100000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100000_by_1",
																"typeString": "int_const 100000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3165,
																		"name": "terms",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "36595:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Terms_$2333_storage",
																			"typeString": "struct ExodusBondDepository.Terms storage ref"
																		}
																	},
																	"id": 3166,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "maxPayout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2326,
																	"src": "36595:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3160,
																					"name": "Bash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2292,
																					"src": "36571:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3159,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "36564:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 3161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36564:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$940",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 878,
																		"src": "36564:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 3163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36564:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 294,
																"src": "36564:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36564:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "36564:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36564:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3158,
												"id": 3171,
												"nodeType": "Return",
												"src": "36557:66:0"
											}
										]
									},
									"documentation": {
										"id": 3154,
										"nodeType": "StructuredDocumentation",
										"src": "36415:76:0",
										"text": "  @notice determine maximum bond size\n  @return uint"
									},
									"functionSelector": "e0176de8",
									"id": 3173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxPayout",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36514:2:0"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "36538:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36537:9:0"
									},
									"scope": 3561,
									"src": "36496:134:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3193,
										"nodeType": "Block",
										"src": "36817:235:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31653136",
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37027:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															},
															"value": "1e16"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 3183,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3176,
																			"src": "36967:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3184,
																				"name": "bondPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3227,
																				"src": "36975:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 3185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36975:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3181,
																			"name": "FixedPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "36947:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_FixedPoint_$2206_$",
																				"typeString": "type(library FixedPoint)"
																			}
																		},
																		"id": 3182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fraction",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2205,
																		"src": "36947:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_struct$_uq112x112_$2068_memory_ptr_$",
																			"typeString": "function (uint256,uint256) pure returns (struct FixedPoint.uq112x112 memory)"
																		}
																	},
																	"id": 3186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36947:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
																		"typeString": "struct FixedPoint.uq112x112 memory"
																	}
																},
																"id": 3187,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "decode112with18",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2115,
																"src": "36947:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_uq112x112_$2068_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_uq112x112_$2068_memory_ptr_$",
																	"typeString": "function (struct FixedPoint.uq112x112 memory) pure returns (uint256)"
																}
															},
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36947:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "36947:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36947:98:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3180,
												"id": 3192,
												"nodeType": "Return",
												"src": "36928:117:0"
											}
										]
									},
									"documentation": {
										"id": 3174,
										"nodeType": "StructuredDocumentation",
										"src": "36636:111:0",
										"text": "  @notice calculate interest due for new bond\n  @param _value uint\n  @return uint"
									},
									"functionSelector": "7927ebf8",
									"id": 3194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payoutFor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "36771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36770:16:0"
									},
									"returnParameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "36808:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36807:9:0"
									},
									"scope": 3561,
									"src": "36752:300:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3226,
										"nodeType": "Block",
										"src": "37207:205:0",
										"statements": [
											{
												"expression": {
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3200,
														"name": "price_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3198,
														"src": "37217:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "316537",
																"id": 3211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37298:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000_by_1",
																	"typeString": "int_const 10000000"
																},
																"value": "1e7"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_10000000_by_1",
																	"typeString": "int_const 10000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31303030303030303030",
																		"id": 3208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37269:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000_by_1",
																			"typeString": "int_const 1000000000"
																		},
																		"value": "1000000000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000_by_1",
																			"typeString": "int_const 1000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 3204,
																					"name": "debtRatio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3348,
																					"src": "37252:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 3205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "37252:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 3201,
																					"name": "terms",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "37226:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Terms_$2333_storage",
																						"typeString": "struct ExodusBondDepository.Terms storage ref"
																					}
																				},
																				"id": 3202,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "controlVariable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2322,
																				"src": "37226:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 294,
																			"src": "37226:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37226:38:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 174,
																	"src": "37226:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37226:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "37226:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37226:85:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37217:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3214,
												"nodeType": "ExpressionStatement",
												"src": "37217:94:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3215,
														"name": "price_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3198,
														"src": "37325:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3216,
															"name": "terms",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "37334:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Terms_$2333_storage",
																"typeString": "struct ExodusBondDepository.Terms storage ref"
															}
														},
														"id": 3217,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "minimumPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2324,
														"src": "37334:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37325:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3225,
												"nodeType": "IfStatement",
												"src": "37321:85:0",
												"trueBody": {
													"id": 3224,
													"nodeType": "Block",
													"src": "37354:52:0",
													"statements": [
														{
															"expression": {
																"id": 3222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3219,
																	"name": "price_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3198,
																	"src": "37368:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3220,
																		"name": "terms",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "37377:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Terms_$2333_storage",
																			"typeString": "struct ExodusBondDepository.Terms storage ref"
																		}
																	},
																	"id": 3221,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "minimumPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2324,
																	"src": "37377:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37368:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3223,
															"nodeType": "ExpressionStatement",
															"src": "37368:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3195,
										"nodeType": "StructuredDocumentation",
										"src": "37058:86:0",
										"text": "  @notice calculate current bond premium\n  @return price_ uint"
									},
									"functionSelector": "d7ccfb0b",
									"id": 3227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37167:2:0"
									},
									"returnParameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "price_",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "37191:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37190:16:0"
									},
									"scope": 3561,
									"src": "37149:263:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3271,
										"nodeType": "Block",
										"src": "37589:287:0",
										"statements": [
											{
												"expression": {
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3233,
														"name": "price_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3231,
														"src": "37599:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "316537",
																"id": 3244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37680:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000_by_1",
																	"typeString": "int_const 10000000"
																},
																"value": "1e7"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_10000000_by_1",
																	"typeString": "int_const 10000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31303030303030303030",
																		"id": 3241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37651:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000_by_1",
																			"typeString": "int_const 1000000000"
																		},
																		"value": "1000000000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000_by_1",
																			"typeString": "int_const 1000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 3237,
																					"name": "debtRatio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3348,
																					"src": "37634:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 3238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "37634:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 3234,
																					"name": "terms",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "37608:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Terms_$2333_storage",
																						"typeString": "struct ExodusBondDepository.Terms storage ref"
																					}
																				},
																				"id": 3235,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "controlVariable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2322,
																				"src": "37608:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 294,
																			"src": "37608:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37608:38:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 174,
																	"src": "37608:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37608:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "37608:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37608:85:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37599:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3247,
												"nodeType": "ExpressionStatement",
												"src": "37599:94:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3248,
														"name": "price_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3231,
														"src": "37707:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3249,
															"name": "terms",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "37716:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Terms_$2333_storage",
																"typeString": "struct ExodusBondDepository.Terms storage ref"
															}
														},
														"id": 3250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "minimumPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2324,
														"src": "37716:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37707:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3258,
																"name": "terms",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "37798:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Terms_$2333_storage",
																	"typeString": "struct ExodusBondDepository.Terms storage ref"
																}
															},
															"id": 3259,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "minimumPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2324,
															"src": "37798:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 3260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37820:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "37798:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3269,
													"nodeType": "IfStatement",
													"src": "37794:76:0",
													"trueBody": {
														"id": 3268,
														"nodeType": "Block",
														"src": "37823:47:0",
														"statements": [
															{
																"expression": {
																	"id": 3266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 3262,
																			"name": "terms",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "37837:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Terms_$2333_storage",
																				"typeString": "struct ExodusBondDepository.Terms storage ref"
																			}
																		},
																		"id": 3264,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "minimumPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2324,
																		"src": "37837:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 3265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "37837:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3267,
																"nodeType": "ExpressionStatement",
																"src": "37837:22:0"
															}
														]
													}
												},
												"id": 3270,
												"nodeType": "IfStatement",
												"src": "37703:167:0",
												"trueBody": {
													"id": 3257,
													"nodeType": "Block",
													"src": "37736:52:0",
													"statements": [
														{
															"expression": {
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3252,
																	"name": "price_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3231,
																	"src": "37750:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3253,
																		"name": "terms",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "37759:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Terms_$2333_storage",
																			"typeString": "struct ExodusBondDepository.Terms storage ref"
																		}
																	},
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "minimumPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2324,
																	"src": "37759:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37750:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3256,
															"nodeType": "ExpressionStatement",
															"src": "37750:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3228,
										"nodeType": "StructuredDocumentation",
										"src": "37418:110:0",
										"text": "  @notice calculate current bond price and remove floor if above\n  @return price_ uint"
									},
									"id": 3272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_bondPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37552:2:0"
									},
									"returnParameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "price_",
												"nodeType": "VariableDeclaration",
												"scope": 3272,
												"src": "37573:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37572:16:0"
									},
									"scope": 3561,
									"src": "37533:343:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3315,
										"nodeType": "Block",
										"src": "38038:280:0",
										"statements": [
											{
												"condition": {
													"id": 3278,
													"name": "isLiquidityBond",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2300,
													"src": "38052:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3313,
													"nodeType": "Block",
													"src": "38220:92:0",
													"statements": [
														{
															"expression": {
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3296,
																	"name": "price_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3276,
																	"src": "38234:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 3309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38297:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3300,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "38259:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"arguments": [
																									{
																										"id": 3302,
																										"name": "principle",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2294,
																										"src": "38270:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 3301,
																									"name": "IERC20",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 940,
																									"src": "38263:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																										"typeString": "type(contract IERC20)"
																									}
																								},
																								"id": 3303,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "38263:17:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$940",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 3304,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "decimals",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 873,
																							"src": "38263:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																								"typeString": "function () view external returns (uint8)"
																							}
																						},
																						"id": 3305,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "38263:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "38259:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3297,
																						"name": "bondPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3227,
																						"src": "38243:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 3298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38243:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 294,
																				"src": "38243:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38243:49:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 310,
																		"src": "38243:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38243:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38234:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3312,
															"nodeType": "ExpressionStatement",
															"src": "38234:67:0"
														}
													]
												},
												"id": 3314,
												"nodeType": "IfStatement",
												"src": "38048:264:0",
												"trueBody": {
													"id": 3295,
													"nodeType": "Block",
													"src": "38069:145:0",
													"statements": [
														{
															"expression": {
																"id": 3293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3279,
																	"name": "price_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3276,
																	"src": "38083:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 3291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38199:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 3287,
																							"name": "principle",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2294,
																							"src": "38166:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 3284,
																									"name": "bondCalculator",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2302,
																									"src": "38141:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 3283,
																								"name": "IBondCalculator",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2223,
																								"src": "38125:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IBondCalculator_$2223_$",
																									"typeString": "type(contract IBondCalculator)"
																								}
																							},
																							"id": 3285,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "38125:31:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IBondCalculator_$2223",
																								"typeString": "contract IBondCalculator"
																							}
																						},
																						"id": 3286,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "markdown",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2222,
																						"src": "38125:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view external returns (uint256)"
																						}
																					},
																					"id": 3288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38125:51:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3280,
																						"name": "bondPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3227,
																						"src": "38092:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 3281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38092:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 294,
																				"src": "38092:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38092:85:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 310,
																		"src": "38092:106:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38092:111:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38083:120:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3294,
															"nodeType": "ExpressionStatement",
															"src": "38083:120:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3273,
										"nodeType": "StructuredDocumentation",
										"src": "37882:88:0",
										"text": "  @notice converts bond price to DAI value\n  @return price_ uint"
									},
									"functionSelector": "844b5c7c",
									"id": 3316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondPriceInUSD",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37998:2:0"
									},
									"returnParameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "price_",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "38022:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38021:16:0"
									},
									"scope": 3561,
									"src": "37975:343:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3347,
										"nodeType": "Block",
										"src": "38497:201:0",
										"statements": [
											{
												"assignments": [
													3323
												],
												"declarations": [
													{
														"constant": false,
														"id": 3323,
														"mutability": "mutable",
														"name": "supply",
														"nodeType": "VariableDeclaration",
														"scope": 3347,
														"src": "38507:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3329,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 3325,
																	"name": "Bash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "38531:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3324,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "38524:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38524:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														"id": 3327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 878,
														"src": "38524:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38524:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38507:43:0"
											},
											{
												"expression": {
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3330,
														"name": "debtRatio_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3320,
														"src": "38560:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 3343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38686:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "316539",
																						"id": 3336,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "38624:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000_by_1",
																							"typeString": "int_const 1000000000"
																						},
																						"value": "1e9"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1000000000_by_1",
																							"typeString": "int_const 1000000000"
																						}
																					],
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 3333,
																							"name": "currentDebt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3389,
																							"src": "38606:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																								"typeString": "function () view returns (uint256)"
																							}
																						},
																						"id": 3334,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "38606:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3335,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 294,
																					"src": "38606:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "38606:22:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 3338,
																				"name": "supply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3323,
																				"src": "38630:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3331,
																				"name": "FixedPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2206,
																				"src": "38573:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FixedPoint_$2206_$",
																					"typeString": "type(library FixedPoint)"
																				}
																			},
																			"id": 3332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "fraction",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2205,
																			"src": "38573:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_struct$_uq112x112_$2068_memory_ptr_$",
																				"typeString": "function (uint256,uint256) pure returns (struct FixedPoint.uq112x112 memory)"
																			}
																		},
																		"id": 3339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38573:64:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_uq112x112_$2068_memory_ptr",
																			"typeString": "struct FixedPoint.uq112x112 memory"
																		}
																	},
																	"id": 3340,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decode112with18",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2115,
																	"src": "38573:93:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_uq112x112_$2068_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_uq112x112_$2068_memory_ptr_$",
																		"typeString": "function (struct FixedPoint.uq112x112 memory) pure returns (uint256)"
																	}
																},
																"id": 3341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38573:95:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "38573:112:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38573:118:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38560:131:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3346,
												"nodeType": "ExpressionStatement",
												"src": "38560:131:0"
											}
										]
									},
									"documentation": {
										"id": 3317,
										"nodeType": "StructuredDocumentation",
										"src": "38324:106:0",
										"text": "  @notice calculate current ratio of debt to BASH supply\n  @return debtRatio_ uint"
									},
									"functionSelector": "cea55f57",
									"id": 3348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "debtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38453:2:0"
									},
									"returnParameters": {
										"id": 3321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3320,
												"mutability": "mutable",
												"name": "debtRatio_",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "38477:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38476:20:0"
									},
									"scope": 3561,
									"src": "38435:263:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3375,
										"nodeType": "Block",
										"src": "38878:253:0",
										"statements": [
											{
												"condition": {
													"id": 3354,
													"name": "isLiquidityBond",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2300,
													"src": "38892:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3373,
													"nodeType": "Block",
													"src": "39082:43:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3370,
																	"name": "debtRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3348,
																	"src": "39103:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 3371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39103:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3353,
															"id": 3372,
															"nodeType": "Return",
															"src": "39096:18:0"
														}
													]
												},
												"id": 3374,
												"nodeType": "IfStatement",
												"src": "38888:237:0",
												"trueBody": {
													"id": 3369,
													"nodeType": "Block",
													"src": "38909:167:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "316539",
																		"id": 3366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39061:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000_by_1",
																			"typeString": "int_const 1000000000"
																		},
																		"value": "1e9"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000_by_1",
																			"typeString": "int_const 1000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 3362,
																						"name": "principle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2294,
																						"src": "39024:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 3359,
																								"name": "bondCalculator",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2302,
																								"src": "38999:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 3358,
																							"name": "IBondCalculator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2223,
																							"src": "38983:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IBondCalculator_$2223_$",
																								"typeString": "type(contract IBondCalculator)"
																							}
																						},
																						"id": 3360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "38983:31:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IBondCalculator_$2223",
																							"typeString": "contract IBondCalculator"
																						}
																					},
																					"id": 3361,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "markdown",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2222,
																					"src": "38983:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 3363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "38983:51:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 3355,
																					"name": "debtRatio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3348,
																					"src": "38946:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 3356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "38946:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 294,
																			"src": "38946:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38946:89:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 310,
																	"src": "38946:114:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38946:119:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3353,
															"id": 3368,
															"nodeType": "Return",
															"src": "38923:142:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3349,
										"nodeType": "StructuredDocumentation",
										"src": "38704:104:0",
										"text": "  @notice debt ratio in same terms for reserve or liquidity bonds\n  @return uint"
									},
									"functionSelector": "904b3ece",
									"id": 3376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "standardizedDebtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38843:2:0"
									},
									"returnParameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "38869:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38868:9:0"
									},
									"scope": 3561,
									"src": "38813:318:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3388,
										"nodeType": "Block",
										"src": "39277:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3384,
																"name": "debtDecay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3427,
																"src": "39308:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 3385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39308:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3382,
															"name": "totalDebt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "39294:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "39294:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39294:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3381,
												"id": 3387,
												"nodeType": "Return",
												"src": "39287:33:0"
											}
										]
									},
									"documentation": {
										"id": 3377,
										"nodeType": "StructuredDocumentation",
										"src": "39137:82:0",
										"text": "  @notice calculate debt factoring in decay\n  @return uint"
									},
									"functionSelector": "759076e5",
									"id": 3389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentDebt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39244:2:0"
									},
									"returnParameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3389,
												"src": "39268:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39267:9:0"
									},
									"scope": 3561,
									"src": "39224:103:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3426,
										"nodeType": "Block",
										"src": "39481:226:0",
										"statements": [
											{
												"assignments": [
													3396
												],
												"declarations": [
													{
														"constant": false,
														"id": 3396,
														"mutability": "mutable",
														"name": "timeSinceLast",
														"nodeType": "VariableDeclaration",
														"scope": 3426,
														"src": "39491:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 3395,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "39491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3405,
												"initialValue": {
													"arguments": [
														{
															"id": 3403,
															"name": "lastDecay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "39544:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3399,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "39521:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "39521:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39514:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 3397,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "39514:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39514:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"id": 3402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub32",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 233,
														"src": "39514:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$returns$_t_uint32_$bound_to$_t_uint32_$",
															"typeString": "function (uint32,uint32) pure returns (uint32)"
														}
													},
													"id": 3404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39514:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39491:63:0"
											},
											{
												"expression": {
													"id": 3415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3406,
														"name": "decay_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3393,
														"src": "39564:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3412,
																	"name": "terms",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "39606:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Terms_$2333_storage",
																		"typeString": "struct ExodusBondDepository.Terms storage ref"
																	}
																},
																"id": 3413,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "vestingTerm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2332,
																"src": "39606:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 3409,
																		"name": "timeSinceLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3396,
																		"src": "39587:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"expression": {
																		"id": 3407,
																		"name": "totalDebt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2318,
																		"src": "39573:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 294,
																	"src": "39573:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39573:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "39573:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39573:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39564:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3416,
												"nodeType": "ExpressionStatement",
												"src": "39564:60:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3417,
														"name": "decay_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3393,
														"src": "39638:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3418,
														"name": "totalDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "39647:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39638:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3425,
												"nodeType": "IfStatement",
												"src": "39634:67:0",
												"trueBody": {
													"id": 3424,
													"nodeType": "Block",
													"src": "39658:43:0",
													"statements": [
														{
															"expression": {
																"id": 3422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3420,
																	"name": "decay_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3393,
																	"src": "39672:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3421,
																	"name": "totalDebt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "39681:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39672:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3423,
															"nodeType": "ExpressionStatement",
															"src": "39672:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3390,
										"nodeType": "StructuredDocumentation",
										"src": "39333:85:0",
										"text": "  @notice amount to decay total debt by\n  @return decay_ uint"
									},
									"functionSelector": "e392a262",
									"id": 3427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "debtDecay",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39441:2:0"
									},
									"returnParameters": {
										"id": 3394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3393,
												"mutability": "mutable",
												"name": "decay_",
												"nodeType": "VariableDeclaration",
												"scope": 3427,
												"src": "39465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39464:16:0"
									},
									"scope": 3561,
									"src": "39423:284:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3478,
										"nodeType": "Block",
										"src": "39980:333:0",
										"statements": [
											{
												"assignments": [
													3436
												],
												"declarations": [
													{
														"constant": false,
														"id": 3436,
														"mutability": "mutable",
														"name": "bond",
														"nodeType": "VariableDeclaration",
														"scope": 3478,
														"src": "39990:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
															"typeString": "struct ExodusBondDepository.Bond"
														},
														"typeName": {
															"id": 3435,
															"name": "Bond",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2342,
															"src": "39990:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bond_$2342_storage_ptr",
																"typeString": "struct ExodusBondDepository.Bond"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3440,
												"initialValue": {
													"baseExpression": {
														"id": 3437,
														"name": "bondInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "40009:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
															"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
														}
													},
													"id": 3439,
													"indexExpression": {
														"id": 3438,
														"name": "_depositor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3430,
														"src": "40018:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40009:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bond_$2342_storage",
														"typeString": "struct ExodusBondDepository.Bond storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39990:39:0"
											},
											{
												"assignments": [
													3442
												],
												"declarations": [
													{
														"constant": false,
														"id": 3442,
														"mutability": "mutable",
														"name": "secondsSinceLast",
														"nodeType": "VariableDeclaration",
														"scope": 3478,
														"src": "40039:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3452,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3449,
																"name": "bond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3436,
																"src": "40094:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
																	"typeString": "struct ExodusBondDepository.Bond memory"
																}
															},
															"id": 3450,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2339,
															"src": "40094:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3445,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "40073:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "40073:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40066:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 3443,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "40066:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40066:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"id": 3448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "40066:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40066:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40039:69:0"
											},
											{
												"assignments": [
													3454
												],
												"declarations": [
													{
														"constant": false,
														"id": 3454,
														"mutability": "mutable",
														"name": "vesting",
														"nodeType": "VariableDeclaration",
														"scope": 3478,
														"src": "40118:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40118:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3457,
												"initialValue": {
													"expression": {
														"id": 3455,
														"name": "bond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3436,
														"src": "40136:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bond_$2342_memory_ptr",
															"typeString": "struct ExodusBondDepository.Bond memory"
														}
													},
													"id": 3456,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "vesting",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2341,
													"src": "40136:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40118:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3458,
														"name": "vesting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3454,
														"src": "40163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40173:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40163:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3476,
													"nodeType": "Block",
													"src": "40264:43:0",
													"statements": [
														{
															"expression": {
																"id": 3474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3472,
																	"name": "percentVested_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3433,
																	"src": "40278:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 3473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40295:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "40278:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3475,
															"nodeType": "ExpressionStatement",
															"src": "40278:18:0"
														}
													]
												},
												"id": 3477,
												"nodeType": "IfStatement",
												"src": "40159:148:0",
												"trueBody": {
													"id": 3471,
													"nodeType": "Block",
													"src": "40176:82:0",
													"statements": [
														{
															"expression": {
																"id": 3469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3461,
																	"name": "percentVested_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3433,
																	"src": "40190:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3467,
																			"name": "vesting",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3454,
																			"src": "40239:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "3130303030",
																					"id": 3464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "40228:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"id": 3462,
																					"name": "secondsSinceLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3442,
																					"src": "40207:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 294,
																				"src": "40207:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40207:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 310,
																		"src": "40207:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40207:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40190:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3470,
															"nodeType": "ExpressionStatement",
															"src": "40190:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3428,
										"nodeType": "StructuredDocumentation",
										"src": "39713:143:0",
										"text": "  @notice calculate how far into vesting a depositor is\n  @param _depositor address\n  @return percentVested_ uint"
									},
									"functionSelector": "507930ec",
									"id": 3479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentVestedFor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3430,
												"mutability": "mutable",
												"name": "_depositor",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "39887:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39886:20:0"
									},
									"returnParameters": {
										"id": 3434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "percentVested_",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "39952:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39951:24:0"
									},
									"scope": 3561,
									"src": "39861:452:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3520,
										"nodeType": "Block",
										"src": "40599:293:0",
										"statements": [
											{
												"assignments": [
													3488
												],
												"declarations": [
													{
														"constant": false,
														"id": 3488,
														"mutability": "mutable",
														"name": "percentVested",
														"nodeType": "VariableDeclaration",
														"scope": 3520,
														"src": "40609:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3492,
												"initialValue": {
													"arguments": [
														{
															"id": 3490,
															"name": "_depositor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3482,
															"src": "40650:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3489,
														"name": "percentVestedFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3479,
														"src": "40633:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40633:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40609:52:0"
											},
											{
												"assignments": [
													3494
												],
												"declarations": [
													{
														"constant": false,
														"id": 3494,
														"mutability": "mutable",
														"name": "payout",
														"nodeType": "VariableDeclaration",
														"scope": 3520,
														"src": "40671:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3499,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3495,
															"name": "bondInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "40688:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bond_$2342_storage_$",
																"typeString": "mapping(address => struct ExodusBondDepository.Bond storage ref)"
															}
														},
														"id": 3497,
														"indexExpression": {
															"id": 3496,
															"name": "_depositor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3482,
															"src": "40697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "40688:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bond_$2342_storage",
															"typeString": "struct ExodusBondDepository.Bond storage ref"
														}
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "payout",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2335,
													"src": "40688:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40671:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3500,
														"name": "percentVested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3488,
														"src": "40730:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 3501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40747:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "40730:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3518,
													"nodeType": "Block",
													"src": "40808:78:0",
													"statements": [
														{
															"expression": {
																"id": 3516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3508,
																	"name": "pendingPayout_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "40822:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "3130303030",
																			"id": 3514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "40869:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3511,
																					"name": "percentVested",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3488,
																					"src": "40850:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3509,
																					"name": "payout",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3494,
																					"src": "40839:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 294,
																				"src": "40839:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40839:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 310,
																		"src": "40839:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40839:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40822:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3517,
															"nodeType": "ExpressionStatement",
															"src": "40822:53:0"
														}
													]
												},
												"id": 3519,
												"nodeType": "IfStatement",
												"src": "40726:160:0",
												"trueBody": {
													"id": 3507,
													"nodeType": "Block",
													"src": "40754:48:0",
													"statements": [
														{
															"expression": {
																"id": 3505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3503,
																	"name": "pendingPayout_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "40768:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3504,
																	"name": "payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3494,
																	"src": "40785:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40768:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3506,
															"nodeType": "ExpressionStatement",
															"src": "40768:23:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3480,
										"nodeType": "StructuredDocumentation",
										"src": "40319:154:0",
										"text": "  @notice calculate amount of OHM available for claim by depositor\n  @param _depositor address\n  @return pendingPayout_ uint"
									},
									"functionSelector": "01b88ee8",
									"id": 3521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPayoutFor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3482,
												"mutability": "mutable",
												"name": "_depositor",
												"nodeType": "VariableDeclaration",
												"scope": 3521,
												"src": "40504:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40503:20:0"
									},
									"returnParameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "pendingPayout_",
												"nodeType": "VariableDeclaration",
												"scope": 3521,
												"src": "40571:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40570:24:0"
									},
									"scope": 3561,
									"src": "40478:414:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3559,
										"nodeType": "Block",
										"src": "41128:216:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3530,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3524,
																"src": "41146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3531,
																"name": "Bash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "41156:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "41146:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "41138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41138:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3534,
												"nodeType": "ExpressionStatement",
												"src": "41138:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3536,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3524,
																"src": "41179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3537,
																"name": "principle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2294,
																"src": "41189:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "41179:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "41171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41171:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3540,
												"nodeType": "ExpressionStatement",
												"src": "41171:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3545,
															"name": "DAO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "41250:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3552,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "41300:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ExodusBondDepository_$3561",
																				"typeString": "contract ExodusBondDepository"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ExodusBondDepository_$3561",
																				"typeString": "contract ExodusBondDepository"
																			}
																		],
																		"id": 3551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "41292:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3550,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "41292:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41292:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3547,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3524,
																			"src": "41274:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3546,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "41267:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 3548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41267:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$940",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 885,
																"src": "41267:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 3554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41267:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3542,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3524,
																	"src": "41216:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3541,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "41209:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$940_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41209:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$940",
																"typeString": "contract IERC20"
															}
														},
														"id": 3544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1677,
														"src": "41209:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$940_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$940_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41209:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3556,
												"nodeType": "ExpressionStatement",
												"src": "41209:107:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3557,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3528,
												"id": 3558,
												"nodeType": "Return",
												"src": "41326:11:0"
											}
										]
									},
									"documentation": {
										"id": 3522,
										"nodeType": "StructuredDocumentation",
										"src": "40936:121:0",
										"text": "  @notice allow anyone to send lost tokens (excluding principle or OHM) to the DAO\n  @return bool"
									},
									"functionSelector": "b4abccba",
									"id": 3560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverLostToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3524,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "41088:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41087:16:0"
									},
									"returnParameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "41122:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41122:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41121:6:0"
									},
									"scope": 3561,
									"src": "41062:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3562,
							"src": "23498:17848:0"
						}
					],
					"src": "46:41301:0"
				},
				"id": 0
			},
			"daibond/ITreasury.sol": {
				"ast": {
					"absolutePath": "daibond/ITreasury.sol",
					"exportedSymbols": {
						"ITreasury": [
							3591
						]
					},
					"id": 3592,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3563,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3591,
							"linearizedBaseContracts": [
								3591
							],
							"name": "ITreasury",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f1821783",
									"id": 3572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "132:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:33:1"
									},
									"returnParameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:9:1"
									},
									"scope": 3591,
									"src": "96:109:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc157ac1",
									"id": 3583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3574,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3583,
												"src": "237:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 3583,
												"src": "262:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "_profit",
												"nodeType": "VariableDeclaration",
												"scope": 3583,
												"src": "286:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:80:1"
									},
									"returnParameters": {
										"id": 3582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3583,
												"src": "326:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:9:1"
									},
									"scope": 3591,
									"src": "211:124:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a20de92",
									"id": 3590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3585,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "362:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3587,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "382:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:37:1"
									},
									"returnParameters": {
										"id": 3589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:0:1"
									},
									"scope": 3591,
									"src": "341:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3592,
							"src": "70:340:1"
						}
					],
					"src": "46:365:1"
				},
				"id": 1
			}
		}
	}
}